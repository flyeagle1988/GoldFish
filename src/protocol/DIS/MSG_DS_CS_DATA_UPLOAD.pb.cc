// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSG_DS_CS_DATA_UPLOAD.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MSG_DS_CS_DATA_UPLOAD.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MSG_DS_CS_DATA_UPLOAD_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_CS_DATA_UPLOAD_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_CS_DS_DATA_UPLOAD_ACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_CS_DS_DATA_UPLOAD_ACK_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto() {
  protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MSG_DS_CS_DATA_UPLOAD.proto");
  GOOGLE_CHECK(file != NULL);
  MSG_DS_CS_DATA_UPLOAD_descriptor_ = file->message_type(0);
  static const int MSG_DS_CS_DATA_UPLOAD_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD, dbname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD, coldictdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD, rowtabledata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD, taskid_),
  };
  MSG_DS_CS_DATA_UPLOAD_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_CS_DATA_UPLOAD_descriptor_,
      MSG_DS_CS_DATA_UPLOAD::default_instance_,
      MSG_DS_CS_DATA_UPLOAD_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_CS_DATA_UPLOAD));
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_descriptor_ = MSG_DS_CS_DATA_UPLOAD_descriptor_->nested_type(0);
  static const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO, colname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO, coltype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO, dictdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO, indexoffsets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO, indexpost_),
  };
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_descriptor_,
      MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::default_instance_,
      MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO));
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_descriptor_ = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_descriptor_->nested_type(0);
  static const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO, strvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO, ivalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO, fvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO, dvalue_),
  };
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_descriptor_,
      MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::default_instance_,
      MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO));
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_descriptor_ = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_descriptor_->enum_type(0);
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_descriptor_ = MSG_DS_CS_DATA_UPLOAD_descriptor_->nested_type(1);
  static const int MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO, rownum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO, rowdata_),
  };
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_descriptor_,
      MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::default_instance_,
      MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO));
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_descriptor_ = MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_descriptor_->nested_type(0);
  static const int MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO, colname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO, rowentry_),
  };
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_descriptor_,
      MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::default_instance_,
      MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO));
  MSG_CS_DS_DATA_UPLOAD_ACK_descriptor_ = file->message_type(1);
  static const int MSG_CS_DS_DATA_UPLOAD_ACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_CS_DS_DATA_UPLOAD_ACK, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_CS_DS_DATA_UPLOAD_ACK, statuscode_),
  };
  MSG_CS_DS_DATA_UPLOAD_ACK_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_CS_DS_DATA_UPLOAD_ACK_descriptor_,
      MSG_CS_DS_DATA_UPLOAD_ACK::default_instance_,
      MSG_CS_DS_DATA_UPLOAD_ACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_CS_DS_DATA_UPLOAD_ACK, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_CS_DS_DATA_UPLOAD_ACK, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_CS_DS_DATA_UPLOAD_ACK));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_CS_DATA_UPLOAD_descriptor_, &MSG_DS_CS_DATA_UPLOAD::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_descriptor_, &MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_descriptor_, &MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_descriptor_, &MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_descriptor_, &MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_CS_DS_DATA_UPLOAD_ACK_descriptor_, &MSG_CS_DS_DATA_UPLOAD_ACK::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto() {
  delete MSG_DS_CS_DATA_UPLOAD::default_instance_;
  delete MSG_DS_CS_DATA_UPLOAD_reflection_;
  delete MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::default_instance_;
  delete MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_reflection_;
  delete MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::default_instance_;
  delete MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_reflection_;
  delete MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::default_instance_;
  delete MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_reflection_;
  delete MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::default_instance_;
  delete MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_reflection_;
  delete MSG_CS_DS_DATA_UPLOAD_ACK::default_instance_;
  delete MSG_CS_DS_DATA_UPLOAD_ACK_reflection_;
}

void protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033MSG_DS_CS_DATA_UPLOAD.proto\"\304\005\n\025MSG_DS"
    "_CS_DATA_UPLOAD\022\016\n\006dbName\030\001 \002(\t\022\021\n\ttable"
    "Name\030\002 \002(\t\022;\n\013colDictData\030\003 \003(\0132&.MSG_DS"
    "_CS_DATA_UPLOAD.TABLE_DICT_INFO\022;\n\014rowTa"
    "bleData\030\004 \003(\0132%.MSG_DS_CS_DATA_UPLOAD.RO"
    "W_TABLE_INFO\022\016\n\006taskID\030\005 \002(\r\032\352\002\n\017TABLE_D"
    "ICT_INFO\022\017\n\007colName\030\001 \002(\t\022H\n\007colType\030\002 \002"
    "(\0162/.MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_IN"
    "FO.COL_TYPE:\006STRING\022G\n\010dictData\030\003 \003(\01325."
    "MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DI"
    "CT_DATA_INFO\022\024\n\014indexOffsets\030\004 \003(\r\022\021\n\tin"
    "dexPost\030\005 \003(\r\032R\n\016DICT_DATA_INFO\022\020\n\010strVa"
    "lue\030\001 \001(\t\022\016\n\006iValue\030\002 \001(\005\022\016\n\006fValue\030\003 \001("
    "\002\022\016\n\006dValue\030\004 \001(\001\"6\n\010COL_TYPE\022\n\n\006STRING\020"
    "\000\022\007\n\003INT\020\001\022\t\n\005FLOAT\020\002\022\n\n\006DOUBLE\020\003\032\220\001\n\016RO"
    "W_TABLE_INFO\022\016\n\006rowNum\030\001 \002(\r\022\?\n\007rowData\030"
    "\002 \003(\0132..MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_"
    "INFO.ROW_INFO\032-\n\010ROW_INFO\022\017\n\007colName\030\001 \002"
    "(\t\022\020\n\010rowEntry\030\002 \002(\r\"\?\n\031MSG_CS_DS_DATA_U"
    "PLOAD_ACK\022\016\n\006taskID\030\001 \002(\r\022\022\n\nstatusCode\030"
    "\002 \002(\005", 805);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MSG_DS_CS_DATA_UPLOAD.proto", &protobuf_RegisterTypes);
  MSG_DS_CS_DATA_UPLOAD::default_instance_ = new MSG_DS_CS_DATA_UPLOAD();
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::default_instance_ = new MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO();
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::default_instance_ = new MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO();
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::default_instance_ = new MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO();
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::default_instance_ = new MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO();
  MSG_CS_DS_DATA_UPLOAD_ACK::default_instance_ = new MSG_CS_DS_DATA_UPLOAD_ACK();
  MSG_DS_CS_DATA_UPLOAD::default_instance_->InitAsDefaultInstance();
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::default_instance_->InitAsDefaultInstance();
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::default_instance_->InitAsDefaultInstance();
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::default_instance_->InitAsDefaultInstance();
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::default_instance_->InitAsDefaultInstance();
  MSG_CS_DS_DATA_UPLOAD_ACK::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto {
  StaticDescriptorInitializer_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto() {
    protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  }
} static_descriptor_initializer_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_descriptor_;
}
bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::STRING;
const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::INT;
const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::FLOAT;
const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::DOUBLE;
const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::COL_TYPE_MIN;
const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::COL_TYPE_MAX;
const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::COL_TYPE_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::kStrValueFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::kIValueFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::kFValueFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::kDValueFieldNumber;
#endif  // !_MSC_VER

MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO)
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::InitAsDefaultInstance() {
}

MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO)
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ivalue_ = 0;
  fvalue_ = 0;
  dvalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::~MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO() {
  // @@protoc_insertion_point(destructor:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO)
  SharedDtor();
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::SharedDtor() {
  if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strvalue_;
  }
  if (this != default_instance_) {
  }
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_descriptor_;
}

const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::default_instance_ = NULL;

MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::New() const {
  return new MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO;
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(ivalue_, dvalue_);
    if (has_strvalue()) {
      if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        strvalue_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "strvalue");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iValue;
        break;
      }

      // optional int32 iValue = 2;
      case 2: {
        if (tag == 16) {
         parse_iValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ivalue_)));
          set_has_ivalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_fValue;
        break;
      }

      // optional float fValue = 3;
      case 3: {
        if (tag == 29) {
         parse_fValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fvalue_)));
          set_has_fvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_dValue;
        break;
      }

      // optional double dValue = 4;
      case 4: {
        if (tag == 33) {
         parse_dValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dvalue_)));
          set_has_dvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO)
  return false;
#undef DO_
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO)
  // optional string strValue = 1;
  if (has_strvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strvalue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // optional int32 iValue = 2;
  if (has_ivalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ivalue(), output);
  }

  // optional float fValue = 3;
  if (has_fvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fvalue(), output);
  }

  // optional double dValue = 4;
  if (has_dvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO)
}

::google::protobuf::uint8* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO)
  // optional string strValue = 1;
  if (has_strvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strvalue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // optional int32 iValue = 2;
  if (has_ivalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ivalue(), target);
  }

  // optional float fValue = 3;
  if (has_fvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fvalue(), target);
  }

  // optional double dValue = 4;
  if (has_dvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO)
  return target;
}

int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string strValue = 1;
    if (has_strvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strvalue());
    }

    // optional int32 iValue = 2;
    if (has_ivalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ivalue());
    }

    // optional float fValue = 3;
    if (has_fvalue()) {
      total_size += 1 + 4;
    }

    // optional double dValue = 4;
    if (has_dvalue()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::MergeFrom(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strvalue()) {
      set_strvalue(from.strvalue());
    }
    if (from.has_ivalue()) {
      set_ivalue(from.ivalue());
    }
    if (from.has_fvalue()) {
      set_fvalue(from.fvalue());
    }
    if (from.has_dvalue()) {
      set_dvalue(from.dvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::CopyFrom(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::IsInitialized() const {

  return true;
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::Swap(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO* other) {
  if (other != this) {
    std::swap(strvalue_, other->strvalue_);
    std::swap(ivalue_, other->ivalue_);
    std::swap(fvalue_, other->fvalue_);
    std::swap(dvalue_, other->dvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_descriptor_;
  metadata.reflection = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::kColNameFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::kColTypeFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::kDictDataFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::kIndexOffsetsFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::kIndexPostFieldNumber;
#endif  // !_MSC_VER

MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO)
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::InitAsDefaultInstance() {
}

MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO)
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coltype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::~MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO() {
  // @@protoc_insertion_point(destructor:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO)
  SharedDtor();
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::SharedDtor() {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete colname_;
  }
  if (this != default_instance_) {
  }
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_descriptor_;
}

const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::default_instance_ = NULL;

MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::New() const {
  return new MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO;
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_colname()) {
      if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        colname_->clear();
      }
    }
    coltype_ = 0;
  }
  dictdata_.Clear();
  indexoffsets_.Clear();
  indexpost_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string colName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_colname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->colname().data(), this->colname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "colname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_colType;
        break;
      }

      // required .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.COL_TYPE colType = 2 [default = STRING];
      case 2: {
        if (tag == 16) {
         parse_colType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_IsValid(value)) {
            set_coltype(static_cast< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dictData;
        break;
      }

      // repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO dictData = 3;
      case 3: {
        if (tag == 26) {
         parse_dictData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dictdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dictData;
        if (input->ExpectTag(32)) goto parse_indexOffsets;
        break;
      }

      // repeated uint32 indexOffsets = 4;
      case 4: {
        if (tag == 32) {
         parse_indexOffsets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_indexoffsets())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_indexoffsets())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_indexOffsets;
        if (input->ExpectTag(40)) goto parse_indexPost;
        break;
      }

      // repeated uint32 indexPost = 5;
      case 5: {
        if (tag == 40) {
         parse_indexPost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_indexpost())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_indexpost())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_indexPost;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO)
  return false;
#undef DO_
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO)
  // required string colName = 1;
  if (has_colname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->colname().data(), this->colname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "colname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->colname(), output);
  }

  // required .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.COL_TYPE colType = 2 [default = STRING];
  if (has_coltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->coltype(), output);
  }

  // repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO dictData = 3;
  for (int i = 0; i < this->dictdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dictdata(i), output);
  }

  // repeated uint32 indexOffsets = 4;
  for (int i = 0; i < this->indexoffsets_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->indexoffsets(i), output);
  }

  // repeated uint32 indexPost = 5;
  for (int i = 0; i < this->indexpost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->indexpost(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO)
}

::google::protobuf::uint8* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO)
  // required string colName = 1;
  if (has_colname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->colname().data(), this->colname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "colname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->colname(), target);
  }

  // required .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.COL_TYPE colType = 2 [default = STRING];
  if (has_coltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->coltype(), target);
  }

  // repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO dictData = 3;
  for (int i = 0; i < this->dictdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dictdata(i), target);
  }

  // repeated uint32 indexOffsets = 4;
  for (int i = 0; i < this->indexoffsets_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->indexoffsets(i), target);
  }

  // repeated uint32 indexPost = 5;
  for (int i = 0; i < this->indexpost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->indexpost(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO)
  return target;
}

int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string colName = 1;
    if (has_colname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->colname());
    }

    // required .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.COL_TYPE colType = 2 [default = STRING];
    if (has_coltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->coltype());
    }

  }
  // repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO dictData = 3;
  total_size += 1 * this->dictdata_size();
  for (int i = 0; i < this->dictdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dictdata(i));
  }

  // repeated uint32 indexOffsets = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->indexoffsets_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->indexoffsets(i));
    }
    total_size += 1 * this->indexoffsets_size() + data_size;
  }

  // repeated uint32 indexPost = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->indexpost_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->indexpost(i));
    }
    total_size += 1 * this->indexpost_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::MergeFrom(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  dictdata_.MergeFrom(from.dictdata_);
  indexoffsets_.MergeFrom(from.indexoffsets_);
  indexpost_.MergeFrom(from.indexpost_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_colname()) {
      set_colname(from.colname());
    }
    if (from.has_coltype()) {
      set_coltype(from.coltype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::CopyFrom(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::Swap(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO* other) {
  if (other != this) {
    std::swap(colname_, other->colname_);
    std::swap(coltype_, other->coltype_);
    dictdata_.Swap(&other->dictdata_);
    indexoffsets_.Swap(&other->indexoffsets_);
    indexpost_.Swap(&other->indexpost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_descriptor_;
  metadata.reflection = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::kColNameFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::kRowEntryFieldNumber;
#endif  // !_MSC_VER

MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO)
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::InitAsDefaultInstance() {
}

MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO)
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rowentry_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::~MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO() {
  // @@protoc_insertion_point(destructor:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO)
  SharedDtor();
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::SharedDtor() {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete colname_;
  }
  if (this != default_instance_) {
  }
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_descriptor_;
}

const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::default_instance_ = NULL;

MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::New() const {
  return new MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO;
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_colname()) {
      if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        colname_->clear();
      }
    }
    rowentry_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string colName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_colname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->colname().data(), this->colname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "colname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rowEntry;
        break;
      }

      // required uint32 rowEntry = 2;
      case 2: {
        if (tag == 16) {
         parse_rowEntry:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rowentry_)));
          set_has_rowentry();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO)
  return false;
#undef DO_
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO)
  // required string colName = 1;
  if (has_colname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->colname().data(), this->colname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "colname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->colname(), output);
  }

  // required uint32 rowEntry = 2;
  if (has_rowentry()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rowentry(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO)
}

::google::protobuf::uint8* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO)
  // required string colName = 1;
  if (has_colname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->colname().data(), this->colname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "colname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->colname(), target);
  }

  // required uint32 rowEntry = 2;
  if (has_rowentry()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rowentry(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO)
  return target;
}

int MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string colName = 1;
    if (has_colname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->colname());
    }

    // required uint32 rowEntry = 2;
    if (has_rowentry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rowentry());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::MergeFrom(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_colname()) {
      set_colname(from.colname());
    }
    if (from.has_rowentry()) {
      set_rowentry(from.rowentry());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::CopyFrom(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::Swap(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO* other) {
  if (other != this) {
    std::swap(colname_, other->colname_);
    std::swap(rowentry_, other->rowentry_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_descriptor_;
  metadata.reflection = MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::kRowNumFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::kRowDataFieldNumber;
#endif  // !_MSC_VER

MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO)
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::InitAsDefaultInstance() {
}

MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO)
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::SharedCtor() {
  _cached_size_ = 0;
  rownum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::~MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO() {
  // @@protoc_insertion_point(destructor:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO)
  SharedDtor();
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_descriptor_;
}

const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::default_instance_ = NULL;

MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::New() const {
  return new MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO;
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::Clear() {
  rownum_ = 0u;
  rowdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 rowNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rownum_)));
          set_has_rownum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rowData;
        break;
      }

      // repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO rowData = 2;
      case 2: {
        if (tag == 18) {
         parse_rowData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rowdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rowData;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO)
  return false;
#undef DO_
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO)
  // required uint32 rowNum = 1;
  if (has_rownum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rownum(), output);
  }

  // repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO rowData = 2;
  for (int i = 0; i < this->rowdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rowdata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO)
}

::google::protobuf::uint8* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO)
  // required uint32 rowNum = 1;
  if (has_rownum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rownum(), target);
  }

  // repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO rowData = 2;
  for (int i = 0; i < this->rowdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rowdata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO)
  return target;
}

int MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 rowNum = 1;
    if (has_rownum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rownum());
    }

  }
  // repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO rowData = 2;
  total_size += 1 * this->rowdata_size();
  for (int i = 0; i < this->rowdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rowdata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::MergeFrom(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  rowdata_.MergeFrom(from.rowdata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rownum()) {
      set_rownum(from.rownum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::CopyFrom(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->rowdata())) return false;
  return true;
}

void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::Swap(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO* other) {
  if (other != this) {
    std::swap(rownum_, other->rownum_);
    rowdata_.Swap(&other->rowdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_descriptor_;
  metadata.reflection = MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MSG_DS_CS_DATA_UPLOAD::kDbNameFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD::kTableNameFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD::kColDictDataFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD::kRowTableDataFieldNumber;
const int MSG_DS_CS_DATA_UPLOAD::kTaskIDFieldNumber;
#endif  // !_MSC_VER

MSG_DS_CS_DATA_UPLOAD::MSG_DS_CS_DATA_UPLOAD()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_CS_DATA_UPLOAD)
}

void MSG_DS_CS_DATA_UPLOAD::InitAsDefaultInstance() {
}

MSG_DS_CS_DATA_UPLOAD::MSG_DS_CS_DATA_UPLOAD(const MSG_DS_CS_DATA_UPLOAD& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_CS_DATA_UPLOAD)
}

void MSG_DS_CS_DATA_UPLOAD::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_CS_DATA_UPLOAD::~MSG_DS_CS_DATA_UPLOAD() {
  // @@protoc_insertion_point(destructor:MSG_DS_CS_DATA_UPLOAD)
  SharedDtor();
}

void MSG_DS_CS_DATA_UPLOAD::SharedDtor() {
  if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbname_;
  }
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablename_;
  }
  if (this != default_instance_) {
  }
}

void MSG_DS_CS_DATA_UPLOAD::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_CS_DATA_UPLOAD::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DATA_UPLOAD_descriptor_;
}

const MSG_DS_CS_DATA_UPLOAD& MSG_DS_CS_DATA_UPLOAD::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_DS_CS_DATA_UPLOAD* MSG_DS_CS_DATA_UPLOAD::default_instance_ = NULL;

MSG_DS_CS_DATA_UPLOAD* MSG_DS_CS_DATA_UPLOAD::New() const {
  return new MSG_DS_CS_DATA_UPLOAD;
}

void MSG_DS_CS_DATA_UPLOAD::Clear() {
  if (_has_bits_[0 / 32] & 19) {
    if (has_dbname()) {
      if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        dbname_->clear();
      }
    }
    if (has_tablename()) {
      if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tablename_->clear();
      }
    }
    taskid_ = 0u;
  }
  coldictdata_.Clear();
  rowtabledata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_CS_DATA_UPLOAD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_CS_DATA_UPLOAD)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dbName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dbname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dbname().data(), this->dbname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dbname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tableName;
        break;
      }

      // required string tableName = 2;
      case 2: {
        if (tag == 18) {
         parse_tableName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tablename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_colDictData;
        break;
      }

      // repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO colDictData = 3;
      case 3: {
        if (tag == 26) {
         parse_colDictData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_coldictdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_colDictData;
        if (input->ExpectTag(34)) goto parse_rowTableData;
        break;
      }

      // repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO rowTableData = 4;
      case 4: {
        if (tag == 34) {
         parse_rowTableData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rowtabledata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_rowTableData;
        if (input->ExpectTag(40)) goto parse_taskID;
        break;
      }

      // required uint32 taskID = 5;
      case 5: {
        if (tag == 40) {
         parse_taskID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_CS_DATA_UPLOAD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_CS_DATA_UPLOAD)
  return false;
#undef DO_
}

void MSG_DS_CS_DATA_UPLOAD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_CS_DATA_UPLOAD)
  // required string dbName = 1;
  if (has_dbname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dbname().data(), this->dbname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dbname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dbname(), output);
  }

  // required string tableName = 2;
  if (has_tablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tablename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tablename(), output);
  }

  // repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO colDictData = 3;
  for (int i = 0; i < this->coldictdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->coldictdata(i), output);
  }

  // repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO rowTableData = 4;
  for (int i = 0; i < this->rowtabledata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->rowtabledata(i), output);
  }

  // required uint32 taskID = 5;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->taskid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_CS_DATA_UPLOAD)
}

::google::protobuf::uint8* MSG_DS_CS_DATA_UPLOAD::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_CS_DATA_UPLOAD)
  // required string dbName = 1;
  if (has_dbname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dbname().data(), this->dbname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dbname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dbname(), target);
  }

  // required string tableName = 2;
  if (has_tablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tablename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tablename(), target);
  }

  // repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO colDictData = 3;
  for (int i = 0; i < this->coldictdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->coldictdata(i), target);
  }

  // repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO rowTableData = 4;
  for (int i = 0; i < this->rowtabledata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->rowtabledata(i), target);
  }

  // required uint32 taskID = 5;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->taskid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_CS_DATA_UPLOAD)
  return target;
}

int MSG_DS_CS_DATA_UPLOAD::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string dbName = 1;
    if (has_dbname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dbname());
    }

    // required string tableName = 2;
    if (has_tablename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tablename());
    }

    // required uint32 taskID = 5;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskid());
    }

  }
  // repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO colDictData = 3;
  total_size += 1 * this->coldictdata_size();
  for (int i = 0; i < this->coldictdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->coldictdata(i));
  }

  // repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO rowTableData = 4;
  total_size += 1 * this->rowtabledata_size();
  for (int i = 0; i < this->rowtabledata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rowtabledata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_CS_DATA_UPLOAD::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_CS_DATA_UPLOAD* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_CS_DATA_UPLOAD*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_CS_DATA_UPLOAD::MergeFrom(const MSG_DS_CS_DATA_UPLOAD& from) {
  GOOGLE_CHECK_NE(&from, this);
  coldictdata_.MergeFrom(from.coldictdata_);
  rowtabledata_.MergeFrom(from.rowtabledata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dbname()) {
      set_dbname(from.dbname());
    }
    if (from.has_tablename()) {
      set_tablename(from.tablename());
    }
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_CS_DATA_UPLOAD::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_CS_DATA_UPLOAD::CopyFrom(const MSG_DS_CS_DATA_UPLOAD& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_CS_DATA_UPLOAD::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000013) != 0x00000013) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->coldictdata())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rowtabledata())) return false;
  return true;
}

void MSG_DS_CS_DATA_UPLOAD::Swap(MSG_DS_CS_DATA_UPLOAD* other) {
  if (other != this) {
    std::swap(dbname_, other->dbname_);
    std::swap(tablename_, other->tablename_);
    coldictdata_.Swap(&other->coldictdata_);
    rowtabledata_.Swap(&other->rowtabledata_);
    std::swap(taskid_, other->taskid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_CS_DATA_UPLOAD::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_CS_DATA_UPLOAD_descriptor_;
  metadata.reflection = MSG_DS_CS_DATA_UPLOAD_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MSG_CS_DS_DATA_UPLOAD_ACK::kTaskIDFieldNumber;
const int MSG_CS_DS_DATA_UPLOAD_ACK::kStatusCodeFieldNumber;
#endif  // !_MSC_VER

MSG_CS_DS_DATA_UPLOAD_ACK::MSG_CS_DS_DATA_UPLOAD_ACK()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_CS_DS_DATA_UPLOAD_ACK)
}

void MSG_CS_DS_DATA_UPLOAD_ACK::InitAsDefaultInstance() {
}

MSG_CS_DS_DATA_UPLOAD_ACK::MSG_CS_DS_DATA_UPLOAD_ACK(const MSG_CS_DS_DATA_UPLOAD_ACK& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_CS_DS_DATA_UPLOAD_ACK)
}

void MSG_CS_DS_DATA_UPLOAD_ACK::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0u;
  statuscode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_CS_DS_DATA_UPLOAD_ACK::~MSG_CS_DS_DATA_UPLOAD_ACK() {
  // @@protoc_insertion_point(destructor:MSG_CS_DS_DATA_UPLOAD_ACK)
  SharedDtor();
}

void MSG_CS_DS_DATA_UPLOAD_ACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_CS_DS_DATA_UPLOAD_ACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_CS_DS_DATA_UPLOAD_ACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_CS_DS_DATA_UPLOAD_ACK_descriptor_;
}

const MSG_CS_DS_DATA_UPLOAD_ACK& MSG_CS_DS_DATA_UPLOAD_ACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_CS_DS_DATA_UPLOAD_ACK* MSG_CS_DS_DATA_UPLOAD_ACK::default_instance_ = NULL;

MSG_CS_DS_DATA_UPLOAD_ACK* MSG_CS_DS_DATA_UPLOAD_ACK::New() const {
  return new MSG_CS_DS_DATA_UPLOAD_ACK;
}

void MSG_CS_DS_DATA_UPLOAD_ACK::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MSG_CS_DS_DATA_UPLOAD_ACK*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(taskid_, statuscode_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_CS_DS_DATA_UPLOAD_ACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_CS_DS_DATA_UPLOAD_ACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 taskID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_statusCode;
        break;
      }

      // required int32 statusCode = 2;
      case 2: {
        if (tag == 16) {
         parse_statusCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statuscode_)));
          set_has_statuscode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_CS_DS_DATA_UPLOAD_ACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_CS_DS_DATA_UPLOAD_ACK)
  return false;
#undef DO_
}

void MSG_CS_DS_DATA_UPLOAD_ACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_CS_DS_DATA_UPLOAD_ACK)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  // required int32 statusCode = 2;
  if (has_statuscode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->statuscode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_CS_DS_DATA_UPLOAD_ACK)
}

::google::protobuf::uint8* MSG_CS_DS_DATA_UPLOAD_ACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_CS_DS_DATA_UPLOAD_ACK)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  // required int32 statusCode = 2;
  if (has_statuscode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->statuscode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_CS_DS_DATA_UPLOAD_ACK)
  return target;
}

int MSG_CS_DS_DATA_UPLOAD_ACK::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 taskID = 1;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskid());
    }

    // required int32 statusCode = 2;
    if (has_statuscode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->statuscode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_CS_DS_DATA_UPLOAD_ACK::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_CS_DS_DATA_UPLOAD_ACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_CS_DS_DATA_UPLOAD_ACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_CS_DS_DATA_UPLOAD_ACK::MergeFrom(const MSG_CS_DS_DATA_UPLOAD_ACK& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_statuscode()) {
      set_statuscode(from.statuscode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_CS_DS_DATA_UPLOAD_ACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_CS_DS_DATA_UPLOAD_ACK::CopyFrom(const MSG_CS_DS_DATA_UPLOAD_ACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_CS_DS_DATA_UPLOAD_ACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MSG_CS_DS_DATA_UPLOAD_ACK::Swap(MSG_CS_DS_DATA_UPLOAD_ACK* other) {
  if (other != this) {
    std::swap(taskid_, other->taskid_);
    std::swap(statuscode_, other->statuscode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_CS_DS_DATA_UPLOAD_ACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_CS_DS_DATA_UPLOAD_ACK_descriptor_;
  metadata.reflection = MSG_CS_DS_DATA_UPLOAD_ACK_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
