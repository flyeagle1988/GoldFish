// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSG_DS_DC_LOCATION_INDEX_SEND.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MSG_DS_DC_LOCATION_INDEX_SEND.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* DICT_VALUE_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DICT_VALUE_reflection_ = NULL;
const ::google::protobuf::Descriptor* INDEX_BORDER_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INDEX_BORDER_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* INDEX_BORDER_DICT_TYPE_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DICT_ENTRY_INDEX_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DICT_ENTRY_INDEX_reflection_ = NULL;
const ::google::protobuf::Descriptor* LOCATION_INDEX_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LOCATION_INDEX_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DS_DC_LOCATION_INDEX_SEND_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_DC_LOCATION_INDEX_SEND_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DC_DS_LOCATION_INDEX_SEND_ACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DC_DS_LOCATION_INDEX_SEND_ACK_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto() {
  protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MSG_DS_DC_LOCATION_INDEX_SEND.proto");
  GOOGLE_CHECK(file != NULL);
  DICT_VALUE_descriptor_ = file->message_type(0);
  static const int DICT_VALUE_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DICT_VALUE, strvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DICT_VALUE, ivalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DICT_VALUE, fvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DICT_VALUE, dvalue_),
  };
  DICT_VALUE_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DICT_VALUE_descriptor_,
      DICT_VALUE::default_instance_,
      DICT_VALUE_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DICT_VALUE, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DICT_VALUE, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DICT_VALUE));
  INDEX_BORDER_descriptor_ = file->message_type(1);
  static const int INDEX_BORDER_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INDEX_BORDER, dicttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INDEX_BORDER, dictupper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INDEX_BORDER, dictlower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INDEX_BORDER, entryupper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INDEX_BORDER, entrylower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INDEX_BORDER, csip_),
  };
  INDEX_BORDER_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INDEX_BORDER_descriptor_,
      INDEX_BORDER::default_instance_,
      INDEX_BORDER_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INDEX_BORDER, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INDEX_BORDER, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INDEX_BORDER));
  INDEX_BORDER_DICT_TYPE_descriptor_ = INDEX_BORDER_descriptor_->enum_type(0);
  DICT_ENTRY_INDEX_descriptor_ = file->message_type(2);
  static const int DICT_ENTRY_INDEX_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DICT_ENTRY_INDEX, colname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DICT_ENTRY_INDEX, colindexborder_),
  };
  DICT_ENTRY_INDEX_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DICT_ENTRY_INDEX_descriptor_,
      DICT_ENTRY_INDEX::default_instance_,
      DICT_ENTRY_INDEX_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DICT_ENTRY_INDEX, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DICT_ENTRY_INDEX, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DICT_ENTRY_INDEX));
  LOCATION_INDEX_descriptor_ = file->message_type(3);
  static const int LOCATION_INDEX_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCATION_INDEX, raip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCATION_INDEX, dbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCATION_INDEX, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCATION_INDEX, dictentryindex_),
  };
  LOCATION_INDEX_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LOCATION_INDEX_descriptor_,
      LOCATION_INDEX::default_instance_,
      LOCATION_INDEX_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCATION_INDEX, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCATION_INDEX, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LOCATION_INDEX));
  MSG_DS_DC_LOCATION_INDEX_SEND_descriptor_ = file->message_type(4);
  static const int MSG_DS_DC_LOCATION_INDEX_SEND_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_DC_LOCATION_INDEX_SEND, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_DC_LOCATION_INDEX_SEND, loadtaskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_DC_LOCATION_INDEX_SEND, locationindex_),
  };
  MSG_DS_DC_LOCATION_INDEX_SEND_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_DC_LOCATION_INDEX_SEND_descriptor_,
      MSG_DS_DC_LOCATION_INDEX_SEND::default_instance_,
      MSG_DS_DC_LOCATION_INDEX_SEND_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_DC_LOCATION_INDEX_SEND, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_DC_LOCATION_INDEX_SEND, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_DC_LOCATION_INDEX_SEND));
  MSG_DC_DS_LOCATION_INDEX_SEND_ACK_descriptor_ = file->message_type(5);
  static const int MSG_DC_DS_LOCATION_INDEX_SEND_ACK_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DS_LOCATION_INDEX_SEND_ACK, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DS_LOCATION_INDEX_SEND_ACK, loadtaskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DS_LOCATION_INDEX_SEND_ACK, statuscode_),
  };
  MSG_DC_DS_LOCATION_INDEX_SEND_ACK_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DC_DS_LOCATION_INDEX_SEND_ACK_descriptor_,
      MSG_DC_DS_LOCATION_INDEX_SEND_ACK::default_instance_,
      MSG_DC_DS_LOCATION_INDEX_SEND_ACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DS_LOCATION_INDEX_SEND_ACK, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DS_LOCATION_INDEX_SEND_ACK, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DC_DS_LOCATION_INDEX_SEND_ACK));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DICT_VALUE_descriptor_, &DICT_VALUE::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INDEX_BORDER_descriptor_, &INDEX_BORDER::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DICT_ENTRY_INDEX_descriptor_, &DICT_ENTRY_INDEX::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LOCATION_INDEX_descriptor_, &LOCATION_INDEX::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_DC_LOCATION_INDEX_SEND_descriptor_, &MSG_DS_DC_LOCATION_INDEX_SEND::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DC_DS_LOCATION_INDEX_SEND_ACK_descriptor_, &MSG_DC_DS_LOCATION_INDEX_SEND_ACK::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto() {
  delete DICT_VALUE::default_instance_;
  delete DICT_VALUE_reflection_;
  delete INDEX_BORDER::default_instance_;
  delete INDEX_BORDER_reflection_;
  delete DICT_ENTRY_INDEX::default_instance_;
  delete DICT_ENTRY_INDEX_reflection_;
  delete LOCATION_INDEX::default_instance_;
  delete LOCATION_INDEX_reflection_;
  delete MSG_DS_DC_LOCATION_INDEX_SEND::default_instance_;
  delete MSG_DS_DC_LOCATION_INDEX_SEND_reflection_;
  delete MSG_DC_DS_LOCATION_INDEX_SEND_ACK::default_instance_;
  delete MSG_DC_DS_LOCATION_INDEX_SEND_ACK_reflection_;
}

void protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#MSG_DS_DC_LOCATION_INDEX_SEND.proto\"N\n"
    "\nDICT_VALUE\022\020\n\010strValue\030\001 \001(\t\022\016\n\006iValue\030"
    "\002 \001(\005\022\016\n\006fValue\030\003 \001(\002\022\016\n\006dValue\030\004 \001(\001\"\360\001"
    "\n\014INDEX_BORDER\0221\n\010dictType\030\001 \002(\0162\027.INDEX"
    "_BORDER.DICT_TYPE:\006STRING\022\036\n\tdictUpper\030\002"
    " \002(\0132\013.DICT_VALUE\022\036\n\tdictLower\030\003 \002(\0132\013.D"
    "ICT_VALUE\022\022\n\nentryUpper\030\004 \002(\r\022\022\n\nentryLo"
    "wer\030\005 \002(\r\022\014\n\004csIP\030\006 \002(\t\"7\n\tDICT_TYPE\022\n\n\006"
    "STRING\020\000\022\007\n\003INT\020\001\022\t\n\005FLOAT\020\002\022\n\n\006DOUBLE\020\003"
    "\"J\n\020DICT_ENTRY_INDEX\022\017\n\007colName\030\001 \002(\t\022%\n"
    "\016colIndexBorder\030\002 \003(\0132\r.INDEX_BORDER\"j\n\016"
    "LOCATION_INDEX\022\014\n\004raip\030\001 \002(\t\022\014\n\004dbid\030\002 \002"
    "(\005\022\021\n\ttableName\030\003 \002(\t\022)\n\016dictEntryIndex\030"
    "\004 \003(\0132\021.DICT_ENTRY_INDEX\"k\n\035MSG_DS_DC_LO"
    "CATION_INDEX_SEND\022\016\n\006taskID\030\001 \002(\r\022\022\n\nloa"
    "dTaskID\030\002 \002(\r\022&\n\rlocationIndex\030\003 \003(\0132\017.L"
    "OCATION_INDEX\"[\n!MSG_DC_DS_LOCATION_INDE"
    "X_SEND_ACK\022\016\n\006taskID\030\001 \002(\r\022\022\n\nloadTaskID"
    "\030\002 \002(\r\022\022\n\nstatusCode\030\003 \002(\005", 746);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MSG_DS_DC_LOCATION_INDEX_SEND.proto", &protobuf_RegisterTypes);
  DICT_VALUE::default_instance_ = new DICT_VALUE();
  INDEX_BORDER::default_instance_ = new INDEX_BORDER();
  DICT_ENTRY_INDEX::default_instance_ = new DICT_ENTRY_INDEX();
  LOCATION_INDEX::default_instance_ = new LOCATION_INDEX();
  MSG_DS_DC_LOCATION_INDEX_SEND::default_instance_ = new MSG_DS_DC_LOCATION_INDEX_SEND();
  MSG_DC_DS_LOCATION_INDEX_SEND_ACK::default_instance_ = new MSG_DC_DS_LOCATION_INDEX_SEND_ACK();
  DICT_VALUE::default_instance_->InitAsDefaultInstance();
  INDEX_BORDER::default_instance_->InitAsDefaultInstance();
  DICT_ENTRY_INDEX::default_instance_->InitAsDefaultInstance();
  LOCATION_INDEX::default_instance_->InitAsDefaultInstance();
  MSG_DS_DC_LOCATION_INDEX_SEND::default_instance_->InitAsDefaultInstance();
  MSG_DC_DS_LOCATION_INDEX_SEND_ACK::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto {
  StaticDescriptorInitializer_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto() {
    protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  }
} static_descriptor_initializer_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DICT_VALUE::kStrValueFieldNumber;
const int DICT_VALUE::kIValueFieldNumber;
const int DICT_VALUE::kFValueFieldNumber;
const int DICT_VALUE::kDValueFieldNumber;
#endif  // !_MSC_VER

DICT_VALUE::DICT_VALUE()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DICT_VALUE)
}

void DICT_VALUE::InitAsDefaultInstance() {
}

DICT_VALUE::DICT_VALUE(const DICT_VALUE& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DICT_VALUE)
}

void DICT_VALUE::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ivalue_ = 0;
  fvalue_ = 0;
  dvalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DICT_VALUE::~DICT_VALUE() {
  // @@protoc_insertion_point(destructor:DICT_VALUE)
  SharedDtor();
}

void DICT_VALUE::SharedDtor() {
  if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strvalue_;
  }
  if (this != default_instance_) {
  }
}

void DICT_VALUE::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DICT_VALUE::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DICT_VALUE_descriptor_;
}

const DICT_VALUE& DICT_VALUE::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  return *default_instance_;
}

DICT_VALUE* DICT_VALUE::default_instance_ = NULL;

DICT_VALUE* DICT_VALUE::New() const {
  return new DICT_VALUE;
}

void DICT_VALUE::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DICT_VALUE*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(ivalue_, dvalue_);
    if (has_strvalue()) {
      if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        strvalue_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DICT_VALUE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DICT_VALUE)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "strvalue");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iValue;
        break;
      }

      // optional int32 iValue = 2;
      case 2: {
        if (tag == 16) {
         parse_iValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ivalue_)));
          set_has_ivalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_fValue;
        break;
      }

      // optional float fValue = 3;
      case 3: {
        if (tag == 29) {
         parse_fValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fvalue_)));
          set_has_fvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_dValue;
        break;
      }

      // optional double dValue = 4;
      case 4: {
        if (tag == 33) {
         parse_dValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dvalue_)));
          set_has_dvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DICT_VALUE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DICT_VALUE)
  return false;
#undef DO_
}

void DICT_VALUE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DICT_VALUE)
  // optional string strValue = 1;
  if (has_strvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strvalue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // optional int32 iValue = 2;
  if (has_ivalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ivalue(), output);
  }

  // optional float fValue = 3;
  if (has_fvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fvalue(), output);
  }

  // optional double dValue = 4;
  if (has_dvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DICT_VALUE)
}

::google::protobuf::uint8* DICT_VALUE::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DICT_VALUE)
  // optional string strValue = 1;
  if (has_strvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strvalue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // optional int32 iValue = 2;
  if (has_ivalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ivalue(), target);
  }

  // optional float fValue = 3;
  if (has_fvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fvalue(), target);
  }

  // optional double dValue = 4;
  if (has_dvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DICT_VALUE)
  return target;
}

int DICT_VALUE::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string strValue = 1;
    if (has_strvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strvalue());
    }

    // optional int32 iValue = 2;
    if (has_ivalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ivalue());
    }

    // optional float fValue = 3;
    if (has_fvalue()) {
      total_size += 1 + 4;
    }

    // optional double dValue = 4;
    if (has_dvalue()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DICT_VALUE::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DICT_VALUE* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DICT_VALUE*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DICT_VALUE::MergeFrom(const DICT_VALUE& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strvalue()) {
      set_strvalue(from.strvalue());
    }
    if (from.has_ivalue()) {
      set_ivalue(from.ivalue());
    }
    if (from.has_fvalue()) {
      set_fvalue(from.fvalue());
    }
    if (from.has_dvalue()) {
      set_dvalue(from.dvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DICT_VALUE::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DICT_VALUE::CopyFrom(const DICT_VALUE& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DICT_VALUE::IsInitialized() const {

  return true;
}

void DICT_VALUE::Swap(DICT_VALUE* other) {
  if (other != this) {
    std::swap(strvalue_, other->strvalue_);
    std::swap(ivalue_, other->ivalue_);
    std::swap(fvalue_, other->fvalue_);
    std::swap(dvalue_, other->dvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DICT_VALUE::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DICT_VALUE_descriptor_;
  metadata.reflection = DICT_VALUE_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* INDEX_BORDER_DICT_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INDEX_BORDER_DICT_TYPE_descriptor_;
}
bool INDEX_BORDER_DICT_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const INDEX_BORDER_DICT_TYPE INDEX_BORDER::STRING;
const INDEX_BORDER_DICT_TYPE INDEX_BORDER::INT;
const INDEX_BORDER_DICT_TYPE INDEX_BORDER::FLOAT;
const INDEX_BORDER_DICT_TYPE INDEX_BORDER::DOUBLE;
const INDEX_BORDER_DICT_TYPE INDEX_BORDER::DICT_TYPE_MIN;
const INDEX_BORDER_DICT_TYPE INDEX_BORDER::DICT_TYPE_MAX;
const int INDEX_BORDER::DICT_TYPE_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int INDEX_BORDER::kDictTypeFieldNumber;
const int INDEX_BORDER::kDictUpperFieldNumber;
const int INDEX_BORDER::kDictLowerFieldNumber;
const int INDEX_BORDER::kEntryUpperFieldNumber;
const int INDEX_BORDER::kEntryLowerFieldNumber;
const int INDEX_BORDER::kCsIPFieldNumber;
#endif  // !_MSC_VER

INDEX_BORDER::INDEX_BORDER()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:INDEX_BORDER)
}

void INDEX_BORDER::InitAsDefaultInstance() {
  dictupper_ = const_cast< ::DICT_VALUE*>(&::DICT_VALUE::default_instance());
  dictlower_ = const_cast< ::DICT_VALUE*>(&::DICT_VALUE::default_instance());
}

INDEX_BORDER::INDEX_BORDER(const INDEX_BORDER& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:INDEX_BORDER)
}

void INDEX_BORDER::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dicttype_ = 0;
  dictupper_ = NULL;
  dictlower_ = NULL;
  entryupper_ = 0u;
  entrylower_ = 0u;
  csip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INDEX_BORDER::~INDEX_BORDER() {
  // @@protoc_insertion_point(destructor:INDEX_BORDER)
  SharedDtor();
}

void INDEX_BORDER::SharedDtor() {
  if (csip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete csip_;
  }
  if (this != default_instance_) {
    delete dictupper_;
    delete dictlower_;
  }
}

void INDEX_BORDER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INDEX_BORDER::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INDEX_BORDER_descriptor_;
}

const INDEX_BORDER& INDEX_BORDER::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  return *default_instance_;
}

INDEX_BORDER* INDEX_BORDER::default_instance_ = NULL;

INDEX_BORDER* INDEX_BORDER::New() const {
  return new INDEX_BORDER;
}

void INDEX_BORDER::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<INDEX_BORDER*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(dicttype_, entryupper_);
    if (has_dictupper()) {
      if (dictupper_ != NULL) dictupper_->::DICT_VALUE::Clear();
    }
    if (has_dictlower()) {
      if (dictlower_ != NULL) dictlower_->::DICT_VALUE::Clear();
    }
    entrylower_ = 0u;
    if (has_csip()) {
      if (csip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        csip_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INDEX_BORDER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:INDEX_BORDER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .INDEX_BORDER.DICT_TYPE dictType = 1 [default = STRING];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::INDEX_BORDER_DICT_TYPE_IsValid(value)) {
            set_dicttype(static_cast< ::INDEX_BORDER_DICT_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dictUpper;
        break;
      }

      // required .DICT_VALUE dictUpper = 2;
      case 2: {
        if (tag == 18) {
         parse_dictUpper:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dictupper()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dictLower;
        break;
      }

      // required .DICT_VALUE dictLower = 3;
      case 3: {
        if (tag == 26) {
         parse_dictLower:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dictlower()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_entryUpper;
        break;
      }

      // required uint32 entryUpper = 4;
      case 4: {
        if (tag == 32) {
         parse_entryUpper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entryupper_)));
          set_has_entryupper();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_entryLower;
        break;
      }

      // required uint32 entryLower = 5;
      case 5: {
        if (tag == 40) {
         parse_entryLower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entrylower_)));
          set_has_entrylower();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_csIP;
        break;
      }

      // required string csIP = 6;
      case 6: {
        if (tag == 50) {
         parse_csIP:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_csip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->csip().data(), this->csip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "csip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:INDEX_BORDER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:INDEX_BORDER)
  return false;
#undef DO_
}

void INDEX_BORDER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:INDEX_BORDER)
  // required .INDEX_BORDER.DICT_TYPE dictType = 1 [default = STRING];
  if (has_dicttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->dicttype(), output);
  }

  // required .DICT_VALUE dictUpper = 2;
  if (has_dictupper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dictupper(), output);
  }

  // required .DICT_VALUE dictLower = 3;
  if (has_dictlower()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dictlower(), output);
  }

  // required uint32 entryUpper = 4;
  if (has_entryupper()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->entryupper(), output);
  }

  // required uint32 entryLower = 5;
  if (has_entrylower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->entrylower(), output);
  }

  // required string csIP = 6;
  if (has_csip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csip().data(), this->csip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->csip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:INDEX_BORDER)
}

::google::protobuf::uint8* INDEX_BORDER::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:INDEX_BORDER)
  // required .INDEX_BORDER.DICT_TYPE dictType = 1 [default = STRING];
  if (has_dicttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->dicttype(), target);
  }

  // required .DICT_VALUE dictUpper = 2;
  if (has_dictupper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dictupper(), target);
  }

  // required .DICT_VALUE dictLower = 3;
  if (has_dictlower()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dictlower(), target);
  }

  // required uint32 entryUpper = 4;
  if (has_entryupper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->entryupper(), target);
  }

  // required uint32 entryLower = 5;
  if (has_entrylower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->entrylower(), target);
  }

  // required string csIP = 6;
  if (has_csip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csip().data(), this->csip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->csip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:INDEX_BORDER)
  return target;
}

int INDEX_BORDER::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .INDEX_BORDER.DICT_TYPE dictType = 1 [default = STRING];
    if (has_dicttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->dicttype());
    }

    // required .DICT_VALUE dictUpper = 2;
    if (has_dictupper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dictupper());
    }

    // required .DICT_VALUE dictLower = 3;
    if (has_dictlower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dictlower());
    }

    // required uint32 entryUpper = 4;
    if (has_entryupper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->entryupper());
    }

    // required uint32 entryLower = 5;
    if (has_entrylower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->entrylower());
    }

    // required string csIP = 6;
    if (has_csip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->csip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INDEX_BORDER::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INDEX_BORDER* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INDEX_BORDER*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INDEX_BORDER::MergeFrom(const INDEX_BORDER& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dicttype()) {
      set_dicttype(from.dicttype());
    }
    if (from.has_dictupper()) {
      mutable_dictupper()->::DICT_VALUE::MergeFrom(from.dictupper());
    }
    if (from.has_dictlower()) {
      mutable_dictlower()->::DICT_VALUE::MergeFrom(from.dictlower());
    }
    if (from.has_entryupper()) {
      set_entryupper(from.entryupper());
    }
    if (from.has_entrylower()) {
      set_entrylower(from.entrylower());
    }
    if (from.has_csip()) {
      set_csip(from.csip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INDEX_BORDER::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INDEX_BORDER::CopyFrom(const INDEX_BORDER& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INDEX_BORDER::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void INDEX_BORDER::Swap(INDEX_BORDER* other) {
  if (other != this) {
    std::swap(dicttype_, other->dicttype_);
    std::swap(dictupper_, other->dictupper_);
    std::swap(dictlower_, other->dictlower_);
    std::swap(entryupper_, other->entryupper_);
    std::swap(entrylower_, other->entrylower_);
    std::swap(csip_, other->csip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INDEX_BORDER::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INDEX_BORDER_descriptor_;
  metadata.reflection = INDEX_BORDER_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DICT_ENTRY_INDEX::kColNameFieldNumber;
const int DICT_ENTRY_INDEX::kColIndexBorderFieldNumber;
#endif  // !_MSC_VER

DICT_ENTRY_INDEX::DICT_ENTRY_INDEX()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DICT_ENTRY_INDEX)
}

void DICT_ENTRY_INDEX::InitAsDefaultInstance() {
}

DICT_ENTRY_INDEX::DICT_ENTRY_INDEX(const DICT_ENTRY_INDEX& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DICT_ENTRY_INDEX)
}

void DICT_ENTRY_INDEX::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DICT_ENTRY_INDEX::~DICT_ENTRY_INDEX() {
  // @@protoc_insertion_point(destructor:DICT_ENTRY_INDEX)
  SharedDtor();
}

void DICT_ENTRY_INDEX::SharedDtor() {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete colname_;
  }
  if (this != default_instance_) {
  }
}

void DICT_ENTRY_INDEX::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DICT_ENTRY_INDEX::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DICT_ENTRY_INDEX_descriptor_;
}

const DICT_ENTRY_INDEX& DICT_ENTRY_INDEX::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  return *default_instance_;
}

DICT_ENTRY_INDEX* DICT_ENTRY_INDEX::default_instance_ = NULL;

DICT_ENTRY_INDEX* DICT_ENTRY_INDEX::New() const {
  return new DICT_ENTRY_INDEX;
}

void DICT_ENTRY_INDEX::Clear() {
  if (has_colname()) {
    if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      colname_->clear();
    }
  }
  colindexborder_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DICT_ENTRY_INDEX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DICT_ENTRY_INDEX)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string colName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_colname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->colname().data(), this->colname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "colname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_colIndexBorder;
        break;
      }

      // repeated .INDEX_BORDER colIndexBorder = 2;
      case 2: {
        if (tag == 18) {
         parse_colIndexBorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_colindexborder()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_colIndexBorder;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DICT_ENTRY_INDEX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DICT_ENTRY_INDEX)
  return false;
#undef DO_
}

void DICT_ENTRY_INDEX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DICT_ENTRY_INDEX)
  // required string colName = 1;
  if (has_colname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->colname().data(), this->colname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "colname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->colname(), output);
  }

  // repeated .INDEX_BORDER colIndexBorder = 2;
  for (int i = 0; i < this->colindexborder_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->colindexborder(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DICT_ENTRY_INDEX)
}

::google::protobuf::uint8* DICT_ENTRY_INDEX::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DICT_ENTRY_INDEX)
  // required string colName = 1;
  if (has_colname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->colname().data(), this->colname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "colname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->colname(), target);
  }

  // repeated .INDEX_BORDER colIndexBorder = 2;
  for (int i = 0; i < this->colindexborder_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->colindexborder(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DICT_ENTRY_INDEX)
  return target;
}

int DICT_ENTRY_INDEX::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string colName = 1;
    if (has_colname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->colname());
    }

  }
  // repeated .INDEX_BORDER colIndexBorder = 2;
  total_size += 1 * this->colindexborder_size();
  for (int i = 0; i < this->colindexborder_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->colindexborder(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DICT_ENTRY_INDEX::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DICT_ENTRY_INDEX* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DICT_ENTRY_INDEX*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DICT_ENTRY_INDEX::MergeFrom(const DICT_ENTRY_INDEX& from) {
  GOOGLE_CHECK_NE(&from, this);
  colindexborder_.MergeFrom(from.colindexborder_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_colname()) {
      set_colname(from.colname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DICT_ENTRY_INDEX::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DICT_ENTRY_INDEX::CopyFrom(const DICT_ENTRY_INDEX& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DICT_ENTRY_INDEX::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->colindexborder())) return false;
  return true;
}

void DICT_ENTRY_INDEX::Swap(DICT_ENTRY_INDEX* other) {
  if (other != this) {
    std::swap(colname_, other->colname_);
    colindexborder_.Swap(&other->colindexborder_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DICT_ENTRY_INDEX::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DICT_ENTRY_INDEX_descriptor_;
  metadata.reflection = DICT_ENTRY_INDEX_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LOCATION_INDEX::kRaipFieldNumber;
const int LOCATION_INDEX::kDbidFieldNumber;
const int LOCATION_INDEX::kTableNameFieldNumber;
const int LOCATION_INDEX::kDictEntryIndexFieldNumber;
#endif  // !_MSC_VER

LOCATION_INDEX::LOCATION_INDEX()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LOCATION_INDEX)
}

void LOCATION_INDEX::InitAsDefaultInstance() {
}

LOCATION_INDEX::LOCATION_INDEX(const LOCATION_INDEX& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LOCATION_INDEX)
}

void LOCATION_INDEX::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  raip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dbid_ = 0;
  tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LOCATION_INDEX::~LOCATION_INDEX() {
  // @@protoc_insertion_point(destructor:LOCATION_INDEX)
  SharedDtor();
}

void LOCATION_INDEX::SharedDtor() {
  if (raip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete raip_;
  }
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablename_;
  }
  if (this != default_instance_) {
  }
}

void LOCATION_INDEX::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LOCATION_INDEX::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LOCATION_INDEX_descriptor_;
}

const LOCATION_INDEX& LOCATION_INDEX::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  return *default_instance_;
}

LOCATION_INDEX* LOCATION_INDEX::default_instance_ = NULL;

LOCATION_INDEX* LOCATION_INDEX::New() const {
  return new LOCATION_INDEX;
}

void LOCATION_INDEX::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_raip()) {
      if (raip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        raip_->clear();
      }
    }
    dbid_ = 0;
    if (has_tablename()) {
      if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tablename_->clear();
      }
    }
  }
  dictentryindex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LOCATION_INDEX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LOCATION_INDEX)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string raip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raip().data(), this->raip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "raip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dbid;
        break;
      }

      // required int32 dbid = 2;
      case 2: {
        if (tag == 16) {
         parse_dbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dbid_)));
          set_has_dbid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tableName;
        break;
      }

      // required string tableName = 3;
      case 3: {
        if (tag == 26) {
         parse_tableName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tablename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_dictEntryIndex;
        break;
      }

      // repeated .DICT_ENTRY_INDEX dictEntryIndex = 4;
      case 4: {
        if (tag == 34) {
         parse_dictEntryIndex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dictentryindex()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_dictEntryIndex;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LOCATION_INDEX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LOCATION_INDEX)
  return false;
#undef DO_
}

void LOCATION_INDEX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LOCATION_INDEX)
  // required string raip = 1;
  if (has_raip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raip().data(), this->raip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "raip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->raip(), output);
  }

  // required int32 dbid = 2;
  if (has_dbid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dbid(), output);
  }

  // required string tableName = 3;
  if (has_tablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tablename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tablename(), output);
  }

  // repeated .DICT_ENTRY_INDEX dictEntryIndex = 4;
  for (int i = 0; i < this->dictentryindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->dictentryindex(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LOCATION_INDEX)
}

::google::protobuf::uint8* LOCATION_INDEX::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LOCATION_INDEX)
  // required string raip = 1;
  if (has_raip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raip().data(), this->raip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "raip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->raip(), target);
  }

  // required int32 dbid = 2;
  if (has_dbid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dbid(), target);
  }

  // required string tableName = 3;
  if (has_tablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tablename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tablename(), target);
  }

  // repeated .DICT_ENTRY_INDEX dictEntryIndex = 4;
  for (int i = 0; i < this->dictentryindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->dictentryindex(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LOCATION_INDEX)
  return target;
}

int LOCATION_INDEX::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string raip = 1;
    if (has_raip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->raip());
    }

    // required int32 dbid = 2;
    if (has_dbid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dbid());
    }

    // required string tableName = 3;
    if (has_tablename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tablename());
    }

  }
  // repeated .DICT_ENTRY_INDEX dictEntryIndex = 4;
  total_size += 1 * this->dictentryindex_size();
  for (int i = 0; i < this->dictentryindex_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dictentryindex(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LOCATION_INDEX::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LOCATION_INDEX* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LOCATION_INDEX*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LOCATION_INDEX::MergeFrom(const LOCATION_INDEX& from) {
  GOOGLE_CHECK_NE(&from, this);
  dictentryindex_.MergeFrom(from.dictentryindex_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_raip()) {
      set_raip(from.raip());
    }
    if (from.has_dbid()) {
      set_dbid(from.dbid());
    }
    if (from.has_tablename()) {
      set_tablename(from.tablename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LOCATION_INDEX::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LOCATION_INDEX::CopyFrom(const LOCATION_INDEX& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LOCATION_INDEX::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->dictentryindex())) return false;
  return true;
}

void LOCATION_INDEX::Swap(LOCATION_INDEX* other) {
  if (other != this) {
    std::swap(raip_, other->raip_);
    std::swap(dbid_, other->dbid_);
    std::swap(tablename_, other->tablename_);
    dictentryindex_.Swap(&other->dictentryindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LOCATION_INDEX::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LOCATION_INDEX_descriptor_;
  metadata.reflection = LOCATION_INDEX_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MSG_DS_DC_LOCATION_INDEX_SEND::kTaskIDFieldNumber;
const int MSG_DS_DC_LOCATION_INDEX_SEND::kLoadTaskIDFieldNumber;
const int MSG_DS_DC_LOCATION_INDEX_SEND::kLocationIndexFieldNumber;
#endif  // !_MSC_VER

MSG_DS_DC_LOCATION_INDEX_SEND::MSG_DS_DC_LOCATION_INDEX_SEND()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_DC_LOCATION_INDEX_SEND)
}

void MSG_DS_DC_LOCATION_INDEX_SEND::InitAsDefaultInstance() {
}

MSG_DS_DC_LOCATION_INDEX_SEND::MSG_DS_DC_LOCATION_INDEX_SEND(const MSG_DS_DC_LOCATION_INDEX_SEND& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_DC_LOCATION_INDEX_SEND)
}

void MSG_DS_DC_LOCATION_INDEX_SEND::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0u;
  loadtaskid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_DC_LOCATION_INDEX_SEND::~MSG_DS_DC_LOCATION_INDEX_SEND() {
  // @@protoc_insertion_point(destructor:MSG_DS_DC_LOCATION_INDEX_SEND)
  SharedDtor();
}

void MSG_DS_DC_LOCATION_INDEX_SEND::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_DS_DC_LOCATION_INDEX_SEND::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_DC_LOCATION_INDEX_SEND::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_DC_LOCATION_INDEX_SEND_descriptor_;
}

const MSG_DS_DC_LOCATION_INDEX_SEND& MSG_DS_DC_LOCATION_INDEX_SEND::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  return *default_instance_;
}

MSG_DS_DC_LOCATION_INDEX_SEND* MSG_DS_DC_LOCATION_INDEX_SEND::default_instance_ = NULL;

MSG_DS_DC_LOCATION_INDEX_SEND* MSG_DS_DC_LOCATION_INDEX_SEND::New() const {
  return new MSG_DS_DC_LOCATION_INDEX_SEND;
}

void MSG_DS_DC_LOCATION_INDEX_SEND::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MSG_DS_DC_LOCATION_INDEX_SEND*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(taskid_, loadtaskid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  locationindex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_DC_LOCATION_INDEX_SEND::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_DC_LOCATION_INDEX_SEND)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 taskID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_loadTaskID;
        break;
      }

      // required uint32 loadTaskID = 2;
      case 2: {
        if (tag == 16) {
         parse_loadTaskID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loadtaskid_)));
          set_has_loadtaskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_locationIndex;
        break;
      }

      // repeated .LOCATION_INDEX locationIndex = 3;
      case 3: {
        if (tag == 26) {
         parse_locationIndex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_locationindex()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_locationIndex;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_DC_LOCATION_INDEX_SEND)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_DC_LOCATION_INDEX_SEND)
  return false;
#undef DO_
}

void MSG_DS_DC_LOCATION_INDEX_SEND::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_DC_LOCATION_INDEX_SEND)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  // required uint32 loadTaskID = 2;
  if (has_loadtaskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->loadtaskid(), output);
  }

  // repeated .LOCATION_INDEX locationIndex = 3;
  for (int i = 0; i < this->locationindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->locationindex(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_DC_LOCATION_INDEX_SEND)
}

::google::protobuf::uint8* MSG_DS_DC_LOCATION_INDEX_SEND::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_DC_LOCATION_INDEX_SEND)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  // required uint32 loadTaskID = 2;
  if (has_loadtaskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->loadtaskid(), target);
  }

  // repeated .LOCATION_INDEX locationIndex = 3;
  for (int i = 0; i < this->locationindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->locationindex(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_DC_LOCATION_INDEX_SEND)
  return target;
}

int MSG_DS_DC_LOCATION_INDEX_SEND::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 taskID = 1;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskid());
    }

    // required uint32 loadTaskID = 2;
    if (has_loadtaskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->loadtaskid());
    }

  }
  // repeated .LOCATION_INDEX locationIndex = 3;
  total_size += 1 * this->locationindex_size();
  for (int i = 0; i < this->locationindex_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->locationindex(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_DC_LOCATION_INDEX_SEND::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_DC_LOCATION_INDEX_SEND* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_DC_LOCATION_INDEX_SEND*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_DC_LOCATION_INDEX_SEND::MergeFrom(const MSG_DS_DC_LOCATION_INDEX_SEND& from) {
  GOOGLE_CHECK_NE(&from, this);
  locationindex_.MergeFrom(from.locationindex_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_loadtaskid()) {
      set_loadtaskid(from.loadtaskid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_DC_LOCATION_INDEX_SEND::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_DC_LOCATION_INDEX_SEND::CopyFrom(const MSG_DS_DC_LOCATION_INDEX_SEND& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_DC_LOCATION_INDEX_SEND::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->locationindex())) return false;
  return true;
}

void MSG_DS_DC_LOCATION_INDEX_SEND::Swap(MSG_DS_DC_LOCATION_INDEX_SEND* other) {
  if (other != this) {
    std::swap(taskid_, other->taskid_);
    std::swap(loadtaskid_, other->loadtaskid_);
    locationindex_.Swap(&other->locationindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_DC_LOCATION_INDEX_SEND::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_DC_LOCATION_INDEX_SEND_descriptor_;
  metadata.reflection = MSG_DS_DC_LOCATION_INDEX_SEND_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MSG_DC_DS_LOCATION_INDEX_SEND_ACK::kTaskIDFieldNumber;
const int MSG_DC_DS_LOCATION_INDEX_SEND_ACK::kLoadTaskIDFieldNumber;
const int MSG_DC_DS_LOCATION_INDEX_SEND_ACK::kStatusCodeFieldNumber;
#endif  // !_MSC_VER

MSG_DC_DS_LOCATION_INDEX_SEND_ACK::MSG_DC_DS_LOCATION_INDEX_SEND_ACK()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DC_DS_LOCATION_INDEX_SEND_ACK)
}

void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::InitAsDefaultInstance() {
}

MSG_DC_DS_LOCATION_INDEX_SEND_ACK::MSG_DC_DS_LOCATION_INDEX_SEND_ACK(const MSG_DC_DS_LOCATION_INDEX_SEND_ACK& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DC_DS_LOCATION_INDEX_SEND_ACK)
}

void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0u;
  loadtaskid_ = 0u;
  statuscode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DC_DS_LOCATION_INDEX_SEND_ACK::~MSG_DC_DS_LOCATION_INDEX_SEND_ACK() {
  // @@protoc_insertion_point(destructor:MSG_DC_DS_LOCATION_INDEX_SEND_ACK)
  SharedDtor();
}

void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DC_DS_LOCATION_INDEX_SEND_ACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DC_DS_LOCATION_INDEX_SEND_ACK_descriptor_;
}

const MSG_DC_DS_LOCATION_INDEX_SEND_ACK& MSG_DC_DS_LOCATION_INDEX_SEND_ACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  return *default_instance_;
}

MSG_DC_DS_LOCATION_INDEX_SEND_ACK* MSG_DC_DS_LOCATION_INDEX_SEND_ACK::default_instance_ = NULL;

MSG_DC_DS_LOCATION_INDEX_SEND_ACK* MSG_DC_DS_LOCATION_INDEX_SEND_ACK::New() const {
  return new MSG_DC_DS_LOCATION_INDEX_SEND_ACK;
}

void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MSG_DC_DS_LOCATION_INDEX_SEND_ACK*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(taskid_, statuscode_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DC_DS_LOCATION_INDEX_SEND_ACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DC_DS_LOCATION_INDEX_SEND_ACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 taskID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_loadTaskID;
        break;
      }

      // required uint32 loadTaskID = 2;
      case 2: {
        if (tag == 16) {
         parse_loadTaskID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loadtaskid_)));
          set_has_loadtaskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_statusCode;
        break;
      }

      // required int32 statusCode = 3;
      case 3: {
        if (tag == 24) {
         parse_statusCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statuscode_)));
          set_has_statuscode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DC_DS_LOCATION_INDEX_SEND_ACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DC_DS_LOCATION_INDEX_SEND_ACK)
  return false;
#undef DO_
}

void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DC_DS_LOCATION_INDEX_SEND_ACK)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  // required uint32 loadTaskID = 2;
  if (has_loadtaskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->loadtaskid(), output);
  }

  // required int32 statusCode = 3;
  if (has_statuscode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->statuscode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DC_DS_LOCATION_INDEX_SEND_ACK)
}

::google::protobuf::uint8* MSG_DC_DS_LOCATION_INDEX_SEND_ACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DC_DS_LOCATION_INDEX_SEND_ACK)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  // required uint32 loadTaskID = 2;
  if (has_loadtaskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->loadtaskid(), target);
  }

  // required int32 statusCode = 3;
  if (has_statuscode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->statuscode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DC_DS_LOCATION_INDEX_SEND_ACK)
  return target;
}

int MSG_DC_DS_LOCATION_INDEX_SEND_ACK::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 taskID = 1;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskid());
    }

    // required uint32 loadTaskID = 2;
    if (has_loadtaskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->loadtaskid());
    }

    // required int32 statusCode = 3;
    if (has_statuscode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->statuscode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DC_DS_LOCATION_INDEX_SEND_ACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DC_DS_LOCATION_INDEX_SEND_ACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::MergeFrom(const MSG_DC_DS_LOCATION_INDEX_SEND_ACK& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_loadtaskid()) {
      set_loadtaskid(from.loadtaskid());
    }
    if (from.has_statuscode()) {
      set_statuscode(from.statuscode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::CopyFrom(const MSG_DC_DS_LOCATION_INDEX_SEND_ACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DC_DS_LOCATION_INDEX_SEND_ACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::Swap(MSG_DC_DS_LOCATION_INDEX_SEND_ACK* other) {
  if (other != this) {
    std::swap(taskid_, other->taskid_);
    std::swap(loadtaskid_, other->loadtaskid_);
    std::swap(statuscode_, other->statuscode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DC_DS_LOCATION_INDEX_SEND_ACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DC_DS_LOCATION_INDEX_SEND_ACK_descriptor_;
  metadata.reflection = MSG_DC_DS_LOCATION_INDEX_SEND_ACK_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
