// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSG_DS_CS_DELTA_UPLOAD.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MSG_DS_CS_DELTA_UPLOAD.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MSG_DS_CS_DELTA_UPLOAD_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_CS_DELTA_UPLOAD_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto() {
  protobuf_AddDesc_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MSG_DS_CS_DELTA_UPLOAD.proto");
  GOOGLE_CHECK(file != NULL);
  MSG_DS_CS_DELTA_UPLOAD_descriptor_ = file->message_type(0);
  static const int MSG_DS_CS_DELTA_UPLOAD_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD, deltasize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD, deltadata_),
  };
  MSG_DS_CS_DELTA_UPLOAD_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_CS_DELTA_UPLOAD_descriptor_,
      MSG_DS_CS_DELTA_UPLOAD::default_instance_,
      MSG_DS_CS_DELTA_UPLOAD_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_CS_DELTA_UPLOAD));
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_descriptor_ = MSG_DS_CS_DELTA_UPLOAD_descriptor_->nested_type(0);
  static const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO, dbname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO, tabledeltadata_),
  };
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_descriptor_,
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::default_instance_,
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO));
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_descriptor_ = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_descriptor_->nested_type(0);
  static const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO, operation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO, rowid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO, rowdata_),
  };
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_descriptor_,
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::default_instance_,
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO));
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_descriptor_ = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_descriptor_->nested_type(0);
  static const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO, colname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO, coltype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO, colvalue_),
  };
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_descriptor_,
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::default_instance_,
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO));
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_descriptor_ = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_descriptor_->nested_type(0);
  static const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE, strvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE, ivalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE, fvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE, dvalue_),
  };
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_descriptor_,
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::default_instance_,
      MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE));
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_descriptor_ = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_descriptor_->enum_type(0);
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_descriptor_ = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_descriptor_->enum_type(0);
  MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_descriptor_ = file->message_type(1);
  static const int MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK, statuscode_),
  };
  MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_descriptor_,
      MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::default_instance_,
      MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_CS_DELTA_UPLOAD_descriptor_, &MSG_DS_CS_DELTA_UPLOAD::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_descriptor_, &MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_descriptor_, &MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_descriptor_, &MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_descriptor_, &MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_descriptor_, &MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto() {
  delete MSG_DS_CS_DELTA_UPLOAD::default_instance_;
  delete MSG_DS_CS_DELTA_UPLOAD_reflection_;
  delete MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::default_instance_;
  delete MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_reflection_;
  delete MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::default_instance_;
  delete MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_reflection_;
  delete MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::default_instance_;
  delete MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_reflection_;
  delete MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::default_instance_;
  delete MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_reflection_;
  delete MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::default_instance_;
  delete MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_reflection_;
}

void protobuf_AddDesc_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034MSG_DS_CS_DELTA_UPLOAD.proto\"\205\007\n\026MSG_D"
    "S_CS_DELTA_UPLOAD\022\016\n\006taskID\030\001 \002(\r\022\021\n\tdel"
    "taSize\030\002 \002(\r\022:\n\tdeltaData\030\003 \003(\0132\'.MSG_DS"
    "_CS_DELTA_UPLOAD.DELTA_DATA_INFO\032\213\006\n\017DEL"
    "TA_DATA_INFO\022\016\n\006dbName\030\001 \002(\t\022\021\n\ttableNam"
    "e\030\002 \002(\t\022P\n\016tableDeltaData\030\003 \003(\01328.MSG_DS"
    "_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_D"
    "ELTA_INFO\032\202\005\n\020TABLE_DELTA_INFO\022]\n\toperat"
    "ion\030\001 \002(\0162B.MSG_DS_CS_DELTA_UPLOAD.DELTA"
    "_DATA_INFO.TABLE_DELTA_INFO.OPERATION:\006U"
    "PDATE\022\r\n\005rowID\030\002 \002(\r\022W\n\007rowData\030\003 \003(\0132F."
    "MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.T"
    "ABLE_DELTA_INFO.ROW_DATA_INFO\032\365\002\n\rROW_DA"
    "TA_INFO\022\017\n\007colName\030\001 \002(\t\022h\n\007colType\030\002 \002("
    "\0162O.MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_IN"
    "FO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_TY"
    "PE:\006STRING\022b\n\010colValue\030\003 \002(\0132P.MSG_DS_CS"
    "_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELT"
    "A_INFO.ROW_DATA_INFO.COL_VALUE\032M\n\tCOL_VA"
    "LUE\022\020\n\010strValue\030\001 \001(\t\022\016\n\006iValue\030\002 \001(\005\022\016\n"
    "\006fValue\030\003 \001(\002\022\016\n\006dValue\030\004 \001(\001\"6\n\010COL_TYP"
    "E\022\n\n\006STRING\020\000\022\007\n\003INT\020\001\022\t\n\005FLOAT\020\002\022\n\n\006DOU"
    "BLE\020\003\"/\n\tOPERATION\022\n\n\006UPDATE\020\000\022\n\n\006INSERT"
    "\020\001\022\n\n\006DELETE\020\002\"H\n\"MSG_CS_DS_DELTA_DATA_I"
    "NFO_SEND_ACK\022\016\n\006taskID\030\001 \002(\r\022\022\n\nstatusCo"
    "de\030\002 \002(\005", 1008);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MSG_DS_CS_DELTA_UPLOAD.proto", &protobuf_RegisterTypes);
  MSG_DS_CS_DELTA_UPLOAD::default_instance_ = new MSG_DS_CS_DELTA_UPLOAD();
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::default_instance_ = new MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO();
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::default_instance_ = new MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO();
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::default_instance_ = new MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO();
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::default_instance_ = new MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE();
  MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::default_instance_ = new MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK();
  MSG_DS_CS_DELTA_UPLOAD::default_instance_->InitAsDefaultInstance();
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::default_instance_->InitAsDefaultInstance();
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::default_instance_->InitAsDefaultInstance();
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::default_instance_->InitAsDefaultInstance();
  MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::default_instance_->InitAsDefaultInstance();
  MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto {
  StaticDescriptorInitializer_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto() {
    protobuf_AddDesc_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto();
  }
} static_descriptor_initializer_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_descriptor_;
}
bool MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::UPDATE;
const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::INSERT;
const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::DELETE;
const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::OPERATION_MIN;
const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::OPERATION_MAX;
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::OPERATION_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_descriptor_;
}
bool MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::STRING;
const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::INT;
const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::FLOAT;
const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::DOUBLE;
const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::COL_TYPE_MIN;
const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::COL_TYPE_MAX;
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::COL_TYPE_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::kStrValueFieldNumber;
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::kIValueFieldNumber;
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::kFValueFieldNumber;
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::kDValueFieldNumber;
#endif  // !_MSC_VER

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE)
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::InitAsDefaultInstance() {
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE)
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ivalue_ = 0;
  fvalue_ = 0;
  dvalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::~MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE() {
  // @@protoc_insertion_point(destructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE)
  SharedDtor();
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::SharedDtor() {
  if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strvalue_;
  }
  if (this != default_instance_) {
  }
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_descriptor_;
}

const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::default_instance_ = NULL;

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::New() const {
  return new MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(ivalue_, dvalue_);
    if (has_strvalue()) {
      if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        strvalue_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "strvalue");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iValue;
        break;
      }

      // optional int32 iValue = 2;
      case 2: {
        if (tag == 16) {
         parse_iValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ivalue_)));
          set_has_ivalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_fValue;
        break;
      }

      // optional float fValue = 3;
      case 3: {
        if (tag == 29) {
         parse_fValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fvalue_)));
          set_has_fvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_dValue;
        break;
      }

      // optional double dValue = 4;
      case 4: {
        if (tag == 33) {
         parse_dValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dvalue_)));
          set_has_dvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE)
  return false;
#undef DO_
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE)
  // optional string strValue = 1;
  if (has_strvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strvalue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strvalue(), output);
  }

  // optional int32 iValue = 2;
  if (has_ivalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ivalue(), output);
  }

  // optional float fValue = 3;
  if (has_fvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fvalue(), output);
  }

  // optional double dValue = 4;
  if (has_dvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE)
}

::google::protobuf::uint8* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE)
  // optional string strValue = 1;
  if (has_strvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strvalue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strvalue(), target);
  }

  // optional int32 iValue = 2;
  if (has_ivalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ivalue(), target);
  }

  // optional float fValue = 3;
  if (has_fvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fvalue(), target);
  }

  // optional double dValue = 4;
  if (has_dvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE)
  return target;
}

int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string strValue = 1;
    if (has_strvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strvalue());
    }

    // optional int32 iValue = 2;
    if (has_ivalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ivalue());
    }

    // optional float fValue = 3;
    if (has_fvalue()) {
      total_size += 1 + 4;
    }

    // optional double dValue = 4;
    if (has_dvalue()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::MergeFrom(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strvalue()) {
      set_strvalue(from.strvalue());
    }
    if (from.has_ivalue()) {
      set_ivalue(from.ivalue());
    }
    if (from.has_fvalue()) {
      set_fvalue(from.fvalue());
    }
    if (from.has_dvalue()) {
      set_dvalue(from.dvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::CopyFrom(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::IsInitialized() const {

  return true;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::Swap(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* other) {
  if (other != this) {
    std::swap(strvalue_, other->strvalue_);
    std::swap(ivalue_, other->ivalue_);
    std::swap(fvalue_, other->fvalue_);
    std::swap(dvalue_, other->dvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_descriptor_;
  metadata.reflection = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::kColNameFieldNumber;
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::kColTypeFieldNumber;
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::kColValueFieldNumber;
#endif  // !_MSC_VER

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO)
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::InitAsDefaultInstance() {
  colvalue_ = const_cast< ::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE*>(&::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::default_instance());
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO)
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coltype_ = 0;
  colvalue_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::~MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO() {
  // @@protoc_insertion_point(destructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO)
  SharedDtor();
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::SharedDtor() {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete colname_;
  }
  if (this != default_instance_) {
    delete colvalue_;
  }
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_descriptor_;
}

const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::default_instance_ = NULL;

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::New() const {
  return new MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_colname()) {
      if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        colname_->clear();
      }
    }
    coltype_ = 0;
    if (has_colvalue()) {
      if (colvalue_ != NULL) colvalue_->::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string colName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_colname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->colname().data(), this->colname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "colname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_colType;
        break;
      }

      // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_TYPE colType = 2 [default = STRING];
      case 2: {
        if (tag == 16) {
         parse_colType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_IsValid(value)) {
            set_coltype(static_cast< ::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_colValue;
        break;
      }

      // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE colValue = 3;
      case 3: {
        if (tag == 26) {
         parse_colValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_colvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO)
  return false;
#undef DO_
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO)
  // required string colName = 1;
  if (has_colname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->colname().data(), this->colname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "colname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->colname(), output);
  }

  // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_TYPE colType = 2 [default = STRING];
  if (has_coltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->coltype(), output);
  }

  // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE colValue = 3;
  if (has_colvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->colvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO)
}

::google::protobuf::uint8* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO)
  // required string colName = 1;
  if (has_colname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->colname().data(), this->colname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "colname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->colname(), target);
  }

  // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_TYPE colType = 2 [default = STRING];
  if (has_coltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->coltype(), target);
  }

  // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE colValue = 3;
  if (has_colvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->colvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO)
  return target;
}

int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string colName = 1;
    if (has_colname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->colname());
    }

    // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_TYPE colType = 2 [default = STRING];
    if (has_coltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->coltype());
    }

    // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE colValue = 3;
    if (has_colvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->colvalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::MergeFrom(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_colname()) {
      set_colname(from.colname());
    }
    if (from.has_coltype()) {
      set_coltype(from.coltype());
    }
    if (from.has_colvalue()) {
      mutable_colvalue()->::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::MergeFrom(from.colvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::CopyFrom(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::Swap(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO* other) {
  if (other != this) {
    std::swap(colname_, other->colname_);
    std::swap(coltype_, other->coltype_);
    std::swap(colvalue_, other->colvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_descriptor_;
  metadata.reflection = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::kOperationFieldNumber;
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::kRowIDFieldNumber;
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::kRowDataFieldNumber;
#endif  // !_MSC_VER

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO)
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::InitAsDefaultInstance() {
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO)
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::SharedCtor() {
  _cached_size_ = 0;
  operation_ = 0;
  rowid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::~MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO() {
  // @@protoc_insertion_point(destructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO)
  SharedDtor();
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_descriptor_;
}

const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO& MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::default_instance_ = NULL;

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::New() const {
  return new MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(operation_, rowid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  rowdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.OPERATION operation = 1 [default = UPDATE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_IsValid(value)) {
            set_operation(static_cast< ::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rowID;
        break;
      }

      // required uint32 rowID = 2;
      case 2: {
        if (tag == 16) {
         parse_rowID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rowid_)));
          set_has_rowid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rowData;
        break;
      }

      // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO rowData = 3;
      case 3: {
        if (tag == 26) {
         parse_rowData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rowdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rowData;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO)
  return false;
#undef DO_
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO)
  // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.OPERATION operation = 1 [default = UPDATE];
  if (has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->operation(), output);
  }

  // required uint32 rowID = 2;
  if (has_rowid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rowid(), output);
  }

  // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO rowData = 3;
  for (int i = 0; i < this->rowdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rowdata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO)
}

::google::protobuf::uint8* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO)
  // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.OPERATION operation = 1 [default = UPDATE];
  if (has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->operation(), target);
  }

  // required uint32 rowID = 2;
  if (has_rowid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rowid(), target);
  }

  // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO rowData = 3;
  for (int i = 0; i < this->rowdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rowdata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO)
  return target;
}

int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.OPERATION operation = 1 [default = UPDATE];
    if (has_operation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation());
    }

    // required uint32 rowID = 2;
    if (has_rowid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rowid());
    }

  }
  // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO rowData = 3;
  total_size += 1 * this->rowdata_size();
  for (int i = 0; i < this->rowdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rowdata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::MergeFrom(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  rowdata_.MergeFrom(from.rowdata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operation()) {
      set_operation(from.operation());
    }
    if (from.has_rowid()) {
      set_rowid(from.rowid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::CopyFrom(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->rowdata())) return false;
  return true;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::Swap(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO* other) {
  if (other != this) {
    std::swap(operation_, other->operation_);
    std::swap(rowid_, other->rowid_);
    rowdata_.Swap(&other->rowdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_descriptor_;
  metadata.reflection = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_TABLE_DELTA_INFO_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::kDbNameFieldNumber;
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::kTableNameFieldNumber;
const int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::kTableDeltaDataFieldNumber;
#endif  // !_MSC_VER

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO)
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::InitAsDefaultInstance() {
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO)
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::~MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO() {
  // @@protoc_insertion_point(destructor:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO)
  SharedDtor();
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::SharedDtor() {
  if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbname_;
  }
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablename_;
  }
  if (this != default_instance_) {
  }
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_descriptor_;
}

const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO& MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::default_instance_ = NULL;

MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::New() const {
  return new MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_dbname()) {
      if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        dbname_->clear();
      }
    }
    if (has_tablename()) {
      if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tablename_->clear();
      }
    }
  }
  tabledeltadata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dbName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dbname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dbname().data(), this->dbname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dbname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tableName;
        break;
      }

      // required string tableName = 2;
      case 2: {
        if (tag == 18) {
         parse_tableName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tablename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tableDeltaData;
        break;
      }

      // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO tableDeltaData = 3;
      case 3: {
        if (tag == 26) {
         parse_tableDeltaData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tabledeltadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tableDeltaData;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO)
  return false;
#undef DO_
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO)
  // required string dbName = 1;
  if (has_dbname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dbname().data(), this->dbname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dbname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dbname(), output);
  }

  // required string tableName = 2;
  if (has_tablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tablename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tablename(), output);
  }

  // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO tableDeltaData = 3;
  for (int i = 0; i < this->tabledeltadata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tabledeltadata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO)
}

::google::protobuf::uint8* MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO)
  // required string dbName = 1;
  if (has_dbname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dbname().data(), this->dbname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dbname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dbname(), target);
  }

  // required string tableName = 2;
  if (has_tablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tablename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tablename(), target);
  }

  // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO tableDeltaData = 3;
  for (int i = 0; i < this->tabledeltadata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->tabledeltadata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO)
  return target;
}

int MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string dbName = 1;
    if (has_dbname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dbname());
    }

    // required string tableName = 2;
    if (has_tablename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tablename());
    }

  }
  // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO.TABLE_DELTA_INFO tableDeltaData = 3;
  total_size += 1 * this->tabledeltadata_size();
  for (int i = 0; i < this->tabledeltadata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tabledeltadata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::MergeFrom(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  tabledeltadata_.MergeFrom(from.tabledeltadata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dbname()) {
      set_dbname(from.dbname());
    }
    if (from.has_tablename()) {
      set_tablename(from.tablename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::CopyFrom(const MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->tabledeltadata())) return false;
  return true;
}

void MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::Swap(MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO* other) {
  if (other != this) {
    std::swap(dbname_, other->dbname_);
    std::swap(tablename_, other->tablename_);
    tabledeltadata_.Swap(&other->tabledeltadata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_descriptor_;
  metadata.reflection = MSG_DS_CS_DELTA_UPLOAD_DELTA_DATA_INFO_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MSG_DS_CS_DELTA_UPLOAD::kTaskIDFieldNumber;
const int MSG_DS_CS_DELTA_UPLOAD::kDeltaSizeFieldNumber;
const int MSG_DS_CS_DELTA_UPLOAD::kDeltaDataFieldNumber;
#endif  // !_MSC_VER

MSG_DS_CS_DELTA_UPLOAD::MSG_DS_CS_DELTA_UPLOAD()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_CS_DELTA_UPLOAD)
}

void MSG_DS_CS_DELTA_UPLOAD::InitAsDefaultInstance() {
}

MSG_DS_CS_DELTA_UPLOAD::MSG_DS_CS_DELTA_UPLOAD(const MSG_DS_CS_DELTA_UPLOAD& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_CS_DELTA_UPLOAD)
}

void MSG_DS_CS_DELTA_UPLOAD::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0u;
  deltasize_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_CS_DELTA_UPLOAD::~MSG_DS_CS_DELTA_UPLOAD() {
  // @@protoc_insertion_point(destructor:MSG_DS_CS_DELTA_UPLOAD)
  SharedDtor();
}

void MSG_DS_CS_DELTA_UPLOAD::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_DS_CS_DELTA_UPLOAD::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_CS_DELTA_UPLOAD::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_CS_DELTA_UPLOAD_descriptor_;
}

const MSG_DS_CS_DELTA_UPLOAD& MSG_DS_CS_DELTA_UPLOAD::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_DS_CS_DELTA_UPLOAD* MSG_DS_CS_DELTA_UPLOAD::default_instance_ = NULL;

MSG_DS_CS_DELTA_UPLOAD* MSG_DS_CS_DELTA_UPLOAD::New() const {
  return new MSG_DS_CS_DELTA_UPLOAD;
}

void MSG_DS_CS_DELTA_UPLOAD::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MSG_DS_CS_DELTA_UPLOAD*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(taskid_, deltasize_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  deltadata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_CS_DELTA_UPLOAD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_CS_DELTA_UPLOAD)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 taskID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_deltaSize;
        break;
      }

      // required uint32 deltaSize = 2;
      case 2: {
        if (tag == 16) {
         parse_deltaSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deltasize_)));
          set_has_deltasize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_deltaData;
        break;
      }

      // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO deltaData = 3;
      case 3: {
        if (tag == 26) {
         parse_deltaData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_deltadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_deltaData;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_CS_DELTA_UPLOAD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_CS_DELTA_UPLOAD)
  return false;
#undef DO_
}

void MSG_DS_CS_DELTA_UPLOAD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_CS_DELTA_UPLOAD)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  // required uint32 deltaSize = 2;
  if (has_deltasize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->deltasize(), output);
  }

  // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO deltaData = 3;
  for (int i = 0; i < this->deltadata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->deltadata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_CS_DELTA_UPLOAD)
}

::google::protobuf::uint8* MSG_DS_CS_DELTA_UPLOAD::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_CS_DELTA_UPLOAD)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  // required uint32 deltaSize = 2;
  if (has_deltasize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->deltasize(), target);
  }

  // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO deltaData = 3;
  for (int i = 0; i < this->deltadata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->deltadata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_CS_DELTA_UPLOAD)
  return target;
}

int MSG_DS_CS_DELTA_UPLOAD::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 taskID = 1;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskid());
    }

    // required uint32 deltaSize = 2;
    if (has_deltasize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deltasize());
    }

  }
  // repeated .MSG_DS_CS_DELTA_UPLOAD.DELTA_DATA_INFO deltaData = 3;
  total_size += 1 * this->deltadata_size();
  for (int i = 0; i < this->deltadata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->deltadata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_CS_DELTA_UPLOAD::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_CS_DELTA_UPLOAD* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_CS_DELTA_UPLOAD*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_CS_DELTA_UPLOAD::MergeFrom(const MSG_DS_CS_DELTA_UPLOAD& from) {
  GOOGLE_CHECK_NE(&from, this);
  deltadata_.MergeFrom(from.deltadata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_deltasize()) {
      set_deltasize(from.deltasize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_CS_DELTA_UPLOAD::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_CS_DELTA_UPLOAD::CopyFrom(const MSG_DS_CS_DELTA_UPLOAD& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_CS_DELTA_UPLOAD::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->deltadata())) return false;
  return true;
}

void MSG_DS_CS_DELTA_UPLOAD::Swap(MSG_DS_CS_DELTA_UPLOAD* other) {
  if (other != this) {
    std::swap(taskid_, other->taskid_);
    std::swap(deltasize_, other->deltasize_);
    deltadata_.Swap(&other->deltadata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_CS_DELTA_UPLOAD::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_CS_DELTA_UPLOAD_descriptor_;
  metadata.reflection = MSG_DS_CS_DELTA_UPLOAD_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::kTaskIDFieldNumber;
const int MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::kStatusCodeFieldNumber;
#endif  // !_MSC_VER

MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK)
}

void MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::InitAsDefaultInstance() {
}

MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK(const MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK)
}

void MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0u;
  statuscode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::~MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK() {
  // @@protoc_insertion_point(destructor:MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK)
  SharedDtor();
}

void MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_descriptor_;
}

const MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK& MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fCS_5fDELTA_5fUPLOAD_2eproto();
  return *default_instance_;
}

MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK* MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::default_instance_ = NULL;

MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK* MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::New() const {
  return new MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK;
}

void MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(taskid_, statuscode_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 taskID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_statusCode;
        break;
      }

      // required int32 statusCode = 2;
      case 2: {
        if (tag == 16) {
         parse_statusCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statuscode_)));
          set_has_statuscode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK)
  return false;
#undef DO_
}

void MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  // required int32 statusCode = 2;
  if (has_statuscode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->statuscode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK)
}

::google::protobuf::uint8* MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  // required int32 statusCode = 2;
  if (has_statuscode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->statuscode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK)
  return target;
}

int MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 taskID = 1;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskid());
    }

    // required int32 statusCode = 2;
    if (has_statuscode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->statuscode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::MergeFrom(const MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_statuscode()) {
      set_statuscode(from.statuscode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::CopyFrom(const MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::Swap(MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK* other) {
  if (other != this) {
    std::swap(taskid_, other->taskid_);
    std::swap(statuscode_, other->statuscode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_descriptor_;
  metadata.reflection = MSG_CS_DS_DELTA_DATA_INFO_SEND_ACK_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
