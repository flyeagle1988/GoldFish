// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSG_DS_DC_RESOURCE_GET.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MSG_DS_DC_RESOURCE_GET.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MSG_DS_DC_RESOURCE_GET_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DS_DC_RESOURCE_GET_reflection_ = NULL;
const ::google::protobuf::Descriptor* CS_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_INFO_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DC_DS_RESOURCE_GET_ACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DC_DS_RESOURCE_GET_ACK_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto() {
  protobuf_AddDesc_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MSG_DS_DC_RESOURCE_GET.proto");
  GOOGLE_CHECK(file != NULL);
  MSG_DS_DC_RESOURCE_GET_descriptor_ = file->message_type(0);
  static const int MSG_DS_DC_RESOURCE_GET_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_DC_RESOURCE_GET, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_DC_RESOURCE_GET, columnsize_),
  };
  MSG_DS_DC_RESOURCE_GET_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DS_DC_RESOURCE_GET_descriptor_,
      MSG_DS_DC_RESOURCE_GET::default_instance_,
      MSG_DS_DC_RESOURCE_GET_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_DC_RESOURCE_GET, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DS_DC_RESOURCE_GET, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DS_DC_RESOURCE_GET));
  CS_INFO_descriptor_ = file->message_type(1);
  static const int CS_INFO_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_INFO, csip_),
  };
  CS_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_INFO_descriptor_,
      CS_INFO::default_instance_,
      CS_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_INFO));
  MSG_DC_DS_RESOURCE_GET_ACK_descriptor_ = file->message_type(2);
  static const int MSG_DC_DS_RESOURCE_GET_ACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DS_RESOURCE_GET_ACK, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DS_RESOURCE_GET_ACK, csinfo_),
  };
  MSG_DC_DS_RESOURCE_GET_ACK_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DC_DS_RESOURCE_GET_ACK_descriptor_,
      MSG_DC_DS_RESOURCE_GET_ACK::default_instance_,
      MSG_DC_DS_RESOURCE_GET_ACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DS_RESOURCE_GET_ACK, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DS_RESOURCE_GET_ACK, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DC_DS_RESOURCE_GET_ACK));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DS_DC_RESOURCE_GET_descriptor_, &MSG_DS_DC_RESOURCE_GET::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_INFO_descriptor_, &CS_INFO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DC_DS_RESOURCE_GET_ACK_descriptor_, &MSG_DC_DS_RESOURCE_GET_ACK::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto() {
  delete MSG_DS_DC_RESOURCE_GET::default_instance_;
  delete MSG_DS_DC_RESOURCE_GET_reflection_;
  delete CS_INFO::default_instance_;
  delete CS_INFO_reflection_;
  delete MSG_DC_DS_RESOURCE_GET_ACK::default_instance_;
  delete MSG_DC_DS_RESOURCE_GET_ACK_reflection_;
}

void protobuf_AddDesc_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034MSG_DS_DC_RESOURCE_GET.proto\"<\n\026MSG_DS"
    "_DC_RESOURCE_GET\022\016\n\006taskID\030\001 \002(\r\022\022\n\ncolu"
    "mnSize\030\002 \003(\r\"\027\n\007CS_INFO\022\014\n\004csIP\030\001 \001(\t\"F\n"
    "\032MSG_DC_DS_RESOURCE_GET_ACK\022\016\n\006taskID\030\001 "
    "\002(\r\022\030\n\006csInfo\030\002 \003(\0132\010.CS_INFO", 189);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MSG_DS_DC_RESOURCE_GET.proto", &protobuf_RegisterTypes);
  MSG_DS_DC_RESOURCE_GET::default_instance_ = new MSG_DS_DC_RESOURCE_GET();
  CS_INFO::default_instance_ = new CS_INFO();
  MSG_DC_DS_RESOURCE_GET_ACK::default_instance_ = new MSG_DC_DS_RESOURCE_GET_ACK();
  MSG_DS_DC_RESOURCE_GET::default_instance_->InitAsDefaultInstance();
  CS_INFO::default_instance_->InitAsDefaultInstance();
  MSG_DC_DS_RESOURCE_GET_ACK::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto {
  StaticDescriptorInitializer_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto() {
    protobuf_AddDesc_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto();
  }
} static_descriptor_initializer_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MSG_DS_DC_RESOURCE_GET::kTaskIDFieldNumber;
const int MSG_DS_DC_RESOURCE_GET::kColumnSizeFieldNumber;
#endif  // !_MSC_VER

MSG_DS_DC_RESOURCE_GET::MSG_DS_DC_RESOURCE_GET()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DS_DC_RESOURCE_GET)
}

void MSG_DS_DC_RESOURCE_GET::InitAsDefaultInstance() {
}

MSG_DS_DC_RESOURCE_GET::MSG_DS_DC_RESOURCE_GET(const MSG_DS_DC_RESOURCE_GET& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DS_DC_RESOURCE_GET)
}

void MSG_DS_DC_RESOURCE_GET::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DS_DC_RESOURCE_GET::~MSG_DS_DC_RESOURCE_GET() {
  // @@protoc_insertion_point(destructor:MSG_DS_DC_RESOURCE_GET)
  SharedDtor();
}

void MSG_DS_DC_RESOURCE_GET::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_DS_DC_RESOURCE_GET::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DS_DC_RESOURCE_GET::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DS_DC_RESOURCE_GET_descriptor_;
}

const MSG_DS_DC_RESOURCE_GET& MSG_DS_DC_RESOURCE_GET::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto();
  return *default_instance_;
}

MSG_DS_DC_RESOURCE_GET* MSG_DS_DC_RESOURCE_GET::default_instance_ = NULL;

MSG_DS_DC_RESOURCE_GET* MSG_DS_DC_RESOURCE_GET::New() const {
  return new MSG_DS_DC_RESOURCE_GET;
}

void MSG_DS_DC_RESOURCE_GET::Clear() {
  taskid_ = 0u;
  columnsize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DS_DC_RESOURCE_GET::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DS_DC_RESOURCE_GET)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 taskID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_columnSize;
        break;
      }

      // repeated uint32 columnSize = 2;
      case 2: {
        if (tag == 16) {
         parse_columnSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_columnsize())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_columnsize())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_columnSize;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DS_DC_RESOURCE_GET)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DS_DC_RESOURCE_GET)
  return false;
#undef DO_
}

void MSG_DS_DC_RESOURCE_GET::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DS_DC_RESOURCE_GET)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  // repeated uint32 columnSize = 2;
  for (int i = 0; i < this->columnsize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->columnsize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DS_DC_RESOURCE_GET)
}

::google::protobuf::uint8* MSG_DS_DC_RESOURCE_GET::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DS_DC_RESOURCE_GET)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  // repeated uint32 columnSize = 2;
  for (int i = 0; i < this->columnsize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->columnsize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DS_DC_RESOURCE_GET)
  return target;
}

int MSG_DS_DC_RESOURCE_GET::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 taskID = 1;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskid());
    }

  }
  // repeated uint32 columnSize = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->columnsize_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->columnsize(i));
    }
    total_size += 1 * this->columnsize_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DS_DC_RESOURCE_GET::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DS_DC_RESOURCE_GET* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DS_DC_RESOURCE_GET*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DS_DC_RESOURCE_GET::MergeFrom(const MSG_DS_DC_RESOURCE_GET& from) {
  GOOGLE_CHECK_NE(&from, this);
  columnsize_.MergeFrom(from.columnsize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DS_DC_RESOURCE_GET::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DS_DC_RESOURCE_GET::CopyFrom(const MSG_DS_DC_RESOURCE_GET& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DS_DC_RESOURCE_GET::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MSG_DS_DC_RESOURCE_GET::Swap(MSG_DS_DC_RESOURCE_GET* other) {
  if (other != this) {
    std::swap(taskid_, other->taskid_);
    columnsize_.Swap(&other->columnsize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DS_DC_RESOURCE_GET::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DS_DC_RESOURCE_GET_descriptor_;
  metadata.reflection = MSG_DS_DC_RESOURCE_GET_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CS_INFO::kCsIPFieldNumber;
#endif  // !_MSC_VER

CS_INFO::CS_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_INFO)
}

void CS_INFO::InitAsDefaultInstance() {
}

CS_INFO::CS_INFO(const CS_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CS_INFO)
}

void CS_INFO::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  csip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_INFO::~CS_INFO() {
  // @@protoc_insertion_point(destructor:CS_INFO)
  SharedDtor();
}

void CS_INFO::SharedDtor() {
  if (csip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete csip_;
  }
  if (this != default_instance_) {
  }
}

void CS_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_INFO_descriptor_;
}

const CS_INFO& CS_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto();
  return *default_instance_;
}

CS_INFO* CS_INFO::default_instance_ = NULL;

CS_INFO* CS_INFO::New() const {
  return new CS_INFO;
}

void CS_INFO::Clear() {
  if (has_csip()) {
    if (csip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      csip_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_INFO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string csIP = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_csip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->csip().data(), this->csip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "csip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_INFO)
  return false;
#undef DO_
}

void CS_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_INFO)
  // optional string csIP = 1;
  if (has_csip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csip().data(), this->csip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->csip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_INFO)
}

::google::protobuf::uint8* CS_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_INFO)
  // optional string csIP = 1;
  if (has_csip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csip().data(), this->csip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->csip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_INFO)
  return target;
}

int CS_INFO::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string csIP = 1;
    if (has_csip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->csip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_INFO::MergeFrom(const CS_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_csip()) {
      set_csip(from.csip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_INFO::CopyFrom(const CS_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_INFO::IsInitialized() const {

  return true;
}

void CS_INFO::Swap(CS_INFO* other) {
  if (other != this) {
    std::swap(csip_, other->csip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_INFO_descriptor_;
  metadata.reflection = CS_INFO_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MSG_DC_DS_RESOURCE_GET_ACK::kTaskIDFieldNumber;
const int MSG_DC_DS_RESOURCE_GET_ACK::kCsInfoFieldNumber;
#endif  // !_MSC_VER

MSG_DC_DS_RESOURCE_GET_ACK::MSG_DC_DS_RESOURCE_GET_ACK()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG_DC_DS_RESOURCE_GET_ACK)
}

void MSG_DC_DS_RESOURCE_GET_ACK::InitAsDefaultInstance() {
}

MSG_DC_DS_RESOURCE_GET_ACK::MSG_DC_DS_RESOURCE_GET_ACK(const MSG_DC_DS_RESOURCE_GET_ACK& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG_DC_DS_RESOURCE_GET_ACK)
}

void MSG_DC_DS_RESOURCE_GET_ACK::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DC_DS_RESOURCE_GET_ACK::~MSG_DC_DS_RESOURCE_GET_ACK() {
  // @@protoc_insertion_point(destructor:MSG_DC_DS_RESOURCE_GET_ACK)
  SharedDtor();
}

void MSG_DC_DS_RESOURCE_GET_ACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_DC_DS_RESOURCE_GET_ACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DC_DS_RESOURCE_GET_ACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DC_DS_RESOURCE_GET_ACK_descriptor_;
}

const MSG_DC_DS_RESOURCE_GET_ACK& MSG_DC_DS_RESOURCE_GET_ACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDS_5fDC_5fRESOURCE_5fGET_2eproto();
  return *default_instance_;
}

MSG_DC_DS_RESOURCE_GET_ACK* MSG_DC_DS_RESOURCE_GET_ACK::default_instance_ = NULL;

MSG_DC_DS_RESOURCE_GET_ACK* MSG_DC_DS_RESOURCE_GET_ACK::New() const {
  return new MSG_DC_DS_RESOURCE_GET_ACK;
}

void MSG_DC_DS_RESOURCE_GET_ACK::Clear() {
  taskid_ = 0u;
  csinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DC_DS_RESOURCE_GET_ACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG_DC_DS_RESOURCE_GET_ACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 taskID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_csInfo;
        break;
      }

      // repeated .CS_INFO csInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_csInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_csinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_csInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG_DC_DS_RESOURCE_GET_ACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG_DC_DS_RESOURCE_GET_ACK)
  return false;
#undef DO_
}

void MSG_DC_DS_RESOURCE_GET_ACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG_DC_DS_RESOURCE_GET_ACK)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  // repeated .CS_INFO csInfo = 2;
  for (int i = 0; i < this->csinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->csinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG_DC_DS_RESOURCE_GET_ACK)
}

::google::protobuf::uint8* MSG_DC_DS_RESOURCE_GET_ACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG_DC_DS_RESOURCE_GET_ACK)
  // required uint32 taskID = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  // repeated .CS_INFO csInfo = 2;
  for (int i = 0; i < this->csinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->csinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG_DC_DS_RESOURCE_GET_ACK)
  return target;
}

int MSG_DC_DS_RESOURCE_GET_ACK::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 taskID = 1;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskid());
    }

  }
  // repeated .CS_INFO csInfo = 2;
  total_size += 1 * this->csinfo_size();
  for (int i = 0; i < this->csinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->csinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DC_DS_RESOURCE_GET_ACK::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DC_DS_RESOURCE_GET_ACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DC_DS_RESOURCE_GET_ACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DC_DS_RESOURCE_GET_ACK::MergeFrom(const MSG_DC_DS_RESOURCE_GET_ACK& from) {
  GOOGLE_CHECK_NE(&from, this);
  csinfo_.MergeFrom(from.csinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DC_DS_RESOURCE_GET_ACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DC_DS_RESOURCE_GET_ACK::CopyFrom(const MSG_DC_DS_RESOURCE_GET_ACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DC_DS_RESOURCE_GET_ACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MSG_DC_DS_RESOURCE_GET_ACK::Swap(MSG_DC_DS_RESOURCE_GET_ACK* other) {
  if (other != this) {
    std::swap(taskid_, other->taskid_);
    csinfo_.Swap(&other->csinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DC_DS_RESOURCE_GET_ACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DC_DS_RESOURCE_GET_ACK_descriptor_;
  metadata.reflection = MSG_DC_DS_RESOURCE_GET_ACK_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
