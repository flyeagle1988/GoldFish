// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSG_RA_DS_DELTA_DATA_SEND.proto

#ifndef PROTOBUF_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto__INCLUDED
#define PROTOBUF_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
void protobuf_AssignDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
void protobuf_ShutdownFile_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();

class MSG_RA_DS_DELTA_DATA_SEND;
class MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO;
class MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO;
class MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO;
class MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE;
class MSG_DS_RA_DELTA_DATA_SEND_ACK;

enum MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE {
  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_STRING = 0,
  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_INT = 1,
  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_FLOAT = 2,
  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_DOUBLE = 3
};
bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_IsValid(int value);
const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_COL_TYPE_MIN = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_STRING;
const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_COL_TYPE_MAX = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_DOUBLE;
const int MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_COL_TYPE_ARRAYSIZE = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_COL_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_descriptor();
inline const ::std::string& MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_Name(MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_descriptor(), value);
}
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_Parse(
    const ::std::string& name, MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE>(
    MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_descriptor(), name, value);
}
enum MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION {
  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_UPDATE = 0,
  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_INSERT = 1,
  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_DELETE = 2
};
bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_IsValid(int value);
const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_OPERATION_MIN = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_UPDATE;
const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_OPERATION_MAX = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_DELETE;
const int MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_OPERATION_ARRAYSIZE = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_OPERATION_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_descriptor();
inline const ::std::string& MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_Name(MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_descriptor(), value);
}
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_Parse(
    const ::std::string& name, MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION>(
    MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_descriptor(), name, value);
}
// ===================================================================

class MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE : public ::google::protobuf::Message {
 public:
  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE();
  virtual ~MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE();

  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& from);

  inline MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& operator=(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& default_instance();

  void Swap(MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* other);

  // implements Message ----------------------------------------------

  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& from);
  void MergeFrom(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strValue = 1;
  inline bool has_strvalue() const;
  inline void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  inline const ::std::string& strvalue() const;
  inline void set_strvalue(const ::std::string& value);
  inline void set_strvalue(const char* value);
  inline void set_strvalue(const char* value, size_t size);
  inline ::std::string* mutable_strvalue();
  inline ::std::string* release_strvalue();
  inline void set_allocated_strvalue(::std::string* strvalue);

  // optional int32 iValue = 2;
  inline bool has_ivalue() const;
  inline void clear_ivalue();
  static const int kIValueFieldNumber = 2;
  inline ::google::protobuf::int32 ivalue() const;
  inline void set_ivalue(::google::protobuf::int32 value);

  // optional float fValue = 3;
  inline bool has_fvalue() const;
  inline void clear_fvalue();
  static const int kFValueFieldNumber = 3;
  inline float fvalue() const;
  inline void set_fvalue(float value);

  // optional double dValue = 4;
  inline bool has_dvalue() const;
  inline void clear_dvalue();
  static const int kDValueFieldNumber = 4;
  inline double dvalue() const;
  inline void set_dvalue(double value);

  // @@protoc_insertion_point(class_scope:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE)
 private:
  inline void set_has_strvalue();
  inline void clear_has_strvalue();
  inline void set_has_ivalue();
  inline void clear_has_ivalue();
  inline void set_has_fvalue();
  inline void clear_has_fvalue();
  inline void set_has_dvalue();
  inline void clear_has_dvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* strvalue_;
  ::google::protobuf::int32 ivalue_;
  float fvalue_;
  double dvalue_;
  friend void  protobuf_AddDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* default_instance_;
};
// -------------------------------------------------------------------

class MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO : public ::google::protobuf::Message {
 public:
  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO();
  virtual ~MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO();

  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& from);

  inline MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& operator=(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& default_instance();

  void Swap(MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO* other);

  // implements Message ----------------------------------------------

  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& from);
  void MergeFrom(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE COL_VALUE;

  typedef MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE COL_TYPE;
  static const COL_TYPE STRING = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_STRING;
  static const COL_TYPE INT = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_INT;
  static const COL_TYPE FLOAT = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_FLOAT;
  static const COL_TYPE DOUBLE = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_DOUBLE;
  static inline bool COL_TYPE_IsValid(int value) {
    return MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_IsValid(value);
  }
  static const COL_TYPE COL_TYPE_MIN =
    MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_COL_TYPE_MIN;
  static const COL_TYPE COL_TYPE_MAX =
    MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_COL_TYPE_MAX;
  static const int COL_TYPE_ARRAYSIZE =
    MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_COL_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  COL_TYPE_descriptor() {
    return MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_descriptor();
  }
  static inline const ::std::string& COL_TYPE_Name(COL_TYPE value) {
    return MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_Name(value);
  }
  static inline bool COL_TYPE_Parse(const ::std::string& name,
      COL_TYPE* value) {
    return MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string colName = 1;
  inline bool has_colname() const;
  inline void clear_colname();
  static const int kColNameFieldNumber = 1;
  inline const ::std::string& colname() const;
  inline void set_colname(const ::std::string& value);
  inline void set_colname(const char* value);
  inline void set_colname(const char* value, size_t size);
  inline ::std::string* mutable_colname();
  inline ::std::string* release_colname();
  inline void set_allocated_colname(::std::string* colname);

  // required .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_TYPE colType = 2 [default = STRING];
  inline bool has_coltype() const;
  inline void clear_coltype();
  static const int kColTypeFieldNumber = 2;
  inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE coltype() const;
  inline void set_coltype(::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE value);

  // required .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE colValue = 3;
  inline bool has_colvalue() const;
  inline void clear_colvalue();
  static const int kColValueFieldNumber = 3;
  inline const ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& colvalue() const;
  inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* mutable_colvalue();
  inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* release_colvalue();
  inline void set_allocated_colvalue(::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* colvalue);

  // @@protoc_insertion_point(class_scope:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO)
 private:
  inline void set_has_colname();
  inline void clear_has_colname();
  inline void set_has_coltype();
  inline void clear_has_coltype();
  inline void set_has_colvalue();
  inline void clear_has_colvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* colname_;
  ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* colvalue_;
  int coltype_;
  friend void  protobuf_AddDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO* default_instance_;
};
// -------------------------------------------------------------------

class MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO : public ::google::protobuf::Message {
 public:
  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO();
  virtual ~MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO();

  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO& from);

  inline MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO& operator=(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO& default_instance();

  void Swap(MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO* other);

  // implements Message ----------------------------------------------

  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO& from);
  void MergeFrom(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO ROW_DATA_INFO;

  typedef MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION OPERATION;
  static const OPERATION UPDATE = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_UPDATE;
  static const OPERATION INSERT = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_INSERT;
  static const OPERATION DELETE = MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_DELETE;
  static inline bool OPERATION_IsValid(int value) {
    return MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_IsValid(value);
  }
  static const OPERATION OPERATION_MIN =
    MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_OPERATION_MIN;
  static const OPERATION OPERATION_MAX =
    MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_OPERATION_MAX;
  static const int OPERATION_ARRAYSIZE =
    MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_OPERATION_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OPERATION_descriptor() {
    return MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_descriptor();
  }
  static inline const ::std::string& OPERATION_Name(OPERATION value) {
    return MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_Name(value);
  }
  static inline bool OPERATION_Parse(const ::std::string& name,
      OPERATION* value) {
    return MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.OPERATION operation = 1 [default = UPDATE];
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 1;
  inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION operation() const;
  inline void set_operation(::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION value);

  // required uint32 rowID = 2;
  inline bool has_rowid() const;
  inline void clear_rowid();
  static const int kRowIDFieldNumber = 2;
  inline ::google::protobuf::uint32 rowid() const;
  inline void set_rowid(::google::protobuf::uint32 value);

  // repeated .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO rowData = 3;
  inline int rowdata_size() const;
  inline void clear_rowdata();
  static const int kRowDataFieldNumber = 3;
  inline const ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& rowdata(int index) const;
  inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO* mutable_rowdata(int index);
  inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO* add_rowdata();
  inline const ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO >&
      rowdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO >*
      mutable_rowdata();

  // @@protoc_insertion_point(class_scope:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO)
 private:
  inline void set_has_operation();
  inline void clear_has_operation();
  inline void set_has_rowid();
  inline void clear_has_rowid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int operation_;
  ::google::protobuf::uint32 rowid_;
  ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO > rowdata_;
  friend void  protobuf_AddDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO* default_instance_;
};
// -------------------------------------------------------------------

class MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO : public ::google::protobuf::Message {
 public:
  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO();
  virtual ~MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO();

  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO& from);

  inline MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO& operator=(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO& default_instance();

  void Swap(MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO* other);

  // implements Message ----------------------------------------------

  MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO& from);
  void MergeFrom(const MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO TABLE_DELTA_INFO;

  // accessors -------------------------------------------------------

  // required string dbName = 1;
  inline bool has_dbname() const;
  inline void clear_dbname();
  static const int kDbNameFieldNumber = 1;
  inline const ::std::string& dbname() const;
  inline void set_dbname(const ::std::string& value);
  inline void set_dbname(const char* value);
  inline void set_dbname(const char* value, size_t size);
  inline ::std::string* mutable_dbname();
  inline ::std::string* release_dbname();
  inline void set_allocated_dbname(::std::string* dbname);

  // required string tableName = 2;
  inline bool has_tablename() const;
  inline void clear_tablename();
  static const int kTableNameFieldNumber = 2;
  inline const ::std::string& tablename() const;
  inline void set_tablename(const ::std::string& value);
  inline void set_tablename(const char* value);
  inline void set_tablename(const char* value, size_t size);
  inline ::std::string* mutable_tablename();
  inline ::std::string* release_tablename();
  inline void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO tableDeltaData = 3;
  inline int tabledeltadata_size() const;
  inline void clear_tabledeltadata();
  static const int kTableDeltaDataFieldNumber = 3;
  inline const ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO& tabledeltadata(int index) const;
  inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO* mutable_tabledeltadata(int index);
  inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO* add_tabledeltadata();
  inline const ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO >&
      tabledeltadata() const;
  inline ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO >*
      mutable_tabledeltadata();

  // @@protoc_insertion_point(class_scope:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO)
 private:
  inline void set_has_dbname();
  inline void clear_has_dbname();
  inline void set_has_tablename();
  inline void clear_has_tablename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* dbname_;
  ::std::string* tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO > tabledeltadata_;
  friend void  protobuf_AddDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO* default_instance_;
};
// -------------------------------------------------------------------

class MSG_RA_DS_DELTA_DATA_SEND : public ::google::protobuf::Message {
 public:
  MSG_RA_DS_DELTA_DATA_SEND();
  virtual ~MSG_RA_DS_DELTA_DATA_SEND();

  MSG_RA_DS_DELTA_DATA_SEND(const MSG_RA_DS_DELTA_DATA_SEND& from);

  inline MSG_RA_DS_DELTA_DATA_SEND& operator=(const MSG_RA_DS_DELTA_DATA_SEND& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_RA_DS_DELTA_DATA_SEND& default_instance();

  void Swap(MSG_RA_DS_DELTA_DATA_SEND* other);

  // implements Message ----------------------------------------------

  MSG_RA_DS_DELTA_DATA_SEND* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_RA_DS_DELTA_DATA_SEND& from);
  void MergeFrom(const MSG_RA_DS_DELTA_DATA_SEND& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO DELTA_DATA_INFO;

  // accessors -------------------------------------------------------

  // required uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // required uint32 deltaSize = 2;
  inline bool has_deltasize() const;
  inline void clear_deltasize();
  static const int kDeltaSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 deltasize() const;
  inline void set_deltasize(::google::protobuf::uint32 value);

  // repeated .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO deltaData = 3;
  inline int deltadata_size() const;
  inline void clear_deltadata();
  static const int kDeltaDataFieldNumber = 3;
  inline const ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO& deltadata(int index) const;
  inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO* mutable_deltadata(int index);
  inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO* add_deltadata();
  inline const ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO >&
      deltadata() const;
  inline ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO >*
      mutable_deltadata();

  // @@protoc_insertion_point(class_scope:MSG_RA_DS_DELTA_DATA_SEND)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_deltasize();
  inline void clear_has_deltasize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 deltasize_;
  ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO > deltadata_;
  friend void  protobuf_AddDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static MSG_RA_DS_DELTA_DATA_SEND* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_RA_DELTA_DATA_SEND_ACK : public ::google::protobuf::Message {
 public:
  MSG_DS_RA_DELTA_DATA_SEND_ACK();
  virtual ~MSG_DS_RA_DELTA_DATA_SEND_ACK();

  MSG_DS_RA_DELTA_DATA_SEND_ACK(const MSG_DS_RA_DELTA_DATA_SEND_ACK& from);

  inline MSG_DS_RA_DELTA_DATA_SEND_ACK& operator=(const MSG_DS_RA_DELTA_DATA_SEND_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_RA_DELTA_DATA_SEND_ACK& default_instance();

  void Swap(MSG_DS_RA_DELTA_DATA_SEND_ACK* other);

  // implements Message ----------------------------------------------

  MSG_DS_RA_DELTA_DATA_SEND_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_RA_DELTA_DATA_SEND_ACK& from);
  void MergeFrom(const MSG_DS_RA_DELTA_DATA_SEND_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // required int32 statusCode = 2;
  inline bool has_statuscode() const;
  inline void clear_statuscode();
  static const int kStatusCodeFieldNumber = 2;
  inline ::google::protobuf::int32 statuscode() const;
  inline void set_statuscode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MSG_DS_RA_DELTA_DATA_SEND_ACK)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_statuscode();
  inline void clear_has_statuscode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::int32 statuscode_;
  friend void  protobuf_AddDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_RA_DELTA_DATA_SEND_ACK* default_instance_;
};
// ===================================================================


// ===================================================================

// MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE

// optional string strValue = 1;
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::has_strvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::set_has_strvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::clear_has_strvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::clear_strvalue() {
  if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_->clear();
  }
  clear_has_strvalue();
}
inline const ::std::string& MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::strvalue() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.strValue)
  return *strvalue_;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::set_strvalue(const ::std::string& value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.strValue)
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::set_strvalue(const char* value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.strValue)
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::set_strvalue(const char* value, size_t size) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.strValue)
}
inline ::std::string* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::mutable_strvalue() {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.strValue)
  return strvalue_;
}
inline ::std::string* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::release_strvalue() {
  clear_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = strvalue_;
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strvalue_;
  }
  if (strvalue) {
    set_has_strvalue();
    strvalue_ = strvalue;
  } else {
    clear_has_strvalue();
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.strValue)
}

// optional int32 iValue = 2;
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::has_ivalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::set_has_ivalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::clear_has_ivalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::clear_ivalue() {
  ivalue_ = 0;
  clear_has_ivalue();
}
inline ::google::protobuf::int32 MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::ivalue() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.iValue)
  return ivalue_;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::set_ivalue(::google::protobuf::int32 value) {
  set_has_ivalue();
  ivalue_ = value;
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.iValue)
}

// optional float fValue = 3;
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::has_fvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::set_has_fvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::clear_has_fvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::clear_fvalue() {
  fvalue_ = 0;
  clear_has_fvalue();
}
inline float MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::fvalue() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.fValue)
  return fvalue_;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::set_fvalue(float value) {
  set_has_fvalue();
  fvalue_ = value;
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.fValue)
}

// optional double dValue = 4;
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::has_dvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::set_has_dvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::clear_has_dvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::clear_dvalue() {
  dvalue_ = 0;
  clear_has_dvalue();
}
inline double MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::dvalue() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.dValue)
  return dvalue_;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::set_dvalue(double value) {
  set_has_dvalue();
  dvalue_ = value;
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE.dValue)
}

// -------------------------------------------------------------------

// MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO

// required string colName = 1;
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::has_colname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::set_has_colname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::clear_has_colname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::clear_colname() {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_->clear();
  }
  clear_has_colname();
}
inline const ::std::string& MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::colname() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.colName)
  return *colname_;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::set_colname(const ::std::string& value) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.colName)
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::set_colname(const char* value) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.colName)
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::set_colname(const char* value, size_t size) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.colName)
}
inline ::std::string* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::mutable_colname() {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.colName)
  return colname_;
}
inline ::std::string* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::release_colname() {
  clear_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = colname_;
    colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::set_allocated_colname(::std::string* colname) {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete colname_;
  }
  if (colname) {
    set_has_colname();
    colname_ = colname;
  } else {
    clear_has_colname();
    colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.colName)
}

// required .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_TYPE colType = 2 [default = STRING];
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::has_coltype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::set_has_coltype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::clear_has_coltype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::clear_coltype() {
  coltype_ = 0;
  clear_has_coltype();
}
inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::coltype() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.colType)
  return static_cast< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE >(coltype_);
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::set_coltype(::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE value) {
  assert(::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_IsValid(value));
  set_has_coltype();
  coltype_ = value;
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.colType)
}

// required .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.COL_VALUE colValue = 3;
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::has_colvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::set_has_colvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::clear_has_colvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::clear_colvalue() {
  if (colvalue_ != NULL) colvalue_->::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE::Clear();
  clear_has_colvalue();
}
inline const ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE& MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::colvalue() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.colValue)
  return colvalue_ != NULL ? *colvalue_ : *default_instance_->colvalue_;
}
inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::mutable_colvalue() {
  set_has_colvalue();
  if (colvalue_ == NULL) colvalue_ = new ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE;
  // @@protoc_insertion_point(field_mutable:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.colValue)
  return colvalue_;
}
inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::release_colvalue() {
  clear_has_colvalue();
  ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* temp = colvalue_;
  colvalue_ = NULL;
  return temp;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO::set_allocated_colvalue(::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_VALUE* colvalue) {
  delete colvalue_;
  colvalue_ = colvalue;
  if (colvalue) {
    set_has_colvalue();
  } else {
    clear_has_colvalue();
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO.colValue)
}

// -------------------------------------------------------------------

// MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO

// required .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.OPERATION operation = 1 [default = UPDATE];
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::has_operation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::set_has_operation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::clear_has_operation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::clear_operation() {
  operation_ = 0;
  clear_has_operation();
}
inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::operation() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.operation)
  return static_cast< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION >(operation_);
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::set_operation(::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION value) {
  assert(::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_IsValid(value));
  set_has_operation();
  operation_ = value;
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.operation)
}

// required uint32 rowID = 2;
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::has_rowid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::set_has_rowid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::clear_has_rowid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::clear_rowid() {
  rowid_ = 0u;
  clear_has_rowid();
}
inline ::google::protobuf::uint32 MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::rowid() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.rowID)
  return rowid_;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::set_rowid(::google::protobuf::uint32 value) {
  set_has_rowid();
  rowid_ = value;
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.rowID)
}

// repeated .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.ROW_DATA_INFO rowData = 3;
inline int MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::rowdata_size() const {
  return rowdata_.size();
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::clear_rowdata() {
  rowdata_.Clear();
}
inline const ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO& MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::rowdata(int index) const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.rowData)
  return rowdata_.Get(index);
}
inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::mutable_rowdata(int index) {
  // @@protoc_insertion_point(field_mutable:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.rowData)
  return rowdata_.Mutable(index);
}
inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::add_rowdata() {
  // @@protoc_insertion_point(field_add:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.rowData)
  return rowdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO >&
MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::rowdata() const {
  // @@protoc_insertion_point(field_list:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.rowData)
  return rowdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO >*
MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO::mutable_rowdata() {
  // @@protoc_insertion_point(field_mutable_list:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO.rowData)
  return &rowdata_;
}

// -------------------------------------------------------------------

// MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO

// required string dbName = 1;
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::has_dbname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::set_has_dbname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::clear_has_dbname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::clear_dbname() {
  if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_->clear();
  }
  clear_has_dbname();
}
inline const ::std::string& MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::dbname() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.dbName)
  return *dbname_;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::set_dbname(const ::std::string& value) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.dbName)
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::set_dbname(const char* value) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.dbName)
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::set_dbname(const char* value, size_t size) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.dbName)
}
inline ::std::string* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::mutable_dbname() {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.dbName)
  return dbname_;
}
inline ::std::string* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::release_dbname() {
  clear_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dbname_;
    dbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::set_allocated_dbname(::std::string* dbname) {
  if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbname_;
  }
  if (dbname) {
    set_has_dbname();
    dbname_ = dbname;
  } else {
    clear_has_dbname();
    dbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.dbName)
}

// required string tableName = 2;
inline bool MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::has_tablename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::set_has_tablename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::clear_has_tablename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::clear_tablename() {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_->clear();
  }
  clear_has_tablename();
}
inline const ::std::string& MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::tablename() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.tableName)
  return *tablename_;
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::set_tablename(const ::std::string& value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.tableName)
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::set_tablename(const char* value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.tableName)
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::set_tablename(const char* value, size_t size) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.tableName)
}
inline ::std::string* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::mutable_tablename() {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.tableName)
  return tablename_;
}
inline ::std::string* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::release_tablename() {
  clear_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tablename_;
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::set_allocated_tablename(::std::string* tablename) {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablename_;
  }
  if (tablename) {
    set_has_tablename();
    tablename_ = tablename;
  } else {
    clear_has_tablename();
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.tableName)
}

// repeated .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.TABLE_DELTA_INFO tableDeltaData = 3;
inline int MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::tabledeltadata_size() const {
  return tabledeltadata_.size();
}
inline void MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::clear_tabledeltadata() {
  tabledeltadata_.Clear();
}
inline const ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO& MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::tabledeltadata(int index) const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.tableDeltaData)
  return tabledeltadata_.Get(index);
}
inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::mutable_tabledeltadata(int index) {
  // @@protoc_insertion_point(field_mutable:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.tableDeltaData)
  return tabledeltadata_.Mutable(index);
}
inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO* MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::add_tabledeltadata() {
  // @@protoc_insertion_point(field_add:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.tableDeltaData)
  return tabledeltadata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO >&
MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::tabledeltadata() const {
  // @@protoc_insertion_point(field_list:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.tableDeltaData)
  return tabledeltadata_;
}
inline ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO >*
MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO::mutable_tabledeltadata() {
  // @@protoc_insertion_point(field_mutable_list:MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO.tableDeltaData)
  return &tabledeltadata_;
}

// -------------------------------------------------------------------

// MSG_RA_DS_DELTA_DATA_SEND

// required uint32 taskID = 1;
inline bool MSG_RA_DS_DELTA_DATA_SEND::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 MSG_RA_DS_DELTA_DATA_SEND::taskid() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.taskID)
  return taskid_;
}
inline void MSG_RA_DS_DELTA_DATA_SEND::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.taskID)
}

// required uint32 deltaSize = 2;
inline bool MSG_RA_DS_DELTA_DATA_SEND::has_deltasize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_RA_DS_DELTA_DATA_SEND::set_has_deltasize() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND::clear_has_deltasize() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_RA_DS_DELTA_DATA_SEND::clear_deltasize() {
  deltasize_ = 0u;
  clear_has_deltasize();
}
inline ::google::protobuf::uint32 MSG_RA_DS_DELTA_DATA_SEND::deltasize() const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.deltaSize)
  return deltasize_;
}
inline void MSG_RA_DS_DELTA_DATA_SEND::set_deltasize(::google::protobuf::uint32 value) {
  set_has_deltasize();
  deltasize_ = value;
  // @@protoc_insertion_point(field_set:MSG_RA_DS_DELTA_DATA_SEND.deltaSize)
}

// repeated .MSG_RA_DS_DELTA_DATA_SEND.DELTA_DATA_INFO deltaData = 3;
inline int MSG_RA_DS_DELTA_DATA_SEND::deltadata_size() const {
  return deltadata_.size();
}
inline void MSG_RA_DS_DELTA_DATA_SEND::clear_deltadata() {
  deltadata_.Clear();
}
inline const ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO& MSG_RA_DS_DELTA_DATA_SEND::deltadata(int index) const {
  // @@protoc_insertion_point(field_get:MSG_RA_DS_DELTA_DATA_SEND.deltaData)
  return deltadata_.Get(index);
}
inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO* MSG_RA_DS_DELTA_DATA_SEND::mutable_deltadata(int index) {
  // @@protoc_insertion_point(field_mutable:MSG_RA_DS_DELTA_DATA_SEND.deltaData)
  return deltadata_.Mutable(index);
}
inline ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO* MSG_RA_DS_DELTA_DATA_SEND::add_deltadata() {
  // @@protoc_insertion_point(field_add:MSG_RA_DS_DELTA_DATA_SEND.deltaData)
  return deltadata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO >&
MSG_RA_DS_DELTA_DATA_SEND::deltadata() const {
  // @@protoc_insertion_point(field_list:MSG_RA_DS_DELTA_DATA_SEND.deltaData)
  return deltadata_;
}
inline ::google::protobuf::RepeatedPtrField< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO >*
MSG_RA_DS_DELTA_DATA_SEND::mutable_deltadata() {
  // @@protoc_insertion_point(field_mutable_list:MSG_RA_DS_DELTA_DATA_SEND.deltaData)
  return &deltadata_;
}

// -------------------------------------------------------------------

// MSG_DS_RA_DELTA_DATA_SEND_ACK

// required uint32 taskID = 1;
inline bool MSG_DS_RA_DELTA_DATA_SEND_ACK::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_RA_DELTA_DATA_SEND_ACK::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_RA_DELTA_DATA_SEND_ACK::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_RA_DELTA_DATA_SEND_ACK::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 MSG_DS_RA_DELTA_DATA_SEND_ACK::taskid() const {
  // @@protoc_insertion_point(field_get:MSG_DS_RA_DELTA_DATA_SEND_ACK.taskID)
  return taskid_;
}
inline void MSG_DS_RA_DELTA_DATA_SEND_ACK::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_RA_DELTA_DATA_SEND_ACK.taskID)
}

// required int32 statusCode = 2;
inline bool MSG_DS_RA_DELTA_DATA_SEND_ACK::has_statuscode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_RA_DELTA_DATA_SEND_ACK::set_has_statuscode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_RA_DELTA_DATA_SEND_ACK::clear_has_statuscode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_RA_DELTA_DATA_SEND_ACK::clear_statuscode() {
  statuscode_ = 0;
  clear_has_statuscode();
}
inline ::google::protobuf::int32 MSG_DS_RA_DELTA_DATA_SEND_ACK::statuscode() const {
  // @@protoc_insertion_point(field_get:MSG_DS_RA_DELTA_DATA_SEND_ACK.statusCode)
  return statuscode_;
}
inline void MSG_DS_RA_DELTA_DATA_SEND_ACK::set_statuscode(::google::protobuf::int32 value) {
  set_has_statuscode();
  statuscode_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_RA_DELTA_DATA_SEND_ACK.statusCode)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE>() {
  return ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_ROW_DATA_INFO_COL_TYPE_descriptor();
}
template <> struct is_proto_enum< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION>() {
  return ::MSG_RA_DS_DELTA_DATA_SEND_DELTA_DATA_INFO_TABLE_DELTA_INFO_OPERATION_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MSG_5fRA_5fDS_5fDELTA_5fDATA_5fSEND_2eproto__INCLUDED
