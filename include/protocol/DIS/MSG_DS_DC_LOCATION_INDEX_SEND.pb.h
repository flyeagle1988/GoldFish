// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSG_DS_DC_LOCATION_INDEX_SEND.proto

#ifndef PROTOBUF_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto__INCLUDED
#define PROTOBUF_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
void protobuf_AssignDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();

class DICT_VALUE;
class INDEX_BORDER;
class DICT_ENTRY_INDEX;
class LOCATION_INDEX;
class MSG_DS_DC_LOCATION_INDEX_SEND;
class MSG_DC_DS_LOCATION_INDEX_SEND_ACK;

enum INDEX_BORDER_DICT_TYPE {
  INDEX_BORDER_DICT_TYPE_STRING = 0,
  INDEX_BORDER_DICT_TYPE_INT = 1,
  INDEX_BORDER_DICT_TYPE_FLOAT = 2,
  INDEX_BORDER_DICT_TYPE_DOUBLE = 3
};
bool INDEX_BORDER_DICT_TYPE_IsValid(int value);
const INDEX_BORDER_DICT_TYPE INDEX_BORDER_DICT_TYPE_DICT_TYPE_MIN = INDEX_BORDER_DICT_TYPE_STRING;
const INDEX_BORDER_DICT_TYPE INDEX_BORDER_DICT_TYPE_DICT_TYPE_MAX = INDEX_BORDER_DICT_TYPE_DOUBLE;
const int INDEX_BORDER_DICT_TYPE_DICT_TYPE_ARRAYSIZE = INDEX_BORDER_DICT_TYPE_DICT_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* INDEX_BORDER_DICT_TYPE_descriptor();
inline const ::std::string& INDEX_BORDER_DICT_TYPE_Name(INDEX_BORDER_DICT_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    INDEX_BORDER_DICT_TYPE_descriptor(), value);
}
inline bool INDEX_BORDER_DICT_TYPE_Parse(
    const ::std::string& name, INDEX_BORDER_DICT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<INDEX_BORDER_DICT_TYPE>(
    INDEX_BORDER_DICT_TYPE_descriptor(), name, value);
}
// ===================================================================

class DICT_VALUE : public ::google::protobuf::Message {
 public:
  DICT_VALUE();
  virtual ~DICT_VALUE();

  DICT_VALUE(const DICT_VALUE& from);

  inline DICT_VALUE& operator=(const DICT_VALUE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DICT_VALUE& default_instance();

  void Swap(DICT_VALUE* other);

  // implements Message ----------------------------------------------

  DICT_VALUE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DICT_VALUE& from);
  void MergeFrom(const DICT_VALUE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strValue = 1;
  inline bool has_strvalue() const;
  inline void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  inline const ::std::string& strvalue() const;
  inline void set_strvalue(const ::std::string& value);
  inline void set_strvalue(const char* value);
  inline void set_strvalue(const char* value, size_t size);
  inline ::std::string* mutable_strvalue();
  inline ::std::string* release_strvalue();
  inline void set_allocated_strvalue(::std::string* strvalue);

  // optional int32 iValue = 2;
  inline bool has_ivalue() const;
  inline void clear_ivalue();
  static const int kIValueFieldNumber = 2;
  inline ::google::protobuf::int32 ivalue() const;
  inline void set_ivalue(::google::protobuf::int32 value);

  // optional float fValue = 3;
  inline bool has_fvalue() const;
  inline void clear_fvalue();
  static const int kFValueFieldNumber = 3;
  inline float fvalue() const;
  inline void set_fvalue(float value);

  // optional double dValue = 4;
  inline bool has_dvalue() const;
  inline void clear_dvalue();
  static const int kDValueFieldNumber = 4;
  inline double dvalue() const;
  inline void set_dvalue(double value);

  // @@protoc_insertion_point(class_scope:DICT_VALUE)
 private:
  inline void set_has_strvalue();
  inline void clear_has_strvalue();
  inline void set_has_ivalue();
  inline void clear_has_ivalue();
  inline void set_has_fvalue();
  inline void clear_has_fvalue();
  inline void set_has_dvalue();
  inline void clear_has_dvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* strvalue_;
  ::google::protobuf::int32 ivalue_;
  float fvalue_;
  double dvalue_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static DICT_VALUE* default_instance_;
};
// -------------------------------------------------------------------

class INDEX_BORDER : public ::google::protobuf::Message {
 public:
  INDEX_BORDER();
  virtual ~INDEX_BORDER();

  INDEX_BORDER(const INDEX_BORDER& from);

  inline INDEX_BORDER& operator=(const INDEX_BORDER& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const INDEX_BORDER& default_instance();

  void Swap(INDEX_BORDER* other);

  // implements Message ----------------------------------------------

  INDEX_BORDER* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const INDEX_BORDER& from);
  void MergeFrom(const INDEX_BORDER& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef INDEX_BORDER_DICT_TYPE DICT_TYPE;
  static const DICT_TYPE STRING = INDEX_BORDER_DICT_TYPE_STRING;
  static const DICT_TYPE INT = INDEX_BORDER_DICT_TYPE_INT;
  static const DICT_TYPE FLOAT = INDEX_BORDER_DICT_TYPE_FLOAT;
  static const DICT_TYPE DOUBLE = INDEX_BORDER_DICT_TYPE_DOUBLE;
  static inline bool DICT_TYPE_IsValid(int value) {
    return INDEX_BORDER_DICT_TYPE_IsValid(value);
  }
  static const DICT_TYPE DICT_TYPE_MIN =
    INDEX_BORDER_DICT_TYPE_DICT_TYPE_MIN;
  static const DICT_TYPE DICT_TYPE_MAX =
    INDEX_BORDER_DICT_TYPE_DICT_TYPE_MAX;
  static const int DICT_TYPE_ARRAYSIZE =
    INDEX_BORDER_DICT_TYPE_DICT_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DICT_TYPE_descriptor() {
    return INDEX_BORDER_DICT_TYPE_descriptor();
  }
  static inline const ::std::string& DICT_TYPE_Name(DICT_TYPE value) {
    return INDEX_BORDER_DICT_TYPE_Name(value);
  }
  static inline bool DICT_TYPE_Parse(const ::std::string& name,
      DICT_TYPE* value) {
    return INDEX_BORDER_DICT_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .INDEX_BORDER.DICT_TYPE dictType = 1 [default = STRING];
  inline bool has_dicttype() const;
  inline void clear_dicttype();
  static const int kDictTypeFieldNumber = 1;
  inline ::INDEX_BORDER_DICT_TYPE dicttype() const;
  inline void set_dicttype(::INDEX_BORDER_DICT_TYPE value);

  // required .DICT_VALUE dictUpper = 2;
  inline bool has_dictupper() const;
  inline void clear_dictupper();
  static const int kDictUpperFieldNumber = 2;
  inline const ::DICT_VALUE& dictupper() const;
  inline ::DICT_VALUE* mutable_dictupper();
  inline ::DICT_VALUE* release_dictupper();
  inline void set_allocated_dictupper(::DICT_VALUE* dictupper);

  // required .DICT_VALUE dictLower = 3;
  inline bool has_dictlower() const;
  inline void clear_dictlower();
  static const int kDictLowerFieldNumber = 3;
  inline const ::DICT_VALUE& dictlower() const;
  inline ::DICT_VALUE* mutable_dictlower();
  inline ::DICT_VALUE* release_dictlower();
  inline void set_allocated_dictlower(::DICT_VALUE* dictlower);

  // required uint32 entryUpper = 4;
  inline bool has_entryupper() const;
  inline void clear_entryupper();
  static const int kEntryUpperFieldNumber = 4;
  inline ::google::protobuf::uint32 entryupper() const;
  inline void set_entryupper(::google::protobuf::uint32 value);

  // required uint32 entryLower = 5;
  inline bool has_entrylower() const;
  inline void clear_entrylower();
  static const int kEntryLowerFieldNumber = 5;
  inline ::google::protobuf::uint32 entrylower() const;
  inline void set_entrylower(::google::protobuf::uint32 value);

  // required string csIP = 6;
  inline bool has_csip() const;
  inline void clear_csip();
  static const int kCsIPFieldNumber = 6;
  inline const ::std::string& csip() const;
  inline void set_csip(const ::std::string& value);
  inline void set_csip(const char* value);
  inline void set_csip(const char* value, size_t size);
  inline ::std::string* mutable_csip();
  inline ::std::string* release_csip();
  inline void set_allocated_csip(::std::string* csip);

  // @@protoc_insertion_point(class_scope:INDEX_BORDER)
 private:
  inline void set_has_dicttype();
  inline void clear_has_dicttype();
  inline void set_has_dictupper();
  inline void clear_has_dictupper();
  inline void set_has_dictlower();
  inline void clear_has_dictlower();
  inline void set_has_entryupper();
  inline void clear_has_entryupper();
  inline void set_has_entrylower();
  inline void clear_has_entrylower();
  inline void set_has_csip();
  inline void clear_has_csip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DICT_VALUE* dictupper_;
  int dicttype_;
  ::google::protobuf::uint32 entryupper_;
  ::DICT_VALUE* dictlower_;
  ::std::string* csip_;
  ::google::protobuf::uint32 entrylower_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static INDEX_BORDER* default_instance_;
};
// -------------------------------------------------------------------

class DICT_ENTRY_INDEX : public ::google::protobuf::Message {
 public:
  DICT_ENTRY_INDEX();
  virtual ~DICT_ENTRY_INDEX();

  DICT_ENTRY_INDEX(const DICT_ENTRY_INDEX& from);

  inline DICT_ENTRY_INDEX& operator=(const DICT_ENTRY_INDEX& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DICT_ENTRY_INDEX& default_instance();

  void Swap(DICT_ENTRY_INDEX* other);

  // implements Message ----------------------------------------------

  DICT_ENTRY_INDEX* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DICT_ENTRY_INDEX& from);
  void MergeFrom(const DICT_ENTRY_INDEX& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string colName = 1;
  inline bool has_colname() const;
  inline void clear_colname();
  static const int kColNameFieldNumber = 1;
  inline const ::std::string& colname() const;
  inline void set_colname(const ::std::string& value);
  inline void set_colname(const char* value);
  inline void set_colname(const char* value, size_t size);
  inline ::std::string* mutable_colname();
  inline ::std::string* release_colname();
  inline void set_allocated_colname(::std::string* colname);

  // repeated .INDEX_BORDER colIndexBorder = 2;
  inline int colindexborder_size() const;
  inline void clear_colindexborder();
  static const int kColIndexBorderFieldNumber = 2;
  inline const ::INDEX_BORDER& colindexborder(int index) const;
  inline ::INDEX_BORDER* mutable_colindexborder(int index);
  inline ::INDEX_BORDER* add_colindexborder();
  inline const ::google::protobuf::RepeatedPtrField< ::INDEX_BORDER >&
      colindexborder() const;
  inline ::google::protobuf::RepeatedPtrField< ::INDEX_BORDER >*
      mutable_colindexborder();

  // @@protoc_insertion_point(class_scope:DICT_ENTRY_INDEX)
 private:
  inline void set_has_colname();
  inline void clear_has_colname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* colname_;
  ::google::protobuf::RepeatedPtrField< ::INDEX_BORDER > colindexborder_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static DICT_ENTRY_INDEX* default_instance_;
};
// -------------------------------------------------------------------

class LOCATION_INDEX : public ::google::protobuf::Message {
 public:
  LOCATION_INDEX();
  virtual ~LOCATION_INDEX();

  LOCATION_INDEX(const LOCATION_INDEX& from);

  inline LOCATION_INDEX& operator=(const LOCATION_INDEX& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOCATION_INDEX& default_instance();

  void Swap(LOCATION_INDEX* other);

  // implements Message ----------------------------------------------

  LOCATION_INDEX* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOCATION_INDEX& from);
  void MergeFrom(const LOCATION_INDEX& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string raip = 1;
  inline bool has_raip() const;
  inline void clear_raip();
  static const int kRaipFieldNumber = 1;
  inline const ::std::string& raip() const;
  inline void set_raip(const ::std::string& value);
  inline void set_raip(const char* value);
  inline void set_raip(const char* value, size_t size);
  inline ::std::string* mutable_raip();
  inline ::std::string* release_raip();
  inline void set_allocated_raip(::std::string* raip);

  // required int32 dbid = 2;
  inline bool has_dbid() const;
  inline void clear_dbid();
  static const int kDbidFieldNumber = 2;
  inline ::google::protobuf::int32 dbid() const;
  inline void set_dbid(::google::protobuf::int32 value);

  // required string tableName = 3;
  inline bool has_tablename() const;
  inline void clear_tablename();
  static const int kTableNameFieldNumber = 3;
  inline const ::std::string& tablename() const;
  inline void set_tablename(const ::std::string& value);
  inline void set_tablename(const char* value);
  inline void set_tablename(const char* value, size_t size);
  inline ::std::string* mutable_tablename();
  inline ::std::string* release_tablename();
  inline void set_allocated_tablename(::std::string* tablename);

  // repeated .DICT_ENTRY_INDEX dictEntryIndex = 4;
  inline int dictentryindex_size() const;
  inline void clear_dictentryindex();
  static const int kDictEntryIndexFieldNumber = 4;
  inline const ::DICT_ENTRY_INDEX& dictentryindex(int index) const;
  inline ::DICT_ENTRY_INDEX* mutable_dictentryindex(int index);
  inline ::DICT_ENTRY_INDEX* add_dictentryindex();
  inline const ::google::protobuf::RepeatedPtrField< ::DICT_ENTRY_INDEX >&
      dictentryindex() const;
  inline ::google::protobuf::RepeatedPtrField< ::DICT_ENTRY_INDEX >*
      mutable_dictentryindex();

  // @@protoc_insertion_point(class_scope:LOCATION_INDEX)
 private:
  inline void set_has_raip();
  inline void clear_has_raip();
  inline void set_has_dbid();
  inline void clear_has_dbid();
  inline void set_has_tablename();
  inline void clear_has_tablename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* raip_;
  ::std::string* tablename_;
  ::google::protobuf::RepeatedPtrField< ::DICT_ENTRY_INDEX > dictentryindex_;
  ::google::protobuf::int32 dbid_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static LOCATION_INDEX* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_DC_LOCATION_INDEX_SEND : public ::google::protobuf::Message {
 public:
  MSG_DS_DC_LOCATION_INDEX_SEND();
  virtual ~MSG_DS_DC_LOCATION_INDEX_SEND();

  MSG_DS_DC_LOCATION_INDEX_SEND(const MSG_DS_DC_LOCATION_INDEX_SEND& from);

  inline MSG_DS_DC_LOCATION_INDEX_SEND& operator=(const MSG_DS_DC_LOCATION_INDEX_SEND& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_DC_LOCATION_INDEX_SEND& default_instance();

  void Swap(MSG_DS_DC_LOCATION_INDEX_SEND* other);

  // implements Message ----------------------------------------------

  MSG_DS_DC_LOCATION_INDEX_SEND* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_DC_LOCATION_INDEX_SEND& from);
  void MergeFrom(const MSG_DS_DC_LOCATION_INDEX_SEND& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // required uint32 loadTaskID = 2;
  inline bool has_loadtaskid() const;
  inline void clear_loadtaskid();
  static const int kLoadTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 loadtaskid() const;
  inline void set_loadtaskid(::google::protobuf::uint32 value);

  // repeated .LOCATION_INDEX locationIndex = 3;
  inline int locationindex_size() const;
  inline void clear_locationindex();
  static const int kLocationIndexFieldNumber = 3;
  inline const ::LOCATION_INDEX& locationindex(int index) const;
  inline ::LOCATION_INDEX* mutable_locationindex(int index);
  inline ::LOCATION_INDEX* add_locationindex();
  inline const ::google::protobuf::RepeatedPtrField< ::LOCATION_INDEX >&
      locationindex() const;
  inline ::google::protobuf::RepeatedPtrField< ::LOCATION_INDEX >*
      mutable_locationindex();

  // @@protoc_insertion_point(class_scope:MSG_DS_DC_LOCATION_INDEX_SEND)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_loadtaskid();
  inline void clear_has_loadtaskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 loadtaskid_;
  ::google::protobuf::RepeatedPtrField< ::LOCATION_INDEX > locationindex_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_DC_LOCATION_INDEX_SEND* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DC_DS_LOCATION_INDEX_SEND_ACK : public ::google::protobuf::Message {
 public:
  MSG_DC_DS_LOCATION_INDEX_SEND_ACK();
  virtual ~MSG_DC_DS_LOCATION_INDEX_SEND_ACK();

  MSG_DC_DS_LOCATION_INDEX_SEND_ACK(const MSG_DC_DS_LOCATION_INDEX_SEND_ACK& from);

  inline MSG_DC_DS_LOCATION_INDEX_SEND_ACK& operator=(const MSG_DC_DS_LOCATION_INDEX_SEND_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DC_DS_LOCATION_INDEX_SEND_ACK& default_instance();

  void Swap(MSG_DC_DS_LOCATION_INDEX_SEND_ACK* other);

  // implements Message ----------------------------------------------

  MSG_DC_DS_LOCATION_INDEX_SEND_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DC_DS_LOCATION_INDEX_SEND_ACK& from);
  void MergeFrom(const MSG_DC_DS_LOCATION_INDEX_SEND_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // required uint32 loadTaskID = 2;
  inline bool has_loadtaskid() const;
  inline void clear_loadtaskid();
  static const int kLoadTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 loadtaskid() const;
  inline void set_loadtaskid(::google::protobuf::uint32 value);

  // required int32 statusCode = 3;
  inline bool has_statuscode() const;
  inline void clear_statuscode();
  static const int kStatusCodeFieldNumber = 3;
  inline ::google::protobuf::int32 statuscode() const;
  inline void set_statuscode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MSG_DC_DS_LOCATION_INDEX_SEND_ACK)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_loadtaskid();
  inline void clear_has_loadtaskid();
  inline void set_has_statuscode();
  inline void clear_has_statuscode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 loadtaskid_;
  ::google::protobuf::int32 statuscode_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static MSG_DC_DS_LOCATION_INDEX_SEND_ACK* default_instance_;
};
// ===================================================================


// ===================================================================

// DICT_VALUE

// optional string strValue = 1;
inline bool DICT_VALUE::has_strvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DICT_VALUE::set_has_strvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DICT_VALUE::clear_has_strvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DICT_VALUE::clear_strvalue() {
  if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_->clear();
  }
  clear_has_strvalue();
}
inline const ::std::string& DICT_VALUE::strvalue() const {
  // @@protoc_insertion_point(field_get:DICT_VALUE.strValue)
  return *strvalue_;
}
inline void DICT_VALUE::set_strvalue(const ::std::string& value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
  // @@protoc_insertion_point(field_set:DICT_VALUE.strValue)
}
inline void DICT_VALUE::set_strvalue(const char* value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:DICT_VALUE.strValue)
}
inline void DICT_VALUE::set_strvalue(const char* value, size_t size) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DICT_VALUE.strValue)
}
inline ::std::string* DICT_VALUE::mutable_strvalue() {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:DICT_VALUE.strValue)
  return strvalue_;
}
inline ::std::string* DICT_VALUE::release_strvalue() {
  clear_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = strvalue_;
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DICT_VALUE::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strvalue_;
  }
  if (strvalue) {
    set_has_strvalue();
    strvalue_ = strvalue;
  } else {
    clear_has_strvalue();
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:DICT_VALUE.strValue)
}

// optional int32 iValue = 2;
inline bool DICT_VALUE::has_ivalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DICT_VALUE::set_has_ivalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DICT_VALUE::clear_has_ivalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DICT_VALUE::clear_ivalue() {
  ivalue_ = 0;
  clear_has_ivalue();
}
inline ::google::protobuf::int32 DICT_VALUE::ivalue() const {
  // @@protoc_insertion_point(field_get:DICT_VALUE.iValue)
  return ivalue_;
}
inline void DICT_VALUE::set_ivalue(::google::protobuf::int32 value) {
  set_has_ivalue();
  ivalue_ = value;
  // @@protoc_insertion_point(field_set:DICT_VALUE.iValue)
}

// optional float fValue = 3;
inline bool DICT_VALUE::has_fvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DICT_VALUE::set_has_fvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DICT_VALUE::clear_has_fvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DICT_VALUE::clear_fvalue() {
  fvalue_ = 0;
  clear_has_fvalue();
}
inline float DICT_VALUE::fvalue() const {
  // @@protoc_insertion_point(field_get:DICT_VALUE.fValue)
  return fvalue_;
}
inline void DICT_VALUE::set_fvalue(float value) {
  set_has_fvalue();
  fvalue_ = value;
  // @@protoc_insertion_point(field_set:DICT_VALUE.fValue)
}

// optional double dValue = 4;
inline bool DICT_VALUE::has_dvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DICT_VALUE::set_has_dvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DICT_VALUE::clear_has_dvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DICT_VALUE::clear_dvalue() {
  dvalue_ = 0;
  clear_has_dvalue();
}
inline double DICT_VALUE::dvalue() const {
  // @@protoc_insertion_point(field_get:DICT_VALUE.dValue)
  return dvalue_;
}
inline void DICT_VALUE::set_dvalue(double value) {
  set_has_dvalue();
  dvalue_ = value;
  // @@protoc_insertion_point(field_set:DICT_VALUE.dValue)
}

// -------------------------------------------------------------------

// INDEX_BORDER

// required .INDEX_BORDER.DICT_TYPE dictType = 1 [default = STRING];
inline bool INDEX_BORDER::has_dicttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void INDEX_BORDER::set_has_dicttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void INDEX_BORDER::clear_has_dicttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void INDEX_BORDER::clear_dicttype() {
  dicttype_ = 0;
  clear_has_dicttype();
}
inline ::INDEX_BORDER_DICT_TYPE INDEX_BORDER::dicttype() const {
  // @@protoc_insertion_point(field_get:INDEX_BORDER.dictType)
  return static_cast< ::INDEX_BORDER_DICT_TYPE >(dicttype_);
}
inline void INDEX_BORDER::set_dicttype(::INDEX_BORDER_DICT_TYPE value) {
  assert(::INDEX_BORDER_DICT_TYPE_IsValid(value));
  set_has_dicttype();
  dicttype_ = value;
  // @@protoc_insertion_point(field_set:INDEX_BORDER.dictType)
}

// required .DICT_VALUE dictUpper = 2;
inline bool INDEX_BORDER::has_dictupper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void INDEX_BORDER::set_has_dictupper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void INDEX_BORDER::clear_has_dictupper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void INDEX_BORDER::clear_dictupper() {
  if (dictupper_ != NULL) dictupper_->::DICT_VALUE::Clear();
  clear_has_dictupper();
}
inline const ::DICT_VALUE& INDEX_BORDER::dictupper() const {
  // @@protoc_insertion_point(field_get:INDEX_BORDER.dictUpper)
  return dictupper_ != NULL ? *dictupper_ : *default_instance_->dictupper_;
}
inline ::DICT_VALUE* INDEX_BORDER::mutable_dictupper() {
  set_has_dictupper();
  if (dictupper_ == NULL) dictupper_ = new ::DICT_VALUE;
  // @@protoc_insertion_point(field_mutable:INDEX_BORDER.dictUpper)
  return dictupper_;
}
inline ::DICT_VALUE* INDEX_BORDER::release_dictupper() {
  clear_has_dictupper();
  ::DICT_VALUE* temp = dictupper_;
  dictupper_ = NULL;
  return temp;
}
inline void INDEX_BORDER::set_allocated_dictupper(::DICT_VALUE* dictupper) {
  delete dictupper_;
  dictupper_ = dictupper;
  if (dictupper) {
    set_has_dictupper();
  } else {
    clear_has_dictupper();
  }
  // @@protoc_insertion_point(field_set_allocated:INDEX_BORDER.dictUpper)
}

// required .DICT_VALUE dictLower = 3;
inline bool INDEX_BORDER::has_dictlower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void INDEX_BORDER::set_has_dictlower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void INDEX_BORDER::clear_has_dictlower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void INDEX_BORDER::clear_dictlower() {
  if (dictlower_ != NULL) dictlower_->::DICT_VALUE::Clear();
  clear_has_dictlower();
}
inline const ::DICT_VALUE& INDEX_BORDER::dictlower() const {
  // @@protoc_insertion_point(field_get:INDEX_BORDER.dictLower)
  return dictlower_ != NULL ? *dictlower_ : *default_instance_->dictlower_;
}
inline ::DICT_VALUE* INDEX_BORDER::mutable_dictlower() {
  set_has_dictlower();
  if (dictlower_ == NULL) dictlower_ = new ::DICT_VALUE;
  // @@protoc_insertion_point(field_mutable:INDEX_BORDER.dictLower)
  return dictlower_;
}
inline ::DICT_VALUE* INDEX_BORDER::release_dictlower() {
  clear_has_dictlower();
  ::DICT_VALUE* temp = dictlower_;
  dictlower_ = NULL;
  return temp;
}
inline void INDEX_BORDER::set_allocated_dictlower(::DICT_VALUE* dictlower) {
  delete dictlower_;
  dictlower_ = dictlower;
  if (dictlower) {
    set_has_dictlower();
  } else {
    clear_has_dictlower();
  }
  // @@protoc_insertion_point(field_set_allocated:INDEX_BORDER.dictLower)
}

// required uint32 entryUpper = 4;
inline bool INDEX_BORDER::has_entryupper() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void INDEX_BORDER::set_has_entryupper() {
  _has_bits_[0] |= 0x00000008u;
}
inline void INDEX_BORDER::clear_has_entryupper() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void INDEX_BORDER::clear_entryupper() {
  entryupper_ = 0u;
  clear_has_entryupper();
}
inline ::google::protobuf::uint32 INDEX_BORDER::entryupper() const {
  // @@protoc_insertion_point(field_get:INDEX_BORDER.entryUpper)
  return entryupper_;
}
inline void INDEX_BORDER::set_entryupper(::google::protobuf::uint32 value) {
  set_has_entryupper();
  entryupper_ = value;
  // @@protoc_insertion_point(field_set:INDEX_BORDER.entryUpper)
}

// required uint32 entryLower = 5;
inline bool INDEX_BORDER::has_entrylower() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void INDEX_BORDER::set_has_entrylower() {
  _has_bits_[0] |= 0x00000010u;
}
inline void INDEX_BORDER::clear_has_entrylower() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void INDEX_BORDER::clear_entrylower() {
  entrylower_ = 0u;
  clear_has_entrylower();
}
inline ::google::protobuf::uint32 INDEX_BORDER::entrylower() const {
  // @@protoc_insertion_point(field_get:INDEX_BORDER.entryLower)
  return entrylower_;
}
inline void INDEX_BORDER::set_entrylower(::google::protobuf::uint32 value) {
  set_has_entrylower();
  entrylower_ = value;
  // @@protoc_insertion_point(field_set:INDEX_BORDER.entryLower)
}

// required string csIP = 6;
inline bool INDEX_BORDER::has_csip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void INDEX_BORDER::set_has_csip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void INDEX_BORDER::clear_has_csip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void INDEX_BORDER::clear_csip() {
  if (csip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    csip_->clear();
  }
  clear_has_csip();
}
inline const ::std::string& INDEX_BORDER::csip() const {
  // @@protoc_insertion_point(field_get:INDEX_BORDER.csIP)
  return *csip_;
}
inline void INDEX_BORDER::set_csip(const ::std::string& value) {
  set_has_csip();
  if (csip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    csip_ = new ::std::string;
  }
  csip_->assign(value);
  // @@protoc_insertion_point(field_set:INDEX_BORDER.csIP)
}
inline void INDEX_BORDER::set_csip(const char* value) {
  set_has_csip();
  if (csip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    csip_ = new ::std::string;
  }
  csip_->assign(value);
  // @@protoc_insertion_point(field_set_char:INDEX_BORDER.csIP)
}
inline void INDEX_BORDER::set_csip(const char* value, size_t size) {
  set_has_csip();
  if (csip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    csip_ = new ::std::string;
  }
  csip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:INDEX_BORDER.csIP)
}
inline ::std::string* INDEX_BORDER::mutable_csip() {
  set_has_csip();
  if (csip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    csip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:INDEX_BORDER.csIP)
  return csip_;
}
inline ::std::string* INDEX_BORDER::release_csip() {
  clear_has_csip();
  if (csip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = csip_;
    csip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void INDEX_BORDER::set_allocated_csip(::std::string* csip) {
  if (csip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete csip_;
  }
  if (csip) {
    set_has_csip();
    csip_ = csip;
  } else {
    clear_has_csip();
    csip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:INDEX_BORDER.csIP)
}

// -------------------------------------------------------------------

// DICT_ENTRY_INDEX

// required string colName = 1;
inline bool DICT_ENTRY_INDEX::has_colname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DICT_ENTRY_INDEX::set_has_colname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DICT_ENTRY_INDEX::clear_has_colname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DICT_ENTRY_INDEX::clear_colname() {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_->clear();
  }
  clear_has_colname();
}
inline const ::std::string& DICT_ENTRY_INDEX::colname() const {
  // @@protoc_insertion_point(field_get:DICT_ENTRY_INDEX.colName)
  return *colname_;
}
inline void DICT_ENTRY_INDEX::set_colname(const ::std::string& value) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(value);
  // @@protoc_insertion_point(field_set:DICT_ENTRY_INDEX.colName)
}
inline void DICT_ENTRY_INDEX::set_colname(const char* value) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(value);
  // @@protoc_insertion_point(field_set_char:DICT_ENTRY_INDEX.colName)
}
inline void DICT_ENTRY_INDEX::set_colname(const char* value, size_t size) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DICT_ENTRY_INDEX.colName)
}
inline ::std::string* DICT_ENTRY_INDEX::mutable_colname() {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:DICT_ENTRY_INDEX.colName)
  return colname_;
}
inline ::std::string* DICT_ENTRY_INDEX::release_colname() {
  clear_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = colname_;
    colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DICT_ENTRY_INDEX::set_allocated_colname(::std::string* colname) {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete colname_;
  }
  if (colname) {
    set_has_colname();
    colname_ = colname;
  } else {
    clear_has_colname();
    colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:DICT_ENTRY_INDEX.colName)
}

// repeated .INDEX_BORDER colIndexBorder = 2;
inline int DICT_ENTRY_INDEX::colindexborder_size() const {
  return colindexborder_.size();
}
inline void DICT_ENTRY_INDEX::clear_colindexborder() {
  colindexborder_.Clear();
}
inline const ::INDEX_BORDER& DICT_ENTRY_INDEX::colindexborder(int index) const {
  // @@protoc_insertion_point(field_get:DICT_ENTRY_INDEX.colIndexBorder)
  return colindexborder_.Get(index);
}
inline ::INDEX_BORDER* DICT_ENTRY_INDEX::mutable_colindexborder(int index) {
  // @@protoc_insertion_point(field_mutable:DICT_ENTRY_INDEX.colIndexBorder)
  return colindexborder_.Mutable(index);
}
inline ::INDEX_BORDER* DICT_ENTRY_INDEX::add_colindexborder() {
  // @@protoc_insertion_point(field_add:DICT_ENTRY_INDEX.colIndexBorder)
  return colindexborder_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::INDEX_BORDER >&
DICT_ENTRY_INDEX::colindexborder() const {
  // @@protoc_insertion_point(field_list:DICT_ENTRY_INDEX.colIndexBorder)
  return colindexborder_;
}
inline ::google::protobuf::RepeatedPtrField< ::INDEX_BORDER >*
DICT_ENTRY_INDEX::mutable_colindexborder() {
  // @@protoc_insertion_point(field_mutable_list:DICT_ENTRY_INDEX.colIndexBorder)
  return &colindexborder_;
}

// -------------------------------------------------------------------

// LOCATION_INDEX

// required string raip = 1;
inline bool LOCATION_INDEX::has_raip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOCATION_INDEX::set_has_raip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOCATION_INDEX::clear_has_raip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOCATION_INDEX::clear_raip() {
  if (raip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raip_->clear();
  }
  clear_has_raip();
}
inline const ::std::string& LOCATION_INDEX::raip() const {
  // @@protoc_insertion_point(field_get:LOCATION_INDEX.raip)
  return *raip_;
}
inline void LOCATION_INDEX::set_raip(const ::std::string& value) {
  set_has_raip();
  if (raip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raip_ = new ::std::string;
  }
  raip_->assign(value);
  // @@protoc_insertion_point(field_set:LOCATION_INDEX.raip)
}
inline void LOCATION_INDEX::set_raip(const char* value) {
  set_has_raip();
  if (raip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raip_ = new ::std::string;
  }
  raip_->assign(value);
  // @@protoc_insertion_point(field_set_char:LOCATION_INDEX.raip)
}
inline void LOCATION_INDEX::set_raip(const char* value, size_t size) {
  set_has_raip();
  if (raip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raip_ = new ::std::string;
  }
  raip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LOCATION_INDEX.raip)
}
inline ::std::string* LOCATION_INDEX::mutable_raip() {
  set_has_raip();
  if (raip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LOCATION_INDEX.raip)
  return raip_;
}
inline ::std::string* LOCATION_INDEX::release_raip() {
  clear_has_raip();
  if (raip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = raip_;
    raip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOCATION_INDEX::set_allocated_raip(::std::string* raip) {
  if (raip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete raip_;
  }
  if (raip) {
    set_has_raip();
    raip_ = raip;
  } else {
    clear_has_raip();
    raip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LOCATION_INDEX.raip)
}

// required int32 dbid = 2;
inline bool LOCATION_INDEX::has_dbid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOCATION_INDEX::set_has_dbid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOCATION_INDEX::clear_has_dbid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOCATION_INDEX::clear_dbid() {
  dbid_ = 0;
  clear_has_dbid();
}
inline ::google::protobuf::int32 LOCATION_INDEX::dbid() const {
  // @@protoc_insertion_point(field_get:LOCATION_INDEX.dbid)
  return dbid_;
}
inline void LOCATION_INDEX::set_dbid(::google::protobuf::int32 value) {
  set_has_dbid();
  dbid_ = value;
  // @@protoc_insertion_point(field_set:LOCATION_INDEX.dbid)
}

// required string tableName = 3;
inline bool LOCATION_INDEX::has_tablename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOCATION_INDEX::set_has_tablename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOCATION_INDEX::clear_has_tablename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOCATION_INDEX::clear_tablename() {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_->clear();
  }
  clear_has_tablename();
}
inline const ::std::string& LOCATION_INDEX::tablename() const {
  // @@protoc_insertion_point(field_get:LOCATION_INDEX.tableName)
  return *tablename_;
}
inline void LOCATION_INDEX::set_tablename(const ::std::string& value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set:LOCATION_INDEX.tableName)
}
inline void LOCATION_INDEX::set_tablename(const char* value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set_char:LOCATION_INDEX.tableName)
}
inline void LOCATION_INDEX::set_tablename(const char* value, size_t size) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LOCATION_INDEX.tableName)
}
inline ::std::string* LOCATION_INDEX::mutable_tablename() {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LOCATION_INDEX.tableName)
  return tablename_;
}
inline ::std::string* LOCATION_INDEX::release_tablename() {
  clear_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tablename_;
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOCATION_INDEX::set_allocated_tablename(::std::string* tablename) {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablename_;
  }
  if (tablename) {
    set_has_tablename();
    tablename_ = tablename;
  } else {
    clear_has_tablename();
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LOCATION_INDEX.tableName)
}

// repeated .DICT_ENTRY_INDEX dictEntryIndex = 4;
inline int LOCATION_INDEX::dictentryindex_size() const {
  return dictentryindex_.size();
}
inline void LOCATION_INDEX::clear_dictentryindex() {
  dictentryindex_.Clear();
}
inline const ::DICT_ENTRY_INDEX& LOCATION_INDEX::dictentryindex(int index) const {
  // @@protoc_insertion_point(field_get:LOCATION_INDEX.dictEntryIndex)
  return dictentryindex_.Get(index);
}
inline ::DICT_ENTRY_INDEX* LOCATION_INDEX::mutable_dictentryindex(int index) {
  // @@protoc_insertion_point(field_mutable:LOCATION_INDEX.dictEntryIndex)
  return dictentryindex_.Mutable(index);
}
inline ::DICT_ENTRY_INDEX* LOCATION_INDEX::add_dictentryindex() {
  // @@protoc_insertion_point(field_add:LOCATION_INDEX.dictEntryIndex)
  return dictentryindex_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DICT_ENTRY_INDEX >&
LOCATION_INDEX::dictentryindex() const {
  // @@protoc_insertion_point(field_list:LOCATION_INDEX.dictEntryIndex)
  return dictentryindex_;
}
inline ::google::protobuf::RepeatedPtrField< ::DICT_ENTRY_INDEX >*
LOCATION_INDEX::mutable_dictentryindex() {
  // @@protoc_insertion_point(field_mutable_list:LOCATION_INDEX.dictEntryIndex)
  return &dictentryindex_;
}

// -------------------------------------------------------------------

// MSG_DS_DC_LOCATION_INDEX_SEND

// required uint32 taskID = 1;
inline bool MSG_DS_DC_LOCATION_INDEX_SEND::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_DC_LOCATION_INDEX_SEND::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_DC_LOCATION_INDEX_SEND::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_DC_LOCATION_INDEX_SEND::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 MSG_DS_DC_LOCATION_INDEX_SEND::taskid() const {
  // @@protoc_insertion_point(field_get:MSG_DS_DC_LOCATION_INDEX_SEND.taskID)
  return taskid_;
}
inline void MSG_DS_DC_LOCATION_INDEX_SEND::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_DC_LOCATION_INDEX_SEND.taskID)
}

// required uint32 loadTaskID = 2;
inline bool MSG_DS_DC_LOCATION_INDEX_SEND::has_loadtaskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_DC_LOCATION_INDEX_SEND::set_has_loadtaskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_DC_LOCATION_INDEX_SEND::clear_has_loadtaskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_DC_LOCATION_INDEX_SEND::clear_loadtaskid() {
  loadtaskid_ = 0u;
  clear_has_loadtaskid();
}
inline ::google::protobuf::uint32 MSG_DS_DC_LOCATION_INDEX_SEND::loadtaskid() const {
  // @@protoc_insertion_point(field_get:MSG_DS_DC_LOCATION_INDEX_SEND.loadTaskID)
  return loadtaskid_;
}
inline void MSG_DS_DC_LOCATION_INDEX_SEND::set_loadtaskid(::google::protobuf::uint32 value) {
  set_has_loadtaskid();
  loadtaskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_DC_LOCATION_INDEX_SEND.loadTaskID)
}

// repeated .LOCATION_INDEX locationIndex = 3;
inline int MSG_DS_DC_LOCATION_INDEX_SEND::locationindex_size() const {
  return locationindex_.size();
}
inline void MSG_DS_DC_LOCATION_INDEX_SEND::clear_locationindex() {
  locationindex_.Clear();
}
inline const ::LOCATION_INDEX& MSG_DS_DC_LOCATION_INDEX_SEND::locationindex(int index) const {
  // @@protoc_insertion_point(field_get:MSG_DS_DC_LOCATION_INDEX_SEND.locationIndex)
  return locationindex_.Get(index);
}
inline ::LOCATION_INDEX* MSG_DS_DC_LOCATION_INDEX_SEND::mutable_locationindex(int index) {
  // @@protoc_insertion_point(field_mutable:MSG_DS_DC_LOCATION_INDEX_SEND.locationIndex)
  return locationindex_.Mutable(index);
}
inline ::LOCATION_INDEX* MSG_DS_DC_LOCATION_INDEX_SEND::add_locationindex() {
  // @@protoc_insertion_point(field_add:MSG_DS_DC_LOCATION_INDEX_SEND.locationIndex)
  return locationindex_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LOCATION_INDEX >&
MSG_DS_DC_LOCATION_INDEX_SEND::locationindex() const {
  // @@protoc_insertion_point(field_list:MSG_DS_DC_LOCATION_INDEX_SEND.locationIndex)
  return locationindex_;
}
inline ::google::protobuf::RepeatedPtrField< ::LOCATION_INDEX >*
MSG_DS_DC_LOCATION_INDEX_SEND::mutable_locationindex() {
  // @@protoc_insertion_point(field_mutable_list:MSG_DS_DC_LOCATION_INDEX_SEND.locationIndex)
  return &locationindex_;
}

// -------------------------------------------------------------------

// MSG_DC_DS_LOCATION_INDEX_SEND_ACK

// required uint32 taskID = 1;
inline bool MSG_DC_DS_LOCATION_INDEX_SEND_ACK::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 MSG_DC_DS_LOCATION_INDEX_SEND_ACK::taskid() const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_LOCATION_INDEX_SEND_ACK.taskID)
  return taskid_;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DC_DS_LOCATION_INDEX_SEND_ACK.taskID)
}

// required uint32 loadTaskID = 2;
inline bool MSG_DC_DS_LOCATION_INDEX_SEND_ACK::has_loadtaskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::set_has_loadtaskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::clear_has_loadtaskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::clear_loadtaskid() {
  loadtaskid_ = 0u;
  clear_has_loadtaskid();
}
inline ::google::protobuf::uint32 MSG_DC_DS_LOCATION_INDEX_SEND_ACK::loadtaskid() const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_LOCATION_INDEX_SEND_ACK.loadTaskID)
  return loadtaskid_;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::set_loadtaskid(::google::protobuf::uint32 value) {
  set_has_loadtaskid();
  loadtaskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DC_DS_LOCATION_INDEX_SEND_ACK.loadTaskID)
}

// required int32 statusCode = 3;
inline bool MSG_DC_DS_LOCATION_INDEX_SEND_ACK::has_statuscode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::set_has_statuscode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::clear_has_statuscode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::clear_statuscode() {
  statuscode_ = 0;
  clear_has_statuscode();
}
inline ::google::protobuf::int32 MSG_DC_DS_LOCATION_INDEX_SEND_ACK::statuscode() const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_LOCATION_INDEX_SEND_ACK.statusCode)
  return statuscode_;
}
inline void MSG_DC_DS_LOCATION_INDEX_SEND_ACK::set_statuscode(::google::protobuf::int32 value) {
  set_has_statuscode();
  statuscode_ = value;
  // @@protoc_insertion_point(field_set:MSG_DC_DS_LOCATION_INDEX_SEND_ACK.statusCode)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::INDEX_BORDER_DICT_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::INDEX_BORDER_DICT_TYPE>() {
  return ::INDEX_BORDER_DICT_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MSG_5fDS_5fDC_5fLOCATION_5fINDEX_5fSEND_2eproto__INCLUDED
