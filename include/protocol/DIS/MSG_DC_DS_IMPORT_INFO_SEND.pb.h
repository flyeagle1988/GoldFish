// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSG_DC_DS_IMPORT_INFO_SEND.proto

#ifndef PROTOBUF_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto__INCLUDED
#define PROTOBUF_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();
void protobuf_AssignDesc_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();
void protobuf_ShutdownFile_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();

class MSG_DC_DS_IMPORT_INFO_SEND;
class MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO;
class MSG_DS_DC_IMPORT_INFO_SEND_ACK;

// ===================================================================

class MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO : public ::google::protobuf::Message {
 public:
  MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO();
  virtual ~MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO();

  MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO(const MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO& from);

  inline MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO& operator=(const MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO& default_instance();

  void Swap(MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO* other);

  // implements Message ----------------------------------------------

  MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO& from);
  void MergeFrom(const MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dbid = 1;
  inline bool has_dbid() const;
  inline void clear_dbid();
  static const int kDbidFieldNumber = 1;
  inline ::google::protobuf::int32 dbid() const;
  inline void set_dbid(::google::protobuf::int32 value);

  // required string raname = 2;
  inline bool has_raname() const;
  inline void clear_raname();
  static const int kRanameFieldNumber = 2;
  inline const ::std::string& raname() const;
  inline void set_raname(const ::std::string& value);
  inline void set_raname(const char* value);
  inline void set_raname(const char* value, size_t size);
  inline ::std::string* mutable_raname();
  inline ::std::string* release_raname();
  inline void set_allocated_raname(::std::string* raname);

  // required string tablename = 3;
  inline bool has_tablename() const;
  inline void clear_tablename();
  static const int kTablenameFieldNumber = 3;
  inline const ::std::string& tablename() const;
  inline void set_tablename(const ::std::string& value);
  inline void set_tablename(const char* value);
  inline void set_tablename(const char* value, size_t size);
  inline ::std::string* mutable_tablename();
  inline ::std::string* release_tablename();
  inline void set_allocated_tablename(::std::string* tablename);

  // repeated string colName = 4;
  inline int colname_size() const;
  inline void clear_colname();
  static const int kColNameFieldNumber = 4;
  inline const ::std::string& colname(int index) const;
  inline ::std::string* mutable_colname(int index);
  inline void set_colname(int index, const ::std::string& value);
  inline void set_colname(int index, const char* value);
  inline void set_colname(int index, const char* value, size_t size);
  inline ::std::string* add_colname();
  inline void add_colname(const ::std::string& value);
  inline void add_colname(const char* value);
  inline void add_colname(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& colname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_colname();

  // @@protoc_insertion_point(class_scope:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO)
 private:
  inline void set_has_dbid();
  inline void clear_has_dbid();
  inline void set_has_raname();
  inline void clear_has_raname();
  inline void set_has_tablename();
  inline void clear_has_tablename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* raname_;
  ::std::string* tablename_;
  ::google::protobuf::RepeatedPtrField< ::std::string> colname_;
  ::google::protobuf::int32 dbid_;
  friend void  protobuf_AddDesc_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DC_DS_IMPORT_INFO_SEND : public ::google::protobuf::Message {
 public:
  MSG_DC_DS_IMPORT_INFO_SEND();
  virtual ~MSG_DC_DS_IMPORT_INFO_SEND();

  MSG_DC_DS_IMPORT_INFO_SEND(const MSG_DC_DS_IMPORT_INFO_SEND& from);

  inline MSG_DC_DS_IMPORT_INFO_SEND& operator=(const MSG_DC_DS_IMPORT_INFO_SEND& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DC_DS_IMPORT_INFO_SEND& default_instance();

  void Swap(MSG_DC_DS_IMPORT_INFO_SEND* other);

  // implements Message ----------------------------------------------

  MSG_DC_DS_IMPORT_INFO_SEND* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DC_DS_IMPORT_INFO_SEND& from);
  void MergeFrom(const MSG_DC_DS_IMPORT_INFO_SEND& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO TABLE_INFO;

  // accessors -------------------------------------------------------

  // required uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // repeated .MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO tableInfo = 2;
  inline int tableinfo_size() const;
  inline void clear_tableinfo();
  static const int kTableInfoFieldNumber = 2;
  inline const ::MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO& tableinfo(int index) const;
  inline ::MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO* mutable_tableinfo(int index);
  inline ::MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO* add_tableinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO >&
      tableinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO >*
      mutable_tableinfo();

  // required bool isDelta = 3;
  inline bool has_isdelta() const;
  inline void clear_isdelta();
  static const int kIsDeltaFieldNumber = 3;
  inline bool isdelta() const;
  inline void set_isdelta(bool value);

  // optional uint32 tableRowNumber = 4;
  inline bool has_tablerownumber() const;
  inline void clear_tablerownumber();
  static const int kTableRowNumberFieldNumber = 4;
  inline ::google::protobuf::uint32 tablerownumber() const;
  inline void set_tablerownumber(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG_DC_DS_IMPORT_INFO_SEND)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_isdelta();
  inline void clear_has_isdelta();
  inline void set_has_tablerownumber();
  inline void clear_has_tablerownumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO > tableinfo_;
  ::google::protobuf::uint32 taskid_;
  bool isdelta_;
  ::google::protobuf::uint32 tablerownumber_;
  friend void  protobuf_AddDesc_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static MSG_DC_DS_IMPORT_INFO_SEND* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_DC_IMPORT_INFO_SEND_ACK : public ::google::protobuf::Message {
 public:
  MSG_DS_DC_IMPORT_INFO_SEND_ACK();
  virtual ~MSG_DS_DC_IMPORT_INFO_SEND_ACK();

  MSG_DS_DC_IMPORT_INFO_SEND_ACK(const MSG_DS_DC_IMPORT_INFO_SEND_ACK& from);

  inline MSG_DS_DC_IMPORT_INFO_SEND_ACK& operator=(const MSG_DS_DC_IMPORT_INFO_SEND_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_DC_IMPORT_INFO_SEND_ACK& default_instance();

  void Swap(MSG_DS_DC_IMPORT_INFO_SEND_ACK* other);

  // implements Message ----------------------------------------------

  MSG_DS_DC_IMPORT_INFO_SEND_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_DC_IMPORT_INFO_SEND_ACK& from);
  void MergeFrom(const MSG_DS_DC_IMPORT_INFO_SEND_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // required int32 statusCode = 2;
  inline bool has_statuscode() const;
  inline void clear_statuscode();
  static const int kStatusCodeFieldNumber = 2;
  inline ::google::protobuf::int32 statuscode() const;
  inline void set_statuscode(::google::protobuf::int32 value);

  // required string statusMsg = 3;
  inline bool has_statusmsg() const;
  inline void clear_statusmsg();
  static const int kStatusMsgFieldNumber = 3;
  inline const ::std::string& statusmsg() const;
  inline void set_statusmsg(const ::std::string& value);
  inline void set_statusmsg(const char* value);
  inline void set_statusmsg(const char* value, size_t size);
  inline ::std::string* mutable_statusmsg();
  inline ::std::string* release_statusmsg();
  inline void set_allocated_statusmsg(::std::string* statusmsg);

  // @@protoc_insertion_point(class_scope:MSG_DS_DC_IMPORT_INFO_SEND_ACK)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_statuscode();
  inline void clear_has_statuscode();
  inline void set_has_statusmsg();
  inline void clear_has_statusmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::int32 statuscode_;
  ::std::string* statusmsg_;
  friend void  protobuf_AddDesc_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_DC_IMPORT_INFO_SEND_ACK* default_instance_;
};
// ===================================================================


// ===================================================================

// MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO

// required int32 dbid = 1;
inline bool MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::has_dbid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_has_dbid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::clear_has_dbid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::clear_dbid() {
  dbid_ = 0;
  clear_has_dbid();
}
inline ::google::protobuf::int32 MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::dbid() const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.dbid)
  return dbid_;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_dbid(::google::protobuf::int32 value) {
  set_has_dbid();
  dbid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.dbid)
}

// required string raname = 2;
inline bool MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::has_raname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_has_raname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::clear_has_raname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::clear_raname() {
  if (raname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raname_->clear();
  }
  clear_has_raname();
}
inline const ::std::string& MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::raname() const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.raname)
  return *raname_;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_raname(const ::std::string& value) {
  set_has_raname();
  if (raname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raname_ = new ::std::string;
  }
  raname_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.raname)
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_raname(const char* value) {
  set_has_raname();
  if (raname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raname_ = new ::std::string;
  }
  raname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.raname)
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_raname(const char* value, size_t size) {
  set_has_raname();
  if (raname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raname_ = new ::std::string;
  }
  raname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.raname)
}
inline ::std::string* MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::mutable_raname() {
  set_has_raname();
  if (raname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.raname)
  return raname_;
}
inline ::std::string* MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::release_raname() {
  clear_has_raname();
  if (raname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = raname_;
    raname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_allocated_raname(::std::string* raname) {
  if (raname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete raname_;
  }
  if (raname) {
    set_has_raname();
    raname_ = raname;
  } else {
    clear_has_raname();
    raname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.raname)
}

// required string tablename = 3;
inline bool MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::has_tablename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_has_tablename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::clear_has_tablename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::clear_tablename() {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_->clear();
  }
  clear_has_tablename();
}
inline const ::std::string& MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::tablename() const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.tablename)
  return *tablename_;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_tablename(const ::std::string& value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.tablename)
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_tablename(const char* value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.tablename)
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_tablename(const char* value, size_t size) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.tablename)
}
inline ::std::string* MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::mutable_tablename() {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.tablename)
  return tablename_;
}
inline ::std::string* MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::release_tablename() {
  clear_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tablename_;
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_allocated_tablename(::std::string* tablename) {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablename_;
  }
  if (tablename) {
    set_has_tablename();
    tablename_ = tablename;
  } else {
    clear_has_tablename();
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.tablename)
}

// repeated string colName = 4;
inline int MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::colname_size() const {
  return colname_.size();
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::clear_colname() {
  colname_.Clear();
}
inline const ::std::string& MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::colname(int index) const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.colName)
  return colname_.Get(index);
}
inline ::std::string* MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::mutable_colname(int index) {
  // @@protoc_insertion_point(field_mutable:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.colName)
  return colname_.Mutable(index);
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_colname(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.colName)
  colname_.Mutable(index)->assign(value);
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_colname(int index, const char* value) {
  colname_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.colName)
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::set_colname(int index, const char* value, size_t size) {
  colname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.colName)
}
inline ::std::string* MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::add_colname() {
  return colname_.Add();
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::add_colname(const ::std::string& value) {
  colname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.colName)
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::add_colname(const char* value) {
  colname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.colName)
}
inline void MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::add_colname(const char* value, size_t size) {
  colname_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.colName)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::colname() const {
  // @@protoc_insertion_point(field_list:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.colName)
  return colname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO::mutable_colname() {
  // @@protoc_insertion_point(field_mutable_list:MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO.colName)
  return &colname_;
}

// -------------------------------------------------------------------

// MSG_DC_DS_IMPORT_INFO_SEND

// required uint32 taskID = 1;
inline bool MSG_DC_DS_IMPORT_INFO_SEND::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 MSG_DC_DS_IMPORT_INFO_SEND::taskid() const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_IMPORT_INFO_SEND.taskID)
  return taskid_;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DC_DS_IMPORT_INFO_SEND.taskID)
}

// repeated .MSG_DC_DS_IMPORT_INFO_SEND.TABLE_INFO tableInfo = 2;
inline int MSG_DC_DS_IMPORT_INFO_SEND::tableinfo_size() const {
  return tableinfo_.size();
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::clear_tableinfo() {
  tableinfo_.Clear();
}
inline const ::MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO& MSG_DC_DS_IMPORT_INFO_SEND::tableinfo(int index) const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_IMPORT_INFO_SEND.tableInfo)
  return tableinfo_.Get(index);
}
inline ::MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO* MSG_DC_DS_IMPORT_INFO_SEND::mutable_tableinfo(int index) {
  // @@protoc_insertion_point(field_mutable:MSG_DC_DS_IMPORT_INFO_SEND.tableInfo)
  return tableinfo_.Mutable(index);
}
inline ::MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO* MSG_DC_DS_IMPORT_INFO_SEND::add_tableinfo() {
  // @@protoc_insertion_point(field_add:MSG_DC_DS_IMPORT_INFO_SEND.tableInfo)
  return tableinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO >&
MSG_DC_DS_IMPORT_INFO_SEND::tableinfo() const {
  // @@protoc_insertion_point(field_list:MSG_DC_DS_IMPORT_INFO_SEND.tableInfo)
  return tableinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::MSG_DC_DS_IMPORT_INFO_SEND_TABLE_INFO >*
MSG_DC_DS_IMPORT_INFO_SEND::mutable_tableinfo() {
  // @@protoc_insertion_point(field_mutable_list:MSG_DC_DS_IMPORT_INFO_SEND.tableInfo)
  return &tableinfo_;
}

// required bool isDelta = 3;
inline bool MSG_DC_DS_IMPORT_INFO_SEND::has_isdelta() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::set_has_isdelta() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::clear_has_isdelta() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::clear_isdelta() {
  isdelta_ = false;
  clear_has_isdelta();
}
inline bool MSG_DC_DS_IMPORT_INFO_SEND::isdelta() const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_IMPORT_INFO_SEND.isDelta)
  return isdelta_;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::set_isdelta(bool value) {
  set_has_isdelta();
  isdelta_ = value;
  // @@protoc_insertion_point(field_set:MSG_DC_DS_IMPORT_INFO_SEND.isDelta)
}

// optional uint32 tableRowNumber = 4;
inline bool MSG_DC_DS_IMPORT_INFO_SEND::has_tablerownumber() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::set_has_tablerownumber() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::clear_has_tablerownumber() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::clear_tablerownumber() {
  tablerownumber_ = 0u;
  clear_has_tablerownumber();
}
inline ::google::protobuf::uint32 MSG_DC_DS_IMPORT_INFO_SEND::tablerownumber() const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_IMPORT_INFO_SEND.tableRowNumber)
  return tablerownumber_;
}
inline void MSG_DC_DS_IMPORT_INFO_SEND::set_tablerownumber(::google::protobuf::uint32 value) {
  set_has_tablerownumber();
  tablerownumber_ = value;
  // @@protoc_insertion_point(field_set:MSG_DC_DS_IMPORT_INFO_SEND.tableRowNumber)
}

// -------------------------------------------------------------------

// MSG_DS_DC_IMPORT_INFO_SEND_ACK

// required uint32 taskID = 1;
inline bool MSG_DS_DC_IMPORT_INFO_SEND_ACK::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 MSG_DS_DC_IMPORT_INFO_SEND_ACK::taskid() const {
  // @@protoc_insertion_point(field_get:MSG_DS_DC_IMPORT_INFO_SEND_ACK.taskID)
  return taskid_;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_DC_IMPORT_INFO_SEND_ACK.taskID)
}

// required int32 statusCode = 2;
inline bool MSG_DS_DC_IMPORT_INFO_SEND_ACK::has_statuscode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::set_has_statuscode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::clear_has_statuscode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::clear_statuscode() {
  statuscode_ = 0;
  clear_has_statuscode();
}
inline ::google::protobuf::int32 MSG_DS_DC_IMPORT_INFO_SEND_ACK::statuscode() const {
  // @@protoc_insertion_point(field_get:MSG_DS_DC_IMPORT_INFO_SEND_ACK.statusCode)
  return statuscode_;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::set_statuscode(::google::protobuf::int32 value) {
  set_has_statuscode();
  statuscode_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_DC_IMPORT_INFO_SEND_ACK.statusCode)
}

// required string statusMsg = 3;
inline bool MSG_DS_DC_IMPORT_INFO_SEND_ACK::has_statusmsg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::set_has_statusmsg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::clear_has_statusmsg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::clear_statusmsg() {
  if (statusmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statusmsg_->clear();
  }
  clear_has_statusmsg();
}
inline const ::std::string& MSG_DS_DC_IMPORT_INFO_SEND_ACK::statusmsg() const {
  // @@protoc_insertion_point(field_get:MSG_DS_DC_IMPORT_INFO_SEND_ACK.statusMsg)
  return *statusmsg_;
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::set_statusmsg(const ::std::string& value) {
  set_has_statusmsg();
  if (statusmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statusmsg_ = new ::std::string;
  }
  statusmsg_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_DS_DC_IMPORT_INFO_SEND_ACK.statusMsg)
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::set_statusmsg(const char* value) {
  set_has_statusmsg();
  if (statusmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statusmsg_ = new ::std::string;
  }
  statusmsg_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_DS_DC_IMPORT_INFO_SEND_ACK.statusMsg)
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::set_statusmsg(const char* value, size_t size) {
  set_has_statusmsg();
  if (statusmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statusmsg_ = new ::std::string;
  }
  statusmsg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_DS_DC_IMPORT_INFO_SEND_ACK.statusMsg)
}
inline ::std::string* MSG_DS_DC_IMPORT_INFO_SEND_ACK::mutable_statusmsg() {
  set_has_statusmsg();
  if (statusmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statusmsg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_DS_DC_IMPORT_INFO_SEND_ACK.statusMsg)
  return statusmsg_;
}
inline ::std::string* MSG_DS_DC_IMPORT_INFO_SEND_ACK::release_statusmsg() {
  clear_has_statusmsg();
  if (statusmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = statusmsg_;
    statusmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DS_DC_IMPORT_INFO_SEND_ACK::set_allocated_statusmsg(::std::string* statusmsg) {
  if (statusmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete statusmsg_;
  }
  if (statusmsg) {
    set_has_statusmsg();
    statusmsg_ = statusmsg;
  } else {
    clear_has_statusmsg();
    statusmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_DS_DC_IMPORT_INFO_SEND_ACK.statusMsg)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MSG_5fDC_5fDS_5fIMPORT_5fINFO_5fSEND_2eproto__INCLUDED
