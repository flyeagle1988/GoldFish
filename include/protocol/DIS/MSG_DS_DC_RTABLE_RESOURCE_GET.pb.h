// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSG_DS_DC_RTABLE_RESOURCE_GET.proto

#ifndef PROTOBUF_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto__INCLUDED
#define PROTOBUF_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto();
void protobuf_AssignDesc_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto();
void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto();

class MSG_DS_DC_RTABLE_RESOURCE_GET;
class MSG_DC_DS_RTABLE_RESOURCE_GET_ACK;

// ===================================================================

class MSG_DS_DC_RTABLE_RESOURCE_GET : public ::google::protobuf::Message {
 public:
  MSG_DS_DC_RTABLE_RESOURCE_GET();
  virtual ~MSG_DS_DC_RTABLE_RESOURCE_GET();

  MSG_DS_DC_RTABLE_RESOURCE_GET(const MSG_DS_DC_RTABLE_RESOURCE_GET& from);

  inline MSG_DS_DC_RTABLE_RESOURCE_GET& operator=(const MSG_DS_DC_RTABLE_RESOURCE_GET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_DC_RTABLE_RESOURCE_GET& default_instance();

  void Swap(MSG_DS_DC_RTABLE_RESOURCE_GET* other);

  // implements Message ----------------------------------------------

  MSG_DS_DC_RTABLE_RESOURCE_GET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_DC_RTABLE_RESOURCE_GET& from);
  void MergeFrom(const MSG_DS_DC_RTABLE_RESOURCE_GET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // required uint32 dbID = 2;
  inline bool has_dbid() const;
  inline void clear_dbid();
  static const int kDbIDFieldNumber = 2;
  inline ::google::protobuf::uint32 dbid() const;
  inline void set_dbid(::google::protobuf::uint32 value);

  // required string tableName = 3;
  inline bool has_tablename() const;
  inline void clear_tablename();
  static const int kTableNameFieldNumber = 3;
  inline const ::std::string& tablename() const;
  inline void set_tablename(const ::std::string& value);
  inline void set_tablename(const char* value);
  inline void set_tablename(const char* value, size_t size);
  inline ::std::string* mutable_tablename();
  inline ::std::string* release_tablename();
  inline void set_allocated_tablename(::std::string* tablename);

  // required uint32 rTableSize = 4;
  inline bool has_rtablesize() const;
  inline void clear_rtablesize();
  static const int kRTableSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 rtablesize() const;
  inline void set_rtablesize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG_DS_DC_RTABLE_RESOURCE_GET)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_dbid();
  inline void clear_has_dbid();
  inline void set_has_tablename();
  inline void clear_has_tablename();
  inline void set_has_rtablesize();
  inline void clear_has_rtablesize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 dbid_;
  ::std::string* tablename_;
  ::google::protobuf::uint32 rtablesize_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_DC_RTABLE_RESOURCE_GET* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DC_DS_RTABLE_RESOURCE_GET_ACK : public ::google::protobuf::Message {
 public:
  MSG_DC_DS_RTABLE_RESOURCE_GET_ACK();
  virtual ~MSG_DC_DS_RTABLE_RESOURCE_GET_ACK();

  MSG_DC_DS_RTABLE_RESOURCE_GET_ACK(const MSG_DC_DS_RTABLE_RESOURCE_GET_ACK& from);

  inline MSG_DC_DS_RTABLE_RESOURCE_GET_ACK& operator=(const MSG_DC_DS_RTABLE_RESOURCE_GET_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DC_DS_RTABLE_RESOURCE_GET_ACK& default_instance();

  void Swap(MSG_DC_DS_RTABLE_RESOURCE_GET_ACK* other);

  // implements Message ----------------------------------------------

  MSG_DC_DS_RTABLE_RESOURCE_GET_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DC_DS_RTABLE_RESOURCE_GET_ACK& from);
  void MergeFrom(const MSG_DC_DS_RTABLE_RESOURCE_GET_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // required string csIP = 2;
  inline bool has_csip() const;
  inline void clear_csip();
  static const int kCsIPFieldNumber = 2;
  inline const ::std::string& csip() const;
  inline void set_csip(const ::std::string& value);
  inline void set_csip(const char* value);
  inline void set_csip(const char* value, size_t size);
  inline ::std::string* mutable_csip();
  inline ::std::string* release_csip();
  inline void set_allocated_csip(::std::string* csip);

  // @@protoc_insertion_point(class_scope:MSG_DC_DS_RTABLE_RESOURCE_GET_ACK)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_csip();
  inline void clear_has_csip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* csip_;
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto();

  void InitAsDefaultInstance();
  static MSG_DC_DS_RTABLE_RESOURCE_GET_ACK* default_instance_;
};
// ===================================================================


// ===================================================================

// MSG_DS_DC_RTABLE_RESOURCE_GET

// required uint32 taskID = 1;
inline bool MSG_DS_DC_RTABLE_RESOURCE_GET::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 MSG_DS_DC_RTABLE_RESOURCE_GET::taskid() const {
  // @@protoc_insertion_point(field_get:MSG_DS_DC_RTABLE_RESOURCE_GET.taskID)
  return taskid_;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_DC_RTABLE_RESOURCE_GET.taskID)
}

// required uint32 dbID = 2;
inline bool MSG_DS_DC_RTABLE_RESOURCE_GET::has_dbid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::set_has_dbid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::clear_has_dbid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::clear_dbid() {
  dbid_ = 0u;
  clear_has_dbid();
}
inline ::google::protobuf::uint32 MSG_DS_DC_RTABLE_RESOURCE_GET::dbid() const {
  // @@protoc_insertion_point(field_get:MSG_DS_DC_RTABLE_RESOURCE_GET.dbID)
  return dbid_;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::set_dbid(::google::protobuf::uint32 value) {
  set_has_dbid();
  dbid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_DC_RTABLE_RESOURCE_GET.dbID)
}

// required string tableName = 3;
inline bool MSG_DS_DC_RTABLE_RESOURCE_GET::has_tablename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::set_has_tablename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::clear_has_tablename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::clear_tablename() {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_->clear();
  }
  clear_has_tablename();
}
inline const ::std::string& MSG_DS_DC_RTABLE_RESOURCE_GET::tablename() const {
  // @@protoc_insertion_point(field_get:MSG_DS_DC_RTABLE_RESOURCE_GET.tableName)
  return *tablename_;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::set_tablename(const ::std::string& value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_DS_DC_RTABLE_RESOURCE_GET.tableName)
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::set_tablename(const char* value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_DS_DC_RTABLE_RESOURCE_GET.tableName)
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::set_tablename(const char* value, size_t size) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_DS_DC_RTABLE_RESOURCE_GET.tableName)
}
inline ::std::string* MSG_DS_DC_RTABLE_RESOURCE_GET::mutable_tablename() {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_DS_DC_RTABLE_RESOURCE_GET.tableName)
  return tablename_;
}
inline ::std::string* MSG_DS_DC_RTABLE_RESOURCE_GET::release_tablename() {
  clear_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tablename_;
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::set_allocated_tablename(::std::string* tablename) {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablename_;
  }
  if (tablename) {
    set_has_tablename();
    tablename_ = tablename;
  } else {
    clear_has_tablename();
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_DS_DC_RTABLE_RESOURCE_GET.tableName)
}

// required uint32 rTableSize = 4;
inline bool MSG_DS_DC_RTABLE_RESOURCE_GET::has_rtablesize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::set_has_rtablesize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::clear_has_rtablesize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::clear_rtablesize() {
  rtablesize_ = 0u;
  clear_has_rtablesize();
}
inline ::google::protobuf::uint32 MSG_DS_DC_RTABLE_RESOURCE_GET::rtablesize() const {
  // @@protoc_insertion_point(field_get:MSG_DS_DC_RTABLE_RESOURCE_GET.rTableSize)
  return rtablesize_;
}
inline void MSG_DS_DC_RTABLE_RESOURCE_GET::set_rtablesize(::google::protobuf::uint32 value) {
  set_has_rtablesize();
  rtablesize_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_DC_RTABLE_RESOURCE_GET.rTableSize)
}

// -------------------------------------------------------------------

// MSG_DC_DS_RTABLE_RESOURCE_GET_ACK

// required uint32 taskID = 1;
inline bool MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::taskid() const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_RTABLE_RESOURCE_GET_ACK.taskID)
  return taskid_;
}
inline void MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DC_DS_RTABLE_RESOURCE_GET_ACK.taskID)
}

// required string csIP = 2;
inline bool MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::has_csip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::set_has_csip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::clear_has_csip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::clear_csip() {
  if (csip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    csip_->clear();
  }
  clear_has_csip();
}
inline const ::std::string& MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::csip() const {
  // @@protoc_insertion_point(field_get:MSG_DC_DS_RTABLE_RESOURCE_GET_ACK.csIP)
  return *csip_;
}
inline void MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::set_csip(const ::std::string& value) {
  set_has_csip();
  if (csip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    csip_ = new ::std::string;
  }
  csip_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_DC_DS_RTABLE_RESOURCE_GET_ACK.csIP)
}
inline void MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::set_csip(const char* value) {
  set_has_csip();
  if (csip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    csip_ = new ::std::string;
  }
  csip_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_DC_DS_RTABLE_RESOURCE_GET_ACK.csIP)
}
inline void MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::set_csip(const char* value, size_t size) {
  set_has_csip();
  if (csip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    csip_ = new ::std::string;
  }
  csip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_DC_DS_RTABLE_RESOURCE_GET_ACK.csIP)
}
inline ::std::string* MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::mutable_csip() {
  set_has_csip();
  if (csip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    csip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_DC_DS_RTABLE_RESOURCE_GET_ACK.csIP)
  return csip_;
}
inline ::std::string* MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::release_csip() {
  clear_has_csip();
  if (csip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = csip_;
    csip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DC_DS_RTABLE_RESOURCE_GET_ACK::set_allocated_csip(::std::string* csip) {
  if (csip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete csip_;
  }
  if (csip) {
    set_has_csip();
    csip_ = csip;
  } else {
    clear_has_csip();
    csip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_DC_DS_RTABLE_RESOURCE_GET_ACK.csIP)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MSG_5fDS_5fDC_5fRTABLE_5fRESOURCE_5fGET_2eproto__INCLUDED
