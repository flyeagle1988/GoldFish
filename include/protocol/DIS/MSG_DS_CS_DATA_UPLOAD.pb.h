// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSG_DS_CS_DATA_UPLOAD.proto

#ifndef PROTOBUF_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto__INCLUDED
#define PROTOBUF_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
void protobuf_AssignDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
void protobuf_ShutdownFile_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();

class MSG_DS_CS_DATA_UPLOAD;
class MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO;
class MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO;
class MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO;
class MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO;
class MSG_CS_DS_DATA_UPLOAD_ACK;

enum MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE {
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_STRING = 0,
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_INT = 1,
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_FLOAT = 2,
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_DOUBLE = 3
};
bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_IsValid(int value);
const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_COL_TYPE_MIN = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_STRING;
const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_COL_TYPE_MAX = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_DOUBLE;
const int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_COL_TYPE_ARRAYSIZE = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_COL_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_descriptor();
inline const ::std::string& MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_Name(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_descriptor(), value);
}
inline bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_Parse(
    const ::std::string& name, MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE>(
    MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_descriptor(), name, value);
}
// ===================================================================

class MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO : public ::google::protobuf::Message {
 public:
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO();
  virtual ~MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO();

  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& from);

  inline MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& operator=(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& default_instance();

  void Swap(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO* other);

  // implements Message ----------------------------------------------

  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& from);
  void MergeFrom(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strValue = 1;
  inline bool has_strvalue() const;
  inline void clear_strvalue();
  static const int kStrValueFieldNumber = 1;
  inline const ::std::string& strvalue() const;
  inline void set_strvalue(const ::std::string& value);
  inline void set_strvalue(const char* value);
  inline void set_strvalue(const char* value, size_t size);
  inline ::std::string* mutable_strvalue();
  inline ::std::string* release_strvalue();
  inline void set_allocated_strvalue(::std::string* strvalue);

  // optional int32 iValue = 2;
  inline bool has_ivalue() const;
  inline void clear_ivalue();
  static const int kIValueFieldNumber = 2;
  inline ::google::protobuf::int32 ivalue() const;
  inline void set_ivalue(::google::protobuf::int32 value);

  // optional float fValue = 3;
  inline bool has_fvalue() const;
  inline void clear_fvalue();
  static const int kFValueFieldNumber = 3;
  inline float fvalue() const;
  inline void set_fvalue(float value);

  // optional double dValue = 4;
  inline bool has_dvalue() const;
  inline void clear_dvalue();
  static const int kDValueFieldNumber = 4;
  inline double dvalue() const;
  inline void set_dvalue(double value);

  // @@protoc_insertion_point(class_scope:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO)
 private:
  inline void set_has_strvalue();
  inline void clear_has_strvalue();
  inline void set_has_ivalue();
  inline void clear_has_ivalue();
  inline void set_has_fvalue();
  inline void clear_has_fvalue();
  inline void set_has_dvalue();
  inline void clear_has_dvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* strvalue_;
  ::google::protobuf::int32 ivalue_;
  float fvalue_;
  double dvalue_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO : public ::google::protobuf::Message {
 public:
  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO();
  virtual ~MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO();

  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& from);

  inline MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& operator=(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& default_instance();

  void Swap(MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO* other);

  // implements Message ----------------------------------------------

  MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& from);
  void MergeFrom(const MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO DICT_DATA_INFO;

  typedef MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE COL_TYPE;
  static const COL_TYPE STRING = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_STRING;
  static const COL_TYPE INT = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_INT;
  static const COL_TYPE FLOAT = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_FLOAT;
  static const COL_TYPE DOUBLE = MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_DOUBLE;
  static inline bool COL_TYPE_IsValid(int value) {
    return MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_IsValid(value);
  }
  static const COL_TYPE COL_TYPE_MIN =
    MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_COL_TYPE_MIN;
  static const COL_TYPE COL_TYPE_MAX =
    MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_COL_TYPE_MAX;
  static const int COL_TYPE_ARRAYSIZE =
    MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_COL_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  COL_TYPE_descriptor() {
    return MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_descriptor();
  }
  static inline const ::std::string& COL_TYPE_Name(COL_TYPE value) {
    return MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_Name(value);
  }
  static inline bool COL_TYPE_Parse(const ::std::string& name,
      COL_TYPE* value) {
    return MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string colName = 1;
  inline bool has_colname() const;
  inline void clear_colname();
  static const int kColNameFieldNumber = 1;
  inline const ::std::string& colname() const;
  inline void set_colname(const ::std::string& value);
  inline void set_colname(const char* value);
  inline void set_colname(const char* value, size_t size);
  inline ::std::string* mutable_colname();
  inline ::std::string* release_colname();
  inline void set_allocated_colname(::std::string* colname);

  // required .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.COL_TYPE colType = 2 [default = STRING];
  inline bool has_coltype() const;
  inline void clear_coltype();
  static const int kColTypeFieldNumber = 2;
  inline ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE coltype() const;
  inline void set_coltype(::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE value);

  // repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO dictData = 3;
  inline int dictdata_size() const;
  inline void clear_dictdata();
  static const int kDictDataFieldNumber = 3;
  inline const ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& dictdata(int index) const;
  inline ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO* mutable_dictdata(int index);
  inline ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO* add_dictdata();
  inline const ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO >&
      dictdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO >*
      mutable_dictdata();

  // repeated uint32 indexOffsets = 4;
  inline int indexoffsets_size() const;
  inline void clear_indexoffsets();
  static const int kIndexOffsetsFieldNumber = 4;
  inline ::google::protobuf::uint32 indexoffsets(int index) const;
  inline void set_indexoffsets(int index, ::google::protobuf::uint32 value);
  inline void add_indexoffsets(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      indexoffsets() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_indexoffsets();

  // repeated uint32 indexPost = 5;
  inline int indexpost_size() const;
  inline void clear_indexpost();
  static const int kIndexPostFieldNumber = 5;
  inline ::google::protobuf::uint32 indexpost(int index) const;
  inline void set_indexpost(int index, ::google::protobuf::uint32 value);
  inline void add_indexpost(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      indexpost() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_indexpost();

  // @@protoc_insertion_point(class_scope:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO)
 private:
  inline void set_has_colname();
  inline void clear_has_colname();
  inline void set_has_coltype();
  inline void clear_has_coltype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* colname_;
  ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO > dictdata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > indexoffsets_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > indexpost_;
  int coltype_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO : public ::google::protobuf::Message {
 public:
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO();
  virtual ~MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO();

  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& from);

  inline MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& operator=(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& default_instance();

  void Swap(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO* other);

  // implements Message ----------------------------------------------

  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& from);
  void MergeFrom(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string colName = 1;
  inline bool has_colname() const;
  inline void clear_colname();
  static const int kColNameFieldNumber = 1;
  inline const ::std::string& colname() const;
  inline void set_colname(const ::std::string& value);
  inline void set_colname(const char* value);
  inline void set_colname(const char* value, size_t size);
  inline ::std::string* mutable_colname();
  inline ::std::string* release_colname();
  inline void set_allocated_colname(::std::string* colname);

  // required uint32 rowEntry = 2;
  inline bool has_rowentry() const;
  inline void clear_rowentry();
  static const int kRowEntryFieldNumber = 2;
  inline ::google::protobuf::uint32 rowentry() const;
  inline void set_rowentry(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO)
 private:
  inline void set_has_colname();
  inline void clear_has_colname();
  inline void set_has_rowentry();
  inline void clear_has_rowentry();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* colname_;
  ::google::protobuf::uint32 rowentry_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO : public ::google::protobuf::Message {
 public:
  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO();
  virtual ~MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO();

  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& from);

  inline MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& operator=(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& default_instance();

  void Swap(MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO* other);

  // implements Message ----------------------------------------------

  MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& from);
  void MergeFrom(const MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO ROW_INFO;

  // accessors -------------------------------------------------------

  // required uint32 rowNum = 1;
  inline bool has_rownum() const;
  inline void clear_rownum();
  static const int kRowNumFieldNumber = 1;
  inline ::google::protobuf::uint32 rownum() const;
  inline void set_rownum(::google::protobuf::uint32 value);

  // repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO rowData = 2;
  inline int rowdata_size() const;
  inline void clear_rowdata();
  static const int kRowDataFieldNumber = 2;
  inline const ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& rowdata(int index) const;
  inline ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO* mutable_rowdata(int index);
  inline ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO* add_rowdata();
  inline const ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO >&
      rowdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO >*
      mutable_rowdata();

  // @@protoc_insertion_point(class_scope:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO)
 private:
  inline void set_has_rownum();
  inline void clear_has_rownum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO > rowdata_;
  ::google::protobuf::uint32 rownum_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_CS_DATA_UPLOAD : public ::google::protobuf::Message {
 public:
  MSG_DS_CS_DATA_UPLOAD();
  virtual ~MSG_DS_CS_DATA_UPLOAD();

  MSG_DS_CS_DATA_UPLOAD(const MSG_DS_CS_DATA_UPLOAD& from);

  inline MSG_DS_CS_DATA_UPLOAD& operator=(const MSG_DS_CS_DATA_UPLOAD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_CS_DATA_UPLOAD& default_instance();

  void Swap(MSG_DS_CS_DATA_UPLOAD* other);

  // implements Message ----------------------------------------------

  MSG_DS_CS_DATA_UPLOAD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_CS_DATA_UPLOAD& from);
  void MergeFrom(const MSG_DS_CS_DATA_UPLOAD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO TABLE_DICT_INFO;
  typedef MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO ROW_TABLE_INFO;

  // accessors -------------------------------------------------------

  // required string dbName = 1;
  inline bool has_dbname() const;
  inline void clear_dbname();
  static const int kDbNameFieldNumber = 1;
  inline const ::std::string& dbname() const;
  inline void set_dbname(const ::std::string& value);
  inline void set_dbname(const char* value);
  inline void set_dbname(const char* value, size_t size);
  inline ::std::string* mutable_dbname();
  inline ::std::string* release_dbname();
  inline void set_allocated_dbname(::std::string* dbname);

  // required string tableName = 2;
  inline bool has_tablename() const;
  inline void clear_tablename();
  static const int kTableNameFieldNumber = 2;
  inline const ::std::string& tablename() const;
  inline void set_tablename(const ::std::string& value);
  inline void set_tablename(const char* value);
  inline void set_tablename(const char* value, size_t size);
  inline ::std::string* mutable_tablename();
  inline ::std::string* release_tablename();
  inline void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO colDictData = 3;
  inline int coldictdata_size() const;
  inline void clear_coldictdata();
  static const int kColDictDataFieldNumber = 3;
  inline const ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& coldictdata(int index) const;
  inline ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO* mutable_coldictdata(int index);
  inline ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO* add_coldictdata();
  inline const ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO >&
      coldictdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO >*
      mutable_coldictdata();

  // repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO rowTableData = 4;
  inline int rowtabledata_size() const;
  inline void clear_rowtabledata();
  static const int kRowTableDataFieldNumber = 4;
  inline const ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& rowtabledata(int index) const;
  inline ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO* mutable_rowtabledata(int index);
  inline ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO* add_rowtabledata();
  inline const ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO >&
      rowtabledata() const;
  inline ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO >*
      mutable_rowtabledata();

  // required uint32 taskID = 5;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 5;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG_DS_CS_DATA_UPLOAD)
 private:
  inline void set_has_dbname();
  inline void clear_has_dbname();
  inline void set_has_tablename();
  inline void clear_has_tablename();
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* dbname_;
  ::std::string* tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO > coldictdata_;
  ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO > rowtabledata_;
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_CS_DATA_UPLOAD* default_instance_;
};
// -------------------------------------------------------------------

class MSG_CS_DS_DATA_UPLOAD_ACK : public ::google::protobuf::Message {
 public:
  MSG_CS_DS_DATA_UPLOAD_ACK();
  virtual ~MSG_CS_DS_DATA_UPLOAD_ACK();

  MSG_CS_DS_DATA_UPLOAD_ACK(const MSG_CS_DS_DATA_UPLOAD_ACK& from);

  inline MSG_CS_DS_DATA_UPLOAD_ACK& operator=(const MSG_CS_DS_DATA_UPLOAD_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_CS_DS_DATA_UPLOAD_ACK& default_instance();

  void Swap(MSG_CS_DS_DATA_UPLOAD_ACK* other);

  // implements Message ----------------------------------------------

  MSG_CS_DS_DATA_UPLOAD_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_CS_DS_DATA_UPLOAD_ACK& from);
  void MergeFrom(const MSG_CS_DS_DATA_UPLOAD_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // required int32 statusCode = 2;
  inline bool has_statuscode() const;
  inline void clear_statuscode();
  static const int kStatusCodeFieldNumber = 2;
  inline ::google::protobuf::int32 statuscode() const;
  inline void set_statuscode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MSG_CS_DS_DATA_UPLOAD_ACK)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_statuscode();
  inline void clear_has_statuscode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::int32 statuscode_;
  friend void  protobuf_AddDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_AssignDesc_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();
  friend void protobuf_ShutdownFile_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto();

  void InitAsDefaultInstance();
  static MSG_CS_DS_DATA_UPLOAD_ACK* default_instance_;
};
// ===================================================================


// ===================================================================

// MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO

// optional string strValue = 1;
inline bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::has_strvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::set_has_strvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::clear_has_strvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::clear_strvalue() {
  if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_->clear();
  }
  clear_has_strvalue();
}
inline const ::std::string& MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::strvalue() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.strValue)
  return *strvalue_;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::set_strvalue(const ::std::string& value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.strValue)
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::set_strvalue(const char* value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.strValue)
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::set_strvalue(const char* value, size_t size) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.strValue)
}
inline ::std::string* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::mutable_strvalue() {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.strValue)
  return strvalue_;
}
inline ::std::string* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::release_strvalue() {
  clear_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = strvalue_;
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strvalue_;
  }
  if (strvalue) {
    set_has_strvalue();
    strvalue_ = strvalue;
  } else {
    clear_has_strvalue();
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.strValue)
}

// optional int32 iValue = 2;
inline bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::has_ivalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::set_has_ivalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::clear_has_ivalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::clear_ivalue() {
  ivalue_ = 0;
  clear_has_ivalue();
}
inline ::google::protobuf::int32 MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::ivalue() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.iValue)
  return ivalue_;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::set_ivalue(::google::protobuf::int32 value) {
  set_has_ivalue();
  ivalue_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.iValue)
}

// optional float fValue = 3;
inline bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::has_fvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::set_has_fvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::clear_has_fvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::clear_fvalue() {
  fvalue_ = 0;
  clear_has_fvalue();
}
inline float MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::fvalue() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.fValue)
  return fvalue_;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::set_fvalue(float value) {
  set_has_fvalue();
  fvalue_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.fValue)
}

// optional double dValue = 4;
inline bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::has_dvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::set_has_dvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::clear_has_dvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::clear_dvalue() {
  dvalue_ = 0;
  clear_has_dvalue();
}
inline double MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::dvalue() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.dValue)
  return dvalue_;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO::set_dvalue(double value) {
  set_has_dvalue();
  dvalue_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO.dValue)
}

// -------------------------------------------------------------------

// MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO

// required string colName = 1;
inline bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::has_colname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::set_has_colname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::clear_has_colname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::clear_colname() {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_->clear();
  }
  clear_has_colname();
}
inline const ::std::string& MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::colname() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.colName)
  return *colname_;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::set_colname(const ::std::string& value) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.colName)
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::set_colname(const char* value) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.colName)
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::set_colname(const char* value, size_t size) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.colName)
}
inline ::std::string* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::mutable_colname() {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.colName)
  return colname_;
}
inline ::std::string* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::release_colname() {
  clear_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = colname_;
    colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::set_allocated_colname(::std::string* colname) {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete colname_;
  }
  if (colname) {
    set_has_colname();
    colname_ = colname;
  } else {
    clear_has_colname();
    colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.colName)
}

// required .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.COL_TYPE colType = 2 [default = STRING];
inline bool MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::has_coltype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::set_has_coltype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::clear_has_coltype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::clear_coltype() {
  coltype_ = 0;
  clear_has_coltype();
}
inline ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::coltype() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.colType)
  return static_cast< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE >(coltype_);
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::set_coltype(::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE value) {
  assert(::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_IsValid(value));
  set_has_coltype();
  coltype_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.colType)
}

// repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.DICT_DATA_INFO dictData = 3;
inline int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::dictdata_size() const {
  return dictdata_.size();
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::clear_dictdata() {
  dictdata_.Clear();
}
inline const ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO& MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::dictdata(int index) const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.dictData)
  return dictdata_.Get(index);
}
inline ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::mutable_dictdata(int index) {
  // @@protoc_insertion_point(field_mutable:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.dictData)
  return dictdata_.Mutable(index);
}
inline ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO* MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::add_dictdata() {
  // @@protoc_insertion_point(field_add:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.dictData)
  return dictdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO >&
MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::dictdata() const {
  // @@protoc_insertion_point(field_list:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.dictData)
  return dictdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_DICT_DATA_INFO >*
MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::mutable_dictdata() {
  // @@protoc_insertion_point(field_mutable_list:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.dictData)
  return &dictdata_;
}

// repeated uint32 indexOffsets = 4;
inline int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::indexoffsets_size() const {
  return indexoffsets_.size();
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::clear_indexoffsets() {
  indexoffsets_.Clear();
}
inline ::google::protobuf::uint32 MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::indexoffsets(int index) const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.indexOffsets)
  return indexoffsets_.Get(index);
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::set_indexoffsets(int index, ::google::protobuf::uint32 value) {
  indexoffsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.indexOffsets)
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::add_indexoffsets(::google::protobuf::uint32 value) {
  indexoffsets_.Add(value);
  // @@protoc_insertion_point(field_add:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.indexOffsets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::indexoffsets() const {
  // @@protoc_insertion_point(field_list:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.indexOffsets)
  return indexoffsets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::mutable_indexoffsets() {
  // @@protoc_insertion_point(field_mutable_list:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.indexOffsets)
  return &indexoffsets_;
}

// repeated uint32 indexPost = 5;
inline int MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::indexpost_size() const {
  return indexpost_.size();
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::clear_indexpost() {
  indexpost_.Clear();
}
inline ::google::protobuf::uint32 MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::indexpost(int index) const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.indexPost)
  return indexpost_.Get(index);
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::set_indexpost(int index, ::google::protobuf::uint32 value) {
  indexpost_.Set(index, value);
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.indexPost)
}
inline void MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::add_indexpost(::google::protobuf::uint32 value) {
  indexpost_.Add(value);
  // @@protoc_insertion_point(field_add:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.indexPost)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::indexpost() const {
  // @@protoc_insertion_point(field_list:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.indexPost)
  return indexpost_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO::mutable_indexpost() {
  // @@protoc_insertion_point(field_mutable_list:MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO.indexPost)
  return &indexpost_;
}

// -------------------------------------------------------------------

// MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO

// required string colName = 1;
inline bool MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::has_colname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::set_has_colname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::clear_has_colname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::clear_colname() {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_->clear();
  }
  clear_has_colname();
}
inline const ::std::string& MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::colname() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO.colName)
  return *colname_;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::set_colname(const ::std::string& value) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO.colName)
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::set_colname(const char* value) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO.colName)
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::set_colname(const char* value, size_t size) {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  colname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO.colName)
}
inline ::std::string* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::mutable_colname() {
  set_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    colname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO.colName)
  return colname_;
}
inline ::std::string* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::release_colname() {
  clear_has_colname();
  if (colname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = colname_;
    colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::set_allocated_colname(::std::string* colname) {
  if (colname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete colname_;
  }
  if (colname) {
    set_has_colname();
    colname_ = colname;
  } else {
    clear_has_colname();
    colname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO.colName)
}

// required uint32 rowEntry = 2;
inline bool MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::has_rowentry() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::set_has_rowentry() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::clear_has_rowentry() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::clear_rowentry() {
  rowentry_ = 0u;
  clear_has_rowentry();
}
inline ::google::protobuf::uint32 MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::rowentry() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO.rowEntry)
  return rowentry_;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO::set_rowentry(::google::protobuf::uint32 value) {
  set_has_rowentry();
  rowentry_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO.rowEntry)
}

// -------------------------------------------------------------------

// MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO

// required uint32 rowNum = 1;
inline bool MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::has_rownum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::set_has_rownum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::clear_has_rownum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::clear_rownum() {
  rownum_ = 0u;
  clear_has_rownum();
}
inline ::google::protobuf::uint32 MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::rownum() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.rowNum)
  return rownum_;
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::set_rownum(::google::protobuf::uint32 value) {
  set_has_rownum();
  rownum_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.rowNum)
}

// repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.ROW_INFO rowData = 2;
inline int MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::rowdata_size() const {
  return rowdata_.size();
}
inline void MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::clear_rowdata() {
  rowdata_.Clear();
}
inline const ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO& MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::rowdata(int index) const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.rowData)
  return rowdata_.Get(index);
}
inline ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::mutable_rowdata(int index) {
  // @@protoc_insertion_point(field_mutable:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.rowData)
  return rowdata_.Mutable(index);
}
inline ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO* MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::add_rowdata() {
  // @@protoc_insertion_point(field_add:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.rowData)
  return rowdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO >&
MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::rowdata() const {
  // @@protoc_insertion_point(field_list:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.rowData)
  return rowdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO_ROW_INFO >*
MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO::mutable_rowdata() {
  // @@protoc_insertion_point(field_mutable_list:MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO.rowData)
  return &rowdata_;
}

// -------------------------------------------------------------------

// MSG_DS_CS_DATA_UPLOAD

// required string dbName = 1;
inline bool MSG_DS_CS_DATA_UPLOAD::has_dbname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD::set_has_dbname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_CS_DATA_UPLOAD::clear_has_dbname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_CS_DATA_UPLOAD::clear_dbname() {
  if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_->clear();
  }
  clear_has_dbname();
}
inline const ::std::string& MSG_DS_CS_DATA_UPLOAD::dbname() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.dbName)
  return *dbname_;
}
inline void MSG_DS_CS_DATA_UPLOAD::set_dbname(const ::std::string& value) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.dbName)
}
inline void MSG_DS_CS_DATA_UPLOAD::set_dbname(const char* value) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_DS_CS_DATA_UPLOAD.dbName)
}
inline void MSG_DS_CS_DATA_UPLOAD::set_dbname(const char* value, size_t size) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_DS_CS_DATA_UPLOAD.dbName)
}
inline ::std::string* MSG_DS_CS_DATA_UPLOAD::mutable_dbname() {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_DS_CS_DATA_UPLOAD.dbName)
  return dbname_;
}
inline ::std::string* MSG_DS_CS_DATA_UPLOAD::release_dbname() {
  clear_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dbname_;
    dbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DS_CS_DATA_UPLOAD::set_allocated_dbname(::std::string* dbname) {
  if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbname_;
  }
  if (dbname) {
    set_has_dbname();
    dbname_ = dbname;
  } else {
    clear_has_dbname();
    dbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_DS_CS_DATA_UPLOAD.dbName)
}

// required string tableName = 2;
inline bool MSG_DS_CS_DATA_UPLOAD::has_tablename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD::set_has_tablename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_CS_DATA_UPLOAD::clear_has_tablename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_CS_DATA_UPLOAD::clear_tablename() {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_->clear();
  }
  clear_has_tablename();
}
inline const ::std::string& MSG_DS_CS_DATA_UPLOAD::tablename() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.tableName)
  return *tablename_;
}
inline void MSG_DS_CS_DATA_UPLOAD::set_tablename(const ::std::string& value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.tableName)
}
inline void MSG_DS_CS_DATA_UPLOAD::set_tablename(const char* value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG_DS_CS_DATA_UPLOAD.tableName)
}
inline void MSG_DS_CS_DATA_UPLOAD::set_tablename(const char* value, size_t size) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG_DS_CS_DATA_UPLOAD.tableName)
}
inline ::std::string* MSG_DS_CS_DATA_UPLOAD::mutable_tablename() {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSG_DS_CS_DATA_UPLOAD.tableName)
  return tablename_;
}
inline ::std::string* MSG_DS_CS_DATA_UPLOAD::release_tablename() {
  clear_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tablename_;
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DS_CS_DATA_UPLOAD::set_allocated_tablename(::std::string* tablename) {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablename_;
  }
  if (tablename) {
    set_has_tablename();
    tablename_ = tablename;
  } else {
    clear_has_tablename();
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSG_DS_CS_DATA_UPLOAD.tableName)
}

// repeated .MSG_DS_CS_DATA_UPLOAD.TABLE_DICT_INFO colDictData = 3;
inline int MSG_DS_CS_DATA_UPLOAD::coldictdata_size() const {
  return coldictdata_.size();
}
inline void MSG_DS_CS_DATA_UPLOAD::clear_coldictdata() {
  coldictdata_.Clear();
}
inline const ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO& MSG_DS_CS_DATA_UPLOAD::coldictdata(int index) const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.colDictData)
  return coldictdata_.Get(index);
}
inline ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO* MSG_DS_CS_DATA_UPLOAD::mutable_coldictdata(int index) {
  // @@protoc_insertion_point(field_mutable:MSG_DS_CS_DATA_UPLOAD.colDictData)
  return coldictdata_.Mutable(index);
}
inline ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO* MSG_DS_CS_DATA_UPLOAD::add_coldictdata() {
  // @@protoc_insertion_point(field_add:MSG_DS_CS_DATA_UPLOAD.colDictData)
  return coldictdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO >&
MSG_DS_CS_DATA_UPLOAD::coldictdata() const {
  // @@protoc_insertion_point(field_list:MSG_DS_CS_DATA_UPLOAD.colDictData)
  return coldictdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO >*
MSG_DS_CS_DATA_UPLOAD::mutable_coldictdata() {
  // @@protoc_insertion_point(field_mutable_list:MSG_DS_CS_DATA_UPLOAD.colDictData)
  return &coldictdata_;
}

// repeated .MSG_DS_CS_DATA_UPLOAD.ROW_TABLE_INFO rowTableData = 4;
inline int MSG_DS_CS_DATA_UPLOAD::rowtabledata_size() const {
  return rowtabledata_.size();
}
inline void MSG_DS_CS_DATA_UPLOAD::clear_rowtabledata() {
  rowtabledata_.Clear();
}
inline const ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO& MSG_DS_CS_DATA_UPLOAD::rowtabledata(int index) const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.rowTableData)
  return rowtabledata_.Get(index);
}
inline ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO* MSG_DS_CS_DATA_UPLOAD::mutable_rowtabledata(int index) {
  // @@protoc_insertion_point(field_mutable:MSG_DS_CS_DATA_UPLOAD.rowTableData)
  return rowtabledata_.Mutable(index);
}
inline ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO* MSG_DS_CS_DATA_UPLOAD::add_rowtabledata() {
  // @@protoc_insertion_point(field_add:MSG_DS_CS_DATA_UPLOAD.rowTableData)
  return rowtabledata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO >&
MSG_DS_CS_DATA_UPLOAD::rowtabledata() const {
  // @@protoc_insertion_point(field_list:MSG_DS_CS_DATA_UPLOAD.rowTableData)
  return rowtabledata_;
}
inline ::google::protobuf::RepeatedPtrField< ::MSG_DS_CS_DATA_UPLOAD_ROW_TABLE_INFO >*
MSG_DS_CS_DATA_UPLOAD::mutable_rowtabledata() {
  // @@protoc_insertion_point(field_mutable_list:MSG_DS_CS_DATA_UPLOAD.rowTableData)
  return &rowtabledata_;
}

// required uint32 taskID = 5;
inline bool MSG_DS_CS_DATA_UPLOAD::has_taskid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_DS_CS_DATA_UPLOAD::set_has_taskid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_DS_CS_DATA_UPLOAD::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_DS_CS_DATA_UPLOAD::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 MSG_DS_CS_DATA_UPLOAD::taskid() const {
  // @@protoc_insertion_point(field_get:MSG_DS_CS_DATA_UPLOAD.taskID)
  return taskid_;
}
inline void MSG_DS_CS_DATA_UPLOAD::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_DS_CS_DATA_UPLOAD.taskID)
}

// -------------------------------------------------------------------

// MSG_CS_DS_DATA_UPLOAD_ACK

// required uint32 taskID = 1;
inline bool MSG_CS_DS_DATA_UPLOAD_ACK::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_CS_DS_DATA_UPLOAD_ACK::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_CS_DS_DATA_UPLOAD_ACK::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_CS_DS_DATA_UPLOAD_ACK::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 MSG_CS_DS_DATA_UPLOAD_ACK::taskid() const {
  // @@protoc_insertion_point(field_get:MSG_CS_DS_DATA_UPLOAD_ACK.taskID)
  return taskid_;
}
inline void MSG_CS_DS_DATA_UPLOAD_ACK::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:MSG_CS_DS_DATA_UPLOAD_ACK.taskID)
}

// required int32 statusCode = 2;
inline bool MSG_CS_DS_DATA_UPLOAD_ACK::has_statuscode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_CS_DS_DATA_UPLOAD_ACK::set_has_statuscode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_CS_DS_DATA_UPLOAD_ACK::clear_has_statuscode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_CS_DS_DATA_UPLOAD_ACK::clear_statuscode() {
  statuscode_ = 0;
  clear_has_statuscode();
}
inline ::google::protobuf::int32 MSG_CS_DS_DATA_UPLOAD_ACK::statuscode() const {
  // @@protoc_insertion_point(field_get:MSG_CS_DS_DATA_UPLOAD_ACK.statusCode)
  return statuscode_;
}
inline void MSG_CS_DS_DATA_UPLOAD_ACK::set_statuscode(::google::protobuf::int32 value) {
  set_has_statuscode();
  statuscode_ = value;
  // @@protoc_insertion_point(field_set:MSG_CS_DS_DATA_UPLOAD_ACK.statusCode)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE>() {
  return ::MSG_DS_CS_DATA_UPLOAD_TABLE_DICT_INFO_COL_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MSG_5fDS_5fCS_5fDATA_5fUPLOAD_2eproto__INCLUDED
